{"version":3,"sources":["modules/services/client_fetch.js","modules/merchant/index.js","modules/transactions/index.js","modules/navbar/index.js","modules/bank_partners/index.js","modules/service_provider/index.js","modules/referral_partners/index.js","modules/sabpaisa_holding_banks/index.js","modules/settlement/index.js","modules/login/index.js","modules/dashboard/components/cards.js","modules/dashboard/components/card2.js","modules/dashboard/index.js","modules/Single bank account fund management system/components/input_beni.js","modules/Single bank account fund management system/components/fileupload.js","modules/Single bank account fund management system/components/modelfile.js","modules/Single bank account fund management system/components/noProjects.js","modules/Single bank account fund management system/components/project_input_model.js","modules/Single bank account fund management system/components/projectcompo.js","modules/Single bank account fund management system/index.js","modules/images/default.jpg","modules/User Management/index.js","modules/Disbursment/compo/Account Verification/index.js","modules/services/tempservice/firebase_services.js","modules/Disbursment/compo/Report/index.js","modules/Disbursment/compo/Mass Disbursment/index.js","modules/Disbursment/index.js","App.js","reportWebVitals.js","modules/reducer/reducer1.js","modules/services/tempservice/firebase_config.js","index.js"],"names":["postData","link","data","a","axios","post","response","getData","get","deleteData","delete","putData","put","index","state","payConfigModal","bankDetailsModal","Merchant","bankDetailsList","funds","bankPartnersFundConfig","ReferralPartnerFundConfig","ServiceProvidersFundConfig","SabPaisaFundConfig","bank_input","bank_delete","view","Loading","sp_fee_type_bank","sp_fee_type_referral","sp_fee_type_sabPaisa","fundModes","fundShareTypes","merchant_code","bankPartners","referralPartners","serviceProviders","searchflag","pageLength","searchtemplist","searchTerm","currentPage","bankDetails","first","last","this","setState","console","log","clientList","clientMerchantDetailsList","clientLength","length","slice","templist","forEach","value","push","fetchData","loadConstants","method","url","headers","then","res","fund_mode","catch","error","JSON","stringify","fund_share_type","tempRequestConfig","concat","requestData","bodyFormData","FormData","append","Helmet","name","content","className","Card","Body","InputGroup","onChange","e","target","list","filter","clientId","clientName","clientCode","includes","toString","FormControl","placeholder","aria-label","aria-describedby","Append","Table","striped","bordered","hover","responsive","map","Last_SettlementDate","Button","variant","onClick","merchant_fund_config","style","fontWeight","icon","faRupeeSign","faUniversity","Pagination","i","len","val","Item","active","Spinner","animation","Modal","dialogClassName","show","onHide","aria-labelledby","centered","spinner","Header","closeButton","Title","id","paddingRight","Form","Check","inline","label","type","config_type","config_type_id","fund_config_id","mode_id","share_type_id","share_type","share_type_rate","rate_amount","from_amount","to_amount","faPlus","fontSize","href","faTimes","ref","master_fund_config","temp","row","bankName","mode","bank","sharing_type","referralName","updateFundConfig","faSave","size","ac_holder_name","account_no","IFSC","title","faEdit","faTrashAlt","option","Group","controlId","Label","Control","Component","Transaction","Transaction_ID","Merchant_Code","Mode_of_Payment","Total_Amount","Payment_Status","Merchant_Amount","charges","refund","disputed","create_ticket","remarks","toggle_payconfig","toggle_bankDetails","selected","disabled","hidden","faUndoAlt","faHandshakeAltSlash","faCommentAlt","faMoneyBill","values","Bank_partners","Service_Provider","Referral_Partners","as","rows","Bank_Partners","contact_person","NavBar","navOpen","Navbar","bg","Brand","src","height","alt","Toggle","Collapse","Nav","Link","props","user","localStorage","removeItem","Auth","faSignOutAlt","to","current","color","padding","Dropdown","React","forwardRef","children","marginTop","isOpen","menuClicked","preventDefault","width","strokeWidth","rotate","borderRadius","animationDuration","Menu","connect","dispatch","password","createBankPartner","detailsId","bankDetailsUpdate","currentVals","bank_update","bankLoading","loading","bank_partner_id","NewAddtion","bankdata","BankList","BankLength","Math","ceil","BankMerchantDetailsList","detailsid","accountHolderName","accountNum","ifscCode","fetchBankPartners","contactPerson","email","phoneNum","phone_no","Ifsc","accountNumber","ifsc","typr","addBankPartners","bank_name","contact_number","status","defaultValue","bankupdate","editData","currentvals","editbankDetails","serviceProviderFundConfig","service_provider_id","defaultvalue","Service_Provider_Name","referral_partner_id","SubPaisaHolding","bank_id","faPlusCircle","addition","totalPending","totalAmounttobe","totalAmount","Proceed","Settlement","checked","Merchant_Id","Merchant_Name","Pending_Settlement_amount","Amount_to_settle","faArrowRight","Checkbox","Text","passcode","getItem","toast","Col","xs","Toast","onClose","history","useHistory","setItem","cards","number","onclick","Sabpaisa","fluid","Container","ProgressBar","now","block","merchant","Row","faSearch","referral","service","trans","sabpaisa","card2","Models","Beneficiary_detail","onhide","pro","Benificiary_name","Benificiary_number","bank_account","amount","onSubmit","UploadModels","zero","upload","Beneficiary","benificary","faUpload","colSpan","beni","noProjects","project_detail","project_name","project_location","poc_name","poc_contact_number","amount_of_project","Project","beneficiary","beni_settlement","projects","project","beneficiary_List","Index","models","noProject","vals","userid","createModel","editModel","selectAll","viewModel","tempUser","UserRoles","RolemanagementModel","users","Manage","heading","dp","activate","image","roundedRowor","imageWidth","imageHeight","roundedSize","readOnly","role","designation","phone","Footer","access","settlement","invoicing","transactions","RoleManagement","displayPic","ind","faEye","check","uploadFile","tobeUploaded","init","getRef","backdrop","keyboard","setFile","files","readXlsxFile","UploadModel","OverlayTrigger","placement","overlay","Tooltip","toReportOn","removeall","add","tobe","remove","addData","collection","firestore","firebase","col","realTime","func","onSnapshot","retriveData","querry","where","dataref","docs","docid","doc","updateData","update","reports","datalist","index1","Name","Bank","Amount","VerificationStatus","faCheckCircle","firebase_service","path","internalRef","interreflist","valuei","indexi","addRef","Fetch","ViewReport","fileName","textDecoration","faDownload","Mass","total_Amount","finalPopUp","toRepots","reportRef","parseInt","SaveToRepots","PopUp","Account_verification_childref","Reports_childref","veriSta","veriText","acVeri","editBeni","entries","uploaddata","EditVa","tempVal","ProceedReal","totalProceeddataAmount","Proceeddata","currentTab","Bank_Number","IFSC_code","veriStatus","Bank_Name","Prepend","Object","keys","reduce","acc","indexs","value1","setTimeout","VerificationModel","Edit","Tabs","defaultActiveKey","onSelect","Tab","eventKey","document","getElementById","faTrash","toReportOff","dataremove","tobe1","toberef","dataadd","marginRight","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducer1","action","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.0f162e4d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nvar postData= async(link,data)=>{\r\n\r\n    var response = await axios.post(link,data);\r\n    \r\n    return response.data;\r\n}\r\nvar getData = async (link)=>{\r\n    var response = await axios.get(link);\r\n    \r\n    return response.data;\r\n}\r\nvar deleteData = async (link)=>{\r\n    var response = await axios.delete(link);\r\n    return response.data;\r\n}\r\nvar putData =async (link)=>{\r\nvar response = await axios.put(link);\r\nreturn response.data;\r\n}\r\nexport default {getData:getData,postData:postData,deleteData:deleteData,putData:putData};","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal, Spinner, Form } from 'react-bootstrap';\r\nimport './index.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faPlus, faRupeeSign, faTimes, faTrashAlt, faSave, faUniversity } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport get from \"../services/client_fetch\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader';\r\n\r\n\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nclass index extends Component {\r\n    state = {\r\n        payConfigModal: false,\r\n        bankDetailsModal: false,\r\n        Merchant: [],\r\n        bankDetailsList: [],\r\n        funds: [],\r\n        bankPartnersFundConfig: [],\r\n        ReferralPartnerFundConfig: [],\r\n        ServiceProvidersFundConfig: [],\r\n        SabPaisaFundConfig: [],\r\n        bank_input: false,\r\n        bank_delete: { view: false, index: -1 },\r\n        Loading: true,\r\n        sp_fee_type_bank: 'flat',\r\n        sp_fee_type_referral: \"flat\",\r\n        sp_fee_type_sabPaisa: 'flat',\r\n\r\n\r\n        fundModes: [],\r\n        fundShareTypes: [],\r\n\r\n        merchant_code: '',\r\n\r\n        bankPartners: [],\r\n        referralPartners: [],\r\n        serviceProviders: [],\r\n\r\n    }\r\n\r\n\r\n    searchflag = false;\r\n\r\n\r\n    pageLength = 0;\r\n    searchtemplist = [];\r\n    data = null;\r\n\r\n    async fetchData(first = 0, last = 10) {\r\n\r\n        if (this.data == null) {\r\n            let data = {\r\n                \"clientUserId\": \"YoY109@sp\",\r\n                \"userPassword\": \"YeWe56KbOv8yq\"\r\n            };\r\n            var link = 'https://spl.sabpaisa.in/clientOnBoarding/fetchMerchantListUsingLogin';\r\n\r\n            var response = await get.postData(link, data);\r\n            this.setState({ Loading: false });\r\n            this.data = response;\r\n            console.log(this.data);\r\n            this.searchtemplist = this.data;\r\n        }\r\n\r\n        var clientList = this.searchflag ? this.searchtemplist : this.searchtemplist.clientMerchantDetailsList;\r\n        console.log(clientList);\r\n        var clientLength = clientList.length;\r\n\r\n        this.pageLength = clientLength / 100;\r\n\r\n        var clientMerchantDetailsList = clientList.slice(first, last);\r\n        var templist = [];\r\n        clientMerchantDetailsList.forEach((value, index) => {\r\n\r\n\r\n            templist.push(value);\r\n\r\n            this.setState({ Merchant: templist });\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchData(0, 10);\r\n        this.loadConstants();\r\n    }\r\n\r\n    loadConstants() {\r\n        // load payment modes => \r\n\r\n        // var responseFundModes = axios.get('http://46.137.196.214/apisp/funds/fetchModes').then(res => {\r\n\r\n        // });\r\n\r\n\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchModes`,\r\n            // data: bodyFormData,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Sec-Fetch-Dest': 'empty',\r\n                // 'Sec-Fetch-Mode': 'cors',\r\n                // 'Sec-Fetch-Site': 'cross-site',\r\n                // 'Access-Control-Allow-Origin': '*',\r\n                // 'Access-Control-Allow-Methods': 'POST, PUT, GET, OPTIONS, DELETE'\r\n            }\r\n        }).then(res => {\r\n            console.log(\"modes loaded :::::::\");\r\n            console.log(res.data.fund_mode);\r\n            this.setState({\r\n                fundModes: res.data.fund_mode,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n        // load share types =>\r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchShareType`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"share type loaded :::::::\");\r\n            console.log(res.data.fund_share_type);\r\n            this.setState({\r\n                fundShareTypes: res.data.fund_share_type,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n        // load bank partners =>\r\n        axios({\r\n            method: 'get',\r\n            url: `http://13.126.251.174:8081/bank-partners`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"bank partners loaded :::::::\");\r\n            console.log(res.data);\r\n            this.setState({\r\n                bankPartners: res.data,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n        // load referral partners =>\r\n        axios({\r\n            method: 'get',\r\n            url: `http://13.126.251.174:8082/referral-partners`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"referral partners loaded :::::::\");\r\n            console.log(res.data);\r\n            this.setState({\r\n                referralPartners: res.data,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n        // load service providers =>\r\n        axios({\r\n            method: 'get',\r\n            url: `http://13.126.251.174:8084/svc-providers`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"service providers loaded :::::::\");\r\n            console.log(res.data);\r\n            this.setState({\r\n                serviceProviders: res.data,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n\r\n    searchTerm = '';\r\n    currentPage = 1;\r\n\r\n    bankDetails = {};\r\n\r\n    updateFundConfig() {\r\n\r\n        var tempRequestConfig = [];\r\n\r\n        tempRequestConfig = tempRequestConfig.concat(this.state.bankPartnersFundConfig);\r\n        tempRequestConfig = tempRequestConfig.concat(this.state.ReferralPartnerFundConfig);\r\n        tempRequestConfig = tempRequestConfig.concat(this.state.ServiceProvidersFundConfig);\r\n        tempRequestConfig = tempRequestConfig.concat(this.state.SabPaisaFundConfig);\r\n\r\n\r\n        console.log(\" tempRequestConfig :::::::::::\");\r\n        console.log(tempRequestConfig);\r\n\r\n        var requestData = JSON.stringify(tempRequestConfig);\r\n        console.log(requestData);\r\n\r\n\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('request_data', requestData);\r\n        // bodyFormData.append('password', this.state.password);\r\n        // load payment modes => \r\n        axios({\r\n            method: 'post',\r\n            url: `http://46.137.196.214/apisp/funds/updateMerchantFundConfig`,\r\n            data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"update config response :::::::\");\r\n            console.log(res.data);\r\n            // this.setState({\r\n            //     fundModes: res.data.fund_mode,\r\n            // })\r\n\r\n            this.setState({\r\n                payConfigModal: false\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Merchants</title>\r\n                    <meta name=\"description\" content=\"Helmet application\" />\r\n                </Helmet>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <h3 className=\"mb-0\">Merchants</h3>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <InputGroup className=\"mb-0\" onChange={(e) => {\r\n                                            this.searchflag = true;\r\n                                            this.searchTerm = e.target.value;\r\n                                            var list = this.data.clientMerchantDetailsList;\r\n                                            list = list.filter((data) => data.clientId == this.searchTerm || data.clientName == this.searchTerm || data.clientCode == this.searchTerm || data.clientName.includes(this.searchTerm) || data.clientId.toString().includes(this.searchTerm) || data.clientCode.toString().includes(this.searchTerm));\r\n                                            this.searchtemplist = list;\r\n                                            this.setState({ Merchant: list });\r\n                                            console.log(e.target.value);\r\n                                            this.pageLength = list.length / 100;\r\n                                            if (e.target.value == \"\") {\r\n                                                this.fetchData(0 * 10, (0 * 10) + 10);\r\n                                                this.currentPage = 1;\r\n                                                this.searchtemplist = this.data;\r\n                                                this.searchflag = false;\r\n                                            }\r\n\r\n                                        }}>\r\n                                            <FormControl\r\n                                                placeholder=\"search here...\"\r\n                                                aria-label=\"search here...\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                            />\r\n                                            <InputGroup.Append>\r\n\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Merchant ID#</th>\r\n                                            <th>Merchant Code</th>\r\n                                            <th>Merchant Name</th>\r\n                                            <th>Last Settlement Date</th>\r\n                                            <th>Settled Transaction</th>\r\n                                            <th>Pending Settlements Txns</th>\r\n                                            <th>Refunded Transactions</th>\r\n                                            <th>Disputed Transaction</th>\r\n                                            <th>All Transaction</th>\r\n                                            <th>Fund Sharing Configuration</th>\r\n                                            <th>Bank Details</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n\r\n                                        {this.state.Merchant.map((value, index) => {\r\n\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.clientId}</td>\r\n                                                    <td>{value.clientCode}</td>\r\n                                                    <td>{value.clientName}</td>\r\n                                                    <td>{value.Last_SettlementDate}</td>\r\n                                                    <td>blank</td>\r\n                                                    <td>blank</td>\r\n                                                    <td>blank</td>\r\n                                                    <td>blank</td>\r\n                                                    <td>blank</td>\r\n                                                    <td>\r\n                                                        <Button variant=\"primary\" className=\"btn-block\" onClick={() => {\r\n                                                            this.setState({ merchant_code: value.clientCode });\r\n                                                            this.setState({ bankPartnersFundConfig: [] })\r\n                                                            this.setState({ ServiceProvidersFundConfig: [] })\r\n                                                            this.setState({ ReferralPartnerFundConfig: [] })\r\n                                                            this.setState({ SabPaisaFundConfig: [] })\r\n\r\n                                                            // load fund config => \r\n                                                            axios({\r\n                                                                method: 'get',\r\n                                                                url: `http://46.137.196.214/apisp/funds/fetchMerchantFundConfig/` + value.clientCode + `/bank_partner`,\r\n                                                                // data: bodyFormData,\r\n                                                                headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                            }).then(res => {\r\n                                                                console.log(\"fund config loaded :::::::\");\r\n                                                                console.log(res.data.merchant_fund_config);\r\n\r\n                                                                this.setState({ bankPartnersFundConfig: res.data.merchant_fund_config })\r\n                                                                // this.setState({ payConfigModal: true });\r\n\r\n                                                            }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n\r\n                                                            // load fund config => \r\n                                                            axios({\r\n                                                                method: 'get',\r\n                                                                url: `http://46.137.196.214/apisp/funds/fetchMerchantFundConfig/` + value.clientCode + `/referral_partner`,\r\n                                                                // data: bodyFormData,\r\n                                                                headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                            }).then(res => {\r\n                                                                console.log(\"fund config loaded :::::::\");\r\n                                                                console.log(res.data.merchant_fund_config);\r\n\r\n                                                                this.setState({ ReferralPartnerFundConfig: res.data.merchant_fund_config })\r\n                                                                // this.setState({ payConfigModal: true });\r\n\r\n                                                            }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n\r\n                                                            // load fund config => \r\n                                                            axios({\r\n                                                                method: 'get',\r\n                                                                url: `http://46.137.196.214/apisp/funds/fetchMerchantFundConfig/` + value.clientCode + `/service_provider`,\r\n                                                                // data: bodyFormData,\r\n                                                                headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                            }).then(res => {\r\n                                                                console.log(\"fund config loaded :::::::\");\r\n                                                                console.log(res.data.merchant_fund_config);\r\n\r\n                                                                this.setState({ ServiceProvidersFundConfig: res.data.merchant_fund_config })\r\n                                                                // this.setState({ payConfigModal: true });\r\n\r\n                                                            }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n\r\n                                                            // load fund config => \r\n                                                            axios({\r\n                                                                method: 'get',\r\n                                                                url: `http://46.137.196.214/apisp/funds/fetchMerchantFundConfig/` + value.clientCode + `/sabpaisa`,\r\n                                                                // data: bodyFormData,\r\n                                                                headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                            }).then(res => {\r\n                                                                console.log(\"fund config loaded :::::::\");\r\n                                                                console.log(res.data.merchant_fund_config);\r\n\r\n                                                                this.setState({ SabPaisaFundConfig: res.data.merchant_fund_config })\r\n                                                                // this.setState({ payConfigModal: true });\r\n\r\n                                                            }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n                                                            this.setState({ payConfigModal: true });\r\n\r\n\r\n                                                        }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faRupeeSign} /> Config</Button>{' '}\r\n                                                        {/* <Button variant=\"primary\" className=\"btn-block\" onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faRupeeSign} /> Config</Button>{' '} */}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button variant=\"info\" className=\"btn-block\" onClick={() => { this.setState({ bankDetailsModal: true }); }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faUniversity} /></Button>{' '}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                                <Pagination>\r\n                                    {/* <Pagination.First />\r\n                                <Pagination.Prev /> */}\r\n                                    {(() => {\r\n\r\n                                        var i = [];\r\n                                        var len = 0;\r\n                                        while (len < this.pageLength) {\r\n                                            let val = len + 1\r\n                                            let path = \"/page/\" + val;\r\n                                            // console.log(len);\r\n                                            i.push((<Pagination.Item onClick={(e) => {\r\n                                                this.currentPage = val;\r\n                                                this.fetchData(val * 10, (val * 10) + 10);\r\n\r\n\r\n                                            }} active={val === this.currentPage}>{val}</Pagination.Item>));\r\n                                            len++;\r\n                                        }\r\n                                        return i;\r\n                                    })()}\r\n                                    {/* <Pagination.Next />\r\n                                <Pagination.Last /> */}\r\n                                </Pagination>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        {this.state.Loading ?\r\n                            (<Spinner animation=\"border\" style={{ \"margin-left\": \"50%\", }} />) : (<></>)}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Modal\r\n                    // size=\"lg\"\r\n                    dialogClassName=\"modal-90w\"\r\n                    show={this.state.payConfigModal}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            payConfigModal: false,\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                    centered>\r\n                    <LoadingOverlay\r\n                        active={false}\r\n                        spinner={<ClimbingBoxLoader />}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Merchant Fund Config</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\" >\r\n                                    <label style={{ paddingRight: '20px', fontWeight: 'bold' }}>Bear By</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <Form.Check inline label=\"Merchant\" type={'radio'} name=\"bear_by\" id={`inline-${'radio'}-1`} />\r\n                                    <Form.Check inline label=\"User\" type={'radio'} name=\"bear_by\" id={`inline-${'radio'}-2`} />\r\n                                    <Form.Check inline label=\"Other\" type={'radio'} name=\"bear_by\" id={`inline-${'radio'}-3`} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row border-top pt-3 pb-3\">\r\n                                <div className=\"col-2\" >\r\n                                    <label style={{ paddingRight: '20px', fontWeight: 'bold' }}>Bank Partner</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <Button variant=\"primary\" className=\"btn-sm\" onClick={(e) => {\r\n                                        var list = this.state.bankPartnersFundConfig;\r\n                                        // list.push({ sp_fee_type_bank: \"flat\", value: \"%\" });\r\n                                        list.push({ config_type: \"bank_partner\", config_type_id: '', fund_config_id: 0, merchant_code: this.state.merchant_code, mode_id: \"1\", share_type_id: \"1\", share_type: 'flat', share_type_rate: 'rate', rate_amount: '', from_amount: '', to_amount: '' });\r\n                                        this.setState({ bankPartnersFundConfig: list });\r\n\r\n                                    }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n                            {this.state.bankPartnersFundConfig.map((value, index) => (\r\n                                <div className=\"row pb-3\" >\r\n                                    <div className=\"col-2\">\r\n                                        {/* <div className=\"float-right text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                            <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                var list = this.state.bankPartnersFundConfig;\r\n                                                list = list.filter((value, i) => index != i);\r\n                                                this.setState({ bankPartnersFundConfig: list });\r\n                                            }} icon={faTimes} /></a>\r\n                                        </div> */}\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-2\">\r\n                                                <div className=\"text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                                    <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                        var list = this.state.bankPartnersFundConfig;\r\n                                                        list = list.filter((value, i) => index != i);\r\n                                                        this.setState({ bankPartnersFundConfig: list });\r\n                                                    }} icon={faTimes} /></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-10\">\r\n                                                <select className=\"form-control\"\r\n                                                    value={this.state.bankPartnersFundConfig[index].config_type_id}\r\n                                                    onChange={(e) => {\r\n                                                        var ref = this.state.bankPartnersFundConfig;\r\n                                                        ref[index].config_type_id = e.target.value;\r\n                                                        this.setState({ bankPartnersFundConfig: ref });\r\n\r\n                                                        axios({\r\n                                                            method: 'get',\r\n                                                            url: `http://46.137.196.214/apisp/funds/fetchMasterFundConfig/bank_partner/` + e.target.value,\r\n                                                            // data: bodyFormData,\r\n                                                            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                        }).then(res => {\r\n                                                            console.log(\"fund config loaded :::::::\");\r\n                                                            console.log(res.data.master_fund_config);\r\n\r\n\r\n\r\n\r\n                                                            var temp = this.state.bankPartnersFundConfig.concat(res.data.master_fund_config)\r\n                                                            this.setState({ bankPartnersFundConfig: temp, })\r\n\r\n                                                            this.setState({ payConfigModal: true });\r\n\r\n                                                            var list = this.state.bankPartnersFundConfig;\r\n                                                            list = list.filter((value, i) => index != i);\r\n                                                            this.setState({ bankPartnersFundConfig: list });\r\n\r\n                                                        }).catch(error => { console.log(JSON.stringify(error)) });\r\n                                                    }}\r\n                                                >\r\n                                                    <option value=\"\"></option>\r\n                                                    {this.state.bankPartners.map((row, index) => (\r\n                                                        <option value={row.id}>{row.bankName}</option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.bankPartnersFundConfig[index].mode_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].mode_id = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        >\r\n                                            {this.state.fundModes.map((row, index) => (\r\n                                                <option value={row.id}>{row.mode}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.bankPartnersFundConfig[index].share_type_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].share_type_id = e.target.value;\r\n\r\n                                                this.state.fundShareTypes\r\n                                                    .filter(bank => bank.id === e.target.value)\r\n                                                    .map(bank => {\r\n                                                        ref[index].share_type = bank.sharing_type;\r\n                                                        ref[index].share_type_rate = bank.type;\r\n                                                        console.log(bank);\r\n                                                    })\r\n\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}>\r\n                                            {this.state.fundShareTypes.map((row, index) => (\r\n                                                <option value={row.id}>{row.name}</option>\r\n                                            ))}\r\n                                            {/* <option value=\"flat\">Flat</option>\r\n                                            <option value=\"range\">Range</option> */}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {/* {this.state.sp_fee_type == 'flat' ? */}\r\n\r\n                                        {this.state.bankPartnersFundConfig[index].share_type_rate == 'rate' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder='%'\r\n                                                value={this.state.bankPartnersFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }} />\r\n                                            : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\"\r\n                                                value={this.state.bankPartnersFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                        }\r\n\r\n                                        {/* <input type=\"text\" className=\"form-control\" placeholder='%' value={value.value == \"%\" ? null : value.value}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].value = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        /> */}\r\n\r\n                                        {/* : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" /> */}\r\n                                        {/* } */}\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.bankPartnersFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"From Amount\"\r\n                                                value={this.state.bankPartnersFundConfig[index].from_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].from_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.bankPartnersFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"To Amount\"\r\n                                                value={this.state.bankPartnersFundConfig[index].to_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].to_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <div className=\"row border-top pt-3 pb-3\">\r\n                                <div className=\"col-2\" >\r\n                                    <label style={{ paddingRight: '20px', fontWeight: 'bold' }}>Referral Partner</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <Button variant=\"primary\" className=\"btn-sm\" onClick={() => {\r\n                                        var list = this.state.ReferralPartnerFundConfig;\r\n                                        list.push({ config_type: \"referral_partner\", config_type_id: '', fund_config_id: 0, merchant_code: this.state.merchant_code, mode_id: \"1\", share_type_id: \"1\", share_type: 'flat', share_type_rate: 'rate', rate_amount: '', from_amount: '', to_amount: '' });\r\n                                        this.setState({ ReferralPartnerFundConfig: list, value: \"%\" });\r\n                                    }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {this.state.ReferralPartnerFundConfig.map((value, index) => (\r\n                                <div className=\"row pb-3\" >\r\n                                    <div className=\"col-2\">\r\n                                        {/* <div className=\"float-right text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                            <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                var list = this.state.ReferralPartnerFundConfig;\r\n                                                list = list.filter((value, i) => index != i);\r\n                                                this.setState({ ReferralPartnerFundConfig: list });\r\n                                            }} icon={faTimes} /></a>\r\n                                        </div> */}\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-2\">\r\n                                                <div className=\"text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                                    <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                        var list = this.state.ReferralPartnerFundConfig;\r\n                                                        list = list.filter((value, i) => index != i);\r\n                                                        this.setState({ ReferralPartnerFundConfig: list });\r\n                                                    }} icon={faTimes} /></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-10\">\r\n                                                <select className=\"form-control\"\r\n                                                    value={this.state.ReferralPartnerFundConfig[index].config_type_id}\r\n                                                    onChange={(e) => {\r\n                                                        var ref = this.state.ReferralPartnerFundConfig;\r\n                                                        ref[index].config_type_id = e.target.value;\r\n                                                        this.setState({ ReferralPartnerFundConfig: ref });\r\n\r\n                                                        axios({\r\n                                                            method: 'get',\r\n                                                            url: `http://46.137.196.214/apisp/funds/fetchMasterFundConfig/referral_partner/` + e.target.value,\r\n                                                            // data: bodyFormData,\r\n                                                            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                        }).then(res => {\r\n                                                            console.log(\"fund config loaded :::::::\");\r\n                                                            console.log(res.data.master_fund_config);\r\n\r\n                                                            var temp = this.state.ReferralPartnerFundConfig.concat(res.data.master_fund_config)\r\n                                                            this.setState({ ReferralPartnerFundConfig: temp, })\r\n\r\n                                                            this.setState({ payConfigModal: true });\r\n\r\n                                                            var list = this.state.ReferralPartnerFundConfig;\r\n                                                            list = list.filter((value, i) => index != i);\r\n                                                            this.setState({ ReferralPartnerFundConfig: list });\r\n\r\n                                                        }).catch(error => { console.log(JSON.stringify(error)) });\r\n                                                    }}\r\n                                                >\r\n                                                    <option value=\"\"></option>\r\n                                                    {this.state.referralPartners.map((row, index) => (\r\n                                                        <option value={row.id}>{row.referralName}</option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.ReferralPartnerFundConfig[index].mode_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.ReferralPartnerFundConfig;\r\n                                                ref[index].mode_id = e.target.value;\r\n                                                this.setState({ ReferralPartnerFundConfig: ref });\r\n                                            }}\r\n                                        >\r\n                                            {this.state.fundModes.map((row, index) => (\r\n                                                <option value={row.id}>{row.mode}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.ReferralPartnerFundConfig[index].share_type_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.ReferralPartnerFundConfig;\r\n                                                ref[index].share_type_id = e.target.value;\r\n\r\n                                                this.state.fundShareTypes\r\n                                                    .filter(bank => bank.id === e.target.value)\r\n                                                    .map(bank => {\r\n                                                        ref[index].share_type = bank.sharing_type;\r\n                                                        ref[index].share_type_rate = bank.type;\r\n                                                        console.log(bank);\r\n                                                    })\r\n\r\n                                                this.setState({ ReferralPartnerFundConfig: ref });\r\n                                            }}>\r\n                                            {this.state.fundShareTypes.map((row, index) => (\r\n                                                <option value={row.id}>{row.name}</option>\r\n                                            ))}\r\n                                            {/* <option value=\"flat\">Flat</option>\r\n                                            <option value=\"range\">Range</option> */}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {/* {this.state.sp_fee_type == 'flat' ? */}\r\n\r\n                                        {this.state.ReferralPartnerFundConfig[index].share_type_rate == 'rate' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder='%'\r\n                                                value={this.state.ReferralPartnerFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ReferralPartnerFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ ReferralPartnerFundConfig: ref });\r\n                                                }} />\r\n                                            : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\"\r\n                                                value={this.state.ReferralPartnerFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ReferralPartnerFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ ReferralPartnerFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                        }\r\n\r\n                                        {/* <input type=\"text\" className=\"form-control\" placeholder='%' value={value.value == \"%\" ? null : value.value}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.ReferralPartnerFundConfig;\r\n                                                ref[index].value = e.target.value;\r\n                                                this.setState({ ReferralPartnerFundConfig: ref });\r\n                                            }}\r\n                                        /> */}\r\n\r\n                                        {/* : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" /> */}\r\n                                        {/* } */}\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.ReferralPartnerFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"From Amount\"\r\n                                                value={this.state.ReferralPartnerFundConfig[index].from_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ReferralPartnerFundConfig;\r\n                                                    ref[index].from_amount = e.target.value;\r\n                                                    this.setState({ ReferralPartnerFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.ReferralPartnerFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"To Amount\"\r\n                                                value={this.state.ReferralPartnerFundConfig[index].to_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ReferralPartnerFundConfig;\r\n                                                    ref[index].to_amount = e.target.value;\r\n                                                    this.setState({ ReferralPartnerFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n\r\n                            <div className=\"row border-top pt-3 pb-3\">\r\n                                <div className=\"col-2\" >\r\n                                    <label style={{ paddingRight: '20px', fontWeight: 'bold' }}>Service Provider</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <Button variant=\"primary\" className=\"btn-sm\"\r\n                                        onClick={() => {\r\n                                            var list = this.state.ServiceProvidersFundConfig;\r\n                                            // list.push({ sp_fee_type_referral: \"flat\" });\r\n                                            list.push({ config_type: \"service_provider\", config_type_id: '', fund_config_id: 0, merchant_code: this.state.merchant_code, mode_id: \"1\", share_type_id: \"1\", share_type: 'flat', share_type_rate: 'rate', rate_amount: '', from_amount: '', to_amount: '' });\r\n                                            this.setState({ ServiceProvidersFundConfig: list, value: \"%\" });\r\n                                        }}\r\n                                        style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {this.state.ServiceProvidersFundConfig.map((value, index) => (\r\n                                <div className=\"row pb-3\" >\r\n                                    <div className=\"col-2\">\r\n                                        {/* <div className=\"float-right text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                            <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                var list = this.state.ServiceProvidersFundConfig;\r\n                                                list = list.filter((value, i) => index != i);\r\n                                                this.setState({ ServiceProvidersFundConfig: list });\r\n                                            }} icon={faTimes} /></a>\r\n                                        </div> */}\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-2\">\r\n                                                <div className=\"text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                                    <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                        var list = this.state.ServiceProvidersFundConfig;\r\n                                                        list = list.filter((value, i) => index != i);\r\n                                                        this.setState({ ServiceProvidersFundConfig: list });\r\n                                                    }} icon={faTimes} /></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-10\">\r\n                                                <select className=\"form-control\"\r\n                                                    value={this.state.ServiceProvidersFundConfig[index].config_type_id}\r\n                                                    onChange={(e) => {\r\n                                                        var ref = this.state.ServiceProvidersFundConfig;\r\n                                                        ref[index].config_type_id = e.target.value;\r\n                                                        this.setState({ ServiceProvidersFundConfig: ref });\r\n\r\n                                                        axios({\r\n                                                            method: 'get',\r\n                                                            url: `http://46.137.196.214/apisp/funds/fetchMasterFundConfig/service_provider/` + e.target.value,\r\n                                                            // data: bodyFormData,\r\n                                                            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                        }).then(res => {\r\n                                                            console.log(\"fund config loaded :::::::\");\r\n                                                            console.log(res.data.master_fund_config);\r\n\r\n                                                            var temp = this.state.ServiceProvidersFundConfig.concat(res.data.master_fund_config)\r\n                                                            this.setState({ ServiceProvidersFundConfig: temp, })\r\n\r\n                                                            this.setState({ payConfigModal: true });\r\n\r\n                                                            var list = this.state.ServiceProvidersFundConfig;\r\n                                                            list = list.filter((value, i) => index != i);\r\n                                                            this.setState({ ServiceProvidersFundConfig: list });\r\n\r\n                                                        }).catch(error => { console.log(JSON.stringify(error)) });\r\n                                                    }}\r\n                                                >\r\n                                                    <option value=\"\"></option>\r\n                                                    {this.state.serviceProviders.map((row, index) => (\r\n                                                        <option value={row.id}>{row.name}</option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.ServiceProvidersFundConfig[index].mode_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.ServiceProvidersFundConfig;\r\n                                                ref[index].mode_id = e.target.value;\r\n                                                this.setState({ ServiceProvidersFundConfig: ref });\r\n                                            }}\r\n                                        >\r\n                                            {this.state.fundModes.map((row, index) => (\r\n                                                <option value={row.id}>{row.mode}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.ServiceProvidersFundConfig[index].share_type_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.ServiceProvidersFundConfig;\r\n                                                ref[index].share_type_id = e.target.value;\r\n\r\n                                                this.state.fundShareTypes\r\n                                                    .filter(bank => bank.id === e.target.value)\r\n                                                    .map(bank => {\r\n                                                        ref[index].share_type = bank.sharing_type;\r\n                                                        ref[index].share_type_rate = bank.type;\r\n                                                        console.log(bank);\r\n                                                    })\r\n\r\n                                                this.setState({ ServiceProvidersFundConfig: ref });\r\n                                            }}>\r\n                                            {this.state.fundShareTypes.map((row, index) => (\r\n                                                <option value={row.id}>{row.name}</option>\r\n                                            ))}\r\n                                            {/* <option value=\"flat\">Flat</option>\r\n                                            <option value=\"range\">Range</option> */}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {/* {this.state.sp_fee_type == 'flat' ? */}\r\n\r\n                                        {this.state.ServiceProvidersFundConfig[index].share_type_rate == 'rate' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder='%'\r\n                                                value={this.state.ServiceProvidersFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ServiceProvidersFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ ServiceProvidersFundConfig: ref });\r\n                                                }} />\r\n                                            : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\"\r\n                                                value={this.state.ServiceProvidersFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ServiceProvidersFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ ServiceProvidersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                        }\r\n\r\n                                        {/* <input type=\"text\" className=\"form-control\" placeholder='%' value={value.value == \"%\" ? null : value.value}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.ServiceProvidersFundConfig;\r\n                                                ref[index].value = e.target.value;\r\n                                                this.setState({ ServiceProvidersFundConfig: ref });\r\n                                            }}\r\n                                        /> */}\r\n\r\n                                        {/* : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" /> */}\r\n                                        {/* } */}\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.ServiceProvidersFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"From Amount\"\r\n                                                value={this.state.ServiceProvidersFundConfig[index].from_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ServiceProvidersFundConfig;\r\n                                                    ref[index].from_amount = e.target.value;\r\n                                                    this.setState({ ServiceProvidersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.ServiceProvidersFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"To Amount\"\r\n                                                value={this.state.ServiceProvidersFundConfig[index].to_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.ServiceProvidersFundConfig;\r\n                                                    ref[index].to_amount = e.target.value;\r\n                                                    this.setState({ ServiceProvidersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n\r\n                            <div className=\"row border-top pt-3 pb-3\">\r\n                                <div className=\"col-2\" >\r\n                                    <label style={{ paddingRight: '20px', fontWeight: 'bold' }}>SabPaisa Fee</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <Button variant=\"primary\" className=\"btn-sm\" onClick={() => {\r\n                                        var list = this.state.SabPaisaFundConfig;\r\n                                        // list.push({});\r\n                                        list.push({ config_type: \"sabpaisa\", config_type_id: '', fund_config_id: 0, merchant_code: this.state.merchant_code, mode_id: \"1\", share_type_id: \"1\", share_type: 'flat', share_type_rate: 'rate', rate_amount: '', from_amount: '', to_amount: '' });\r\n                                        this.setState({ SabPaisaFundConfig: list, value: \"%\" });\r\n                                    }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {this.state.SabPaisaFundConfig.map((value, index) => (\r\n                                <div className=\"row pb-3\" >\r\n                                    <div className=\"col-2\">\r\n                                        {/* <div className=\"float-right text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                            <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                var list = this.state.SabPaisaFundConfig;\r\n                                                list = list.filter((value, i) => index != i);\r\n                                                this.setState({ SabPaisaFundConfig: list });\r\n                                            }} icon={faTimes} /></a>\r\n                                        </div> */}\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-2\">\r\n                                                <div className=\"text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                                    <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                        var list = this.state.SabPaisaFundConfig;\r\n                                                        list = list.filter((value, i) => index != i);\r\n                                                        this.setState({ SabPaisaFundConfig: list });\r\n                                                    }} icon={faTimes} /></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-10\">\r\n                                                {/* <select className=\"form-control\" >\r\n                                                    <option value=\"\"></option>\r\n                                                    {this.state.serviceProviders.map((row, index) => (\r\n                                                        <option value={row.id}>{row.name}</option>\r\n                                                    ))}\r\n                                                </select> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.SabPaisaFundConfig[index].mode_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.SabPaisaFundConfig;\r\n                                                ref[index].mode_id = e.target.value;\r\n                                                this.setState({ SabPaisaFundConfig: ref });\r\n                                            }}\r\n                                        >\r\n                                            {this.state.fundModes.map((row, index) => (\r\n                                                <option value={row.id}>{row.mode}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.SabPaisaFundConfig[index].share_type_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.SabPaisaFundConfig;\r\n                                                ref[index].share_type_id = e.target.value;\r\n\r\n                                                this.state.fundShareTypes\r\n                                                    .filter(bank => bank.id === e.target.value)\r\n                                                    .map(bank => {\r\n                                                        ref[index].share_type = bank.sharing_type;\r\n                                                        ref[index].share_type_rate = bank.type;\r\n                                                        console.log(bank);\r\n                                                    })\r\n\r\n                                                this.setState({ SabPaisaFundConfig: ref });\r\n                                            }}>\r\n                                            {this.state.fundShareTypes.map((row, index) => (\r\n                                                <option value={row.id}>{row.name}</option>\r\n                                            ))}\r\n                                            {/* <option value=\"flat\">Flat</option>\r\n                                            <option value=\"range\">Range</option> */}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {/* {this.state.sp_fee_type == 'flat' ? */}\r\n\r\n                                        {this.state.SabPaisaFundConfig[index].share_type_rate == 'rate' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder='%'\r\n                                                value={this.state.SabPaisaFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.SabPaisaFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ SabPaisaFundConfig: ref });\r\n                                                }} />\r\n                                            : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\"\r\n                                                value={this.state.SabPaisaFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.SabPaisaFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ SabPaisaFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                        }\r\n\r\n                                        {/* <input type=\"text\" className=\"form-control\" placeholder='%' value={value.value == \"%\" ? null : value.value}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.SabPaisaFundConfig;\r\n                                                ref[index].value = e.target.value;\r\n                                                this.setState({ SabPaisaFundConfig: ref });\r\n                                            }}\r\n                                        /> */}\r\n\r\n                                        {/* : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" /> */}\r\n                                        {/* } */}\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.SabPaisaFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"From Amount\"\r\n                                                value={this.state.SabPaisaFundConfig[index].from_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.SabPaisaFundConfig;\r\n                                                    ref[index].from_amount = e.target.value;\r\n                                                    this.setState({ SabPaisaFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.SabPaisaFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"To Amount\"\r\n                                                value={this.state.SabPaisaFundConfig[index].to_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.SabPaisaFundConfig;\r\n                                                    ref[index].to_amount = e.target.value;\r\n                                                    this.setState({ SabPaisaFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n\r\n                            <div className=\"row pt-3 border-top\">\r\n                                <div className=\"col-12\">\r\n                                    <Button variant=\"warning\" className=\"btn-lg\"\r\n                                        onClick={(e) => {\r\n                                            // var list = this.state.bankPartnersFundConfig;\r\n                                            // list.push({ share_type_id: 1, share_type: 'flat', share_type_rate: 'rate' });\r\n                                            // this.setState({ bankPartnersFundConfig: list });\r\n                                            this.updateFundConfig();\r\n                                        }}\r\n                                        style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faSave} /> Save Changes</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </LoadingOverlay>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bankDetailsModal}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bankDetailsModal: false\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Bank Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Button variant=\"primary\" className=\"btn-sm mb-3\" onClick={() => { this.setState({ bank_input: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>A/c Holder Name</th>\r\n                                    <th>Account No</th>\r\n                                    <th>IFSC</th>\r\n                                    <th>is Default ?</th>\r\n                                    <th>Manage</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.bankDetailsList.map((value, index) => (<tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{value.ac_holder_name}</td>\r\n                                    <td>{value.account_no}</td>\r\n                                    <td>{value.IFSC}</td>\r\n                                    <td>\r\n                                        <Form.Check inline type={'radio'} name=\"default_bank\" id={`inline-${'radio'}-1`} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button variant=\"warning\" title=\"Edit\"><FontAwesomeIcon icon={faEdit} /></Button>{' '}\r\n                                        <Button variant=\"danger\" title=\"Delete\"><FontAwesomeIcon icon={faTrashAlt} onClick={(e) => {\r\n                                            this.setState({ bank_delete: { option: true, index: index } });\r\n                                        }} /></Button>{' '}\r\n                                    </td>\r\n                                </tr>))}\r\n                                {/* <tr>\r\n                                    <td>2</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bank_delete.option}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bank_delete: { option: false, index: -1 }\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Delete Option</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Button variant=\"outline-danger\" onClick={(e) => {\r\n                            var list = this.state.bankDetailsList;\r\n                            list = list.filter((value, index) => index != this.state.bank_delete.index);\r\n                            this.setState({ bankDetailsList: list, bank_delete: { option: false, index: -1 } });\r\n\r\n                        }}>Delete</Button>{' '}\r\n                        <Button variant=\"outline-success\">Back</Button>{' '}\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bank_input}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bank_input: false\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Add Bank Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>A/c Holder Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter A/c Holder Name\" onChange={(e) => {\r\n                                    this.bankDetails.ac_holder_name = e.target.value;\r\n                                }} />\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Account No</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Account No\" onChange={(e) => {\r\n                                    this.bankDetails.account_no = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>IFSC</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter IFSC\" onChange={(e) => {\r\n                                    this.bankDetails.IFSC = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"button\" onClick={(e) => {\r\n                                var list = this.state.bankDetailsList;\r\n\r\n                                list.push({ ac_holder_name: this.bankDetails.ac_holder_name, account_no: this.bankDetails.account_no, IFSC: this.bankDetails.IFSC });\r\n                                this.setState({ bankDetailsList: list, bank_input: false });\r\n\r\n                            }}>\r\n                                Add\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default index;","import React, { Component } from 'react'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal, Form } from 'react-bootstrap';\r\nimport './index.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCommentAlt, faHandshakeAltSlash, faMoneyBill, faPiggyBank, faUndoAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { Row, Col, Dropdown } from \"react-bootstrap\";\r\n\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass index extends Component {\r\n\r\n\r\n    payConfigModal = false;\r\n    bankDetailsModal = false;\r\n    state = {\r\n        Transaction: [\r\n            {\r\n                Transaction_ID: '1211',\r\n                Merchant_Code: \"1212\",\r\n                Mode_of_Payment: \"Debit Card\",\r\n                Total_Amount: \"1cr\",\r\n                Payment_Status: \"completed\",\r\n                Merchant_Amount: \"1cr\",\r\n                charges: \"1lcs\",\r\n            },\r\n            {\r\n                Transaction_ID: '1211',\r\n                Merchant_Code: \"1212\",\r\n                Mode_of_Payment: \"Debit Card\",\r\n                Total_Amount: \"1cr\",\r\n                Payment_Status: \"completed\",\r\n                Merchant_Amount: \"1cr\",\r\n                charges: \"1lcs\",\r\n            },\r\n            {\r\n                Transaction_ID: '1211',\r\n                Merchant_Code: \"1212\",\r\n                Mode_of_Payment: \"Debit Card\",\r\n                Total_Amount: \"1cr\",\r\n                Payment_Status: \"completed\",\r\n                Merchant_Amount: \"1cr\",\r\n                charges: \"1lcs\",\r\n            },\r\n            {\r\n                Transaction_ID: '1211',\r\n                Merchant_Code: \"1212\",\r\n                Mode_of_Payment: \"Debit Card\",\r\n                Total_Amount: \"1cr\",\r\n                Payment_Status: \"completed\",\r\n                Merchant_Amount: \"1cr\",\r\n                charges: \"1lcs\",\r\n            },\r\n            {\r\n                Transaction_ID: '1211',\r\n                Merchant_Code: \"1212\",\r\n                Mode_of_Payment: \"Debit Card\",\r\n                Total_Amount: \"1cr\",\r\n                Payment_Status: \"completed\",\r\n                Merchant_Amount: \"1cr\",\r\n                charges: \"1lcs\",\r\n            },\r\n            {\r\n                Transaction_ID: '1211',\r\n                Merchant_Code: \"1212\",\r\n                Mode_of_Payment: \"Debit Card\",\r\n                Total_Amount: \"1cr\",\r\n                Payment_Status: \"completed\",\r\n                Merchant_Amount: \"1cr\",\r\n                charges: \"1lcs\",\r\n            },\r\n        ],\r\n        refund: false,\r\n        disputed: false,\r\n        create_ticket: false,\r\n        remarks: false,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Transaction</title>\r\n                    <meta name=\"description\" content=\"Helmet application\" />\r\n                </Helmet>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <h3 className=\"mb-0\">Transaction</h3>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n\r\n                                        <InputGroup className=\"mb-0\">\r\n\r\n                                            <select name=\"cars\" id=\"cars\" >\r\n                                                <option value=\"All Transition\" selected disabled hidden>\r\n                                                    All Transition\r\n      </option>\r\n                                                <option value=\"volvo\">Refunded</option>\r\n                                                <option value=\"saab\">Settled</option>\r\n                                                <option value=\"mercedes\">Non Settled</option>\r\n                                                <option value=\"audi\">Disputed</option>\r\n                                            </select>\r\n                                            <FormControl\r\n                                                placeholder=\"search here...\"\r\n                                                aria-label=\"search here...\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                            />\r\n                                            <InputGroup.Append>\r\n                                                <Button variant=\"outline-secondary\">Search</Button>\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Transaction ID#</th>\r\n                                            <th>Merchant Code</th>\r\n                                            <th>Mode of Payment</th>\r\n                                            <th>Payment Status</th>\r\n                                            <th>Total Amount</th>\r\n                                            <th>Merchant Amount</th>\r\n                                            <th>Subpaisa Amount</th>\r\n                                            <th> Manage </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.Transaction.map((value, index) => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.Transaction_ID}</td>\r\n\r\n                                                    <td>{value.Merchant_Code}</td>\r\n                                                    <td>{value.Mode_of_Payment}</td>\r\n                                                    <td>{value.Payment_Status}</td>\r\n                                                    <td>{value.Total_Amount}</td>\r\n                                                    <td>{value.Merchant_Amount}</td>\r\n                                                    <td>{value.charges}</td>\r\n                                                    <td>\r\n                                                        <Button variant=\"danger\" onClick={(e) => {\r\n                                                            this.setState({ refund: true });\r\n                                                        }} title=\"Refund\"><FontAwesomeIcon icon={faUndoAlt} /></Button>{' '}\r\n                                                        <Button variant=\"warning\" onClick={(e) => {\r\n                                                            this.setState({ disputed: true });\r\n                                                        }} title=\"Dispute\"><FontAwesomeIcon icon={faHandshakeAltSlash} /></Button>{' '}\r\n                                                        <Button variant=\"info\" onClick={(e) => {\r\n                                                            this.setState({ remarks: true });\r\n                                                        }} title=\"Remarks\"><FontAwesomeIcon icon={faCommentAlt} /></Button>{' '}\r\n                                                        <Button variant=\"dark\" onClick={(e) => {\r\n                                                            this.setState({ create_ticket: true });\r\n                                                        }} title=\"Create Ticket\"><FontAwesomeIcon icon={faMoneyBill} /></Button>{' '}\r\n                                                        {/* <Button variant=\"primary\"><FontAwesomeIcon icon={faMoneyBill} /></Button>{' '} */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                                <Pagination>\r\n                                    {/* <Pagination.First />\r\n                                <Pagination.Prev /> */}\r\n                                    <Pagination.Item active>{1}</Pagination.Item>\r\n                                    {/* <Pagination.Ellipsis /> */}\r\n\r\n                                    <Pagination.Item>{2}</Pagination.Item>\r\n                                    <Pagination.Item>{3}</Pagination.Item>\r\n                                    <Pagination.Item>{4}</Pagination.Item>\r\n                                    <Pagination.Item>{5}</Pagination.Item>\r\n                                    <Pagination.Item>{6}</Pagination.Item>\r\n\r\n                                    {/* <Pagination.Ellipsis /> */}\r\n                                    <Pagination.Item>{7}</Pagination.Item>\r\n                                    {/* <Pagination.Next />\r\n                                <Pagination.Last /> */}\r\n                                </Pagination>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.payConfigModal}\r\n                    onHide={() => { this.toggle_payconfig(false); }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Fund Sharing Configuration</Modal.Title>\r\n\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n\r\n                                    <th>Bank partners</th>\r\n                                    <th>Service Provider</th>\r\n                                    <th>Referral Partners</th>\r\n                                    <th>is Default ?</th>\r\n                                    <th>Manage</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {\r\n\r\n                                    this.state.Transaction.map((values, index) => {\r\n                                        console.log(values);\r\n                                        console.log(index);\r\n                                        return (\r\n                                            <tr>\r\n                                                <td>{index}</td>\r\n                                                <td>{values.Bank_partners}</td>\r\n                                                <td>{values.Service_Provider}</td>\r\n                                                <td>{values.Referral_Partners}</td>\r\n\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                            </tr>);\r\n                                    })\r\n                                }\r\n                                {/* <tr>\r\n                                    <td>2</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.bankDetailsModal}\r\n                    onHide={() => { this.toggle_bankDetails(false) }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Bank Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>A/c Holder Name</th>\r\n                                    <th>Account No</th>\r\n                                    <th>IFSC</th>\r\n                                    <th>is Default ?</th>\r\n                                    <th>Manage</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                    <td>2</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.refund}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            refund: false,\r\n\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Refund</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n\r\n                        <Button variant=\"outline-success\">yes</Button>{' '}\r\n                        <Button variant=\"outline-danger\">no</Button>{' '}\r\n\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.create_ticket}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            create_ticket: false,\r\n\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Create Ticket</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form>\r\n                            <input className=\"form-control\" placeholder=\"Ticket Title\" /><br></br>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                {/* <Form.Label>Example textarea</Form.Label> */}\r\n                                <Form.Control as=\"textarea\" rows={3} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" >\r\n                                Create\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.disputed}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            disputed: false,\r\n\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Disputed</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicPassword\" >\r\n                                <Form.Label>Disputed</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Contact Person\" onChange={(e) => {\r\n                                    this.Bank_Partners.contact_person = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                {/* <Form.Label>Example textarea</Form.Label> */}\r\n                                <Form.Control as=\"textarea\" rows={3} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" >\r\n                                update\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.remarks}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            remarks: false,\r\n\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Remarks</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form>\r\n\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                {/* <Form.Label>Example textarea</Form.Label> */}\r\n                                <Form.Control as=\"textarea\" rows={3} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" >\r\n                                Create\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    toggle_payconfig = (value = true) => {\r\n        if (!value)\r\n            this.payConfigModal = false;\r\n        else\r\n            this.payConfigModal = true;\r\n    };\r\n    toggle_bankDetails = (value = true) => {\r\n        if (!value)\r\n            this.bankDetailsModal = false;\r\n        else\r\n            this.bankDetailsModal = true;\r\n    };\r\n}\r\n\r\nexport default index;","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown ,Dropdown,Button} from 'react-bootstrap';\r\nimport { MemoryRouter, Switch, Route, Link, NavLink } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt,faHamburger } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from \"react-redux\";\r\nimport HamburgerMenu from \"react-hamburger-menu\";\r\nimport './index.css'\r\nconst mapState = (state) => {\r\n  console.log(state);\r\n  return {\r\n    user: state.user != null ? state.user : null,\r\n\r\n  };\r\n}\r\nclass NavBar extends Component {\r\nstate={\r\n  navOpen:false,\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <MemoryRouter> */}\r\n        <Navbar bg=\"light\" variant=\"light\" className=\"border-bottom border-dark \">\r\n          <Navbar.Brand href=\"#\" className=\"font-weight-bold\">\r\n            <img\r\n              src=\"/logo.png\"\r\n              // width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top mr-2\"\r\n              alt=\"React Bootstrap logo\"\r\n            />\r\n          Settlement App\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Nav>\r\n              <Nav.Link href=\"#user\" className=\"user\" >{this.props.user.name}</Nav.Link>\r\n              <a href='/' className=\"logout\" style={{\r\n                'margin-top': \"10px\",\r\n              }} onClick={(e) => {\r\n                localStorage.removeItem(\"email\");\r\n                localStorage.removeItem('name');\r\n                this.props.Auth();\r\n\r\n              }}><FontAwesomeIcon icon={faSignOutAlt} /></a>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Navbar bg=\"dark\" variant=\"dark\" >\r\n          {/* <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand> */}\r\n          <Navbar.Collapse >\r\n            <Nav className=\"mx-auto\">\r\n           \r\n              {/* <Nav.Link style={{ color: '#ffffff' }} className=\"nav-active\"> */}\r\n              <NavLink to='/dashboard' className={this.props.current==\"dashboard\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}> Dashboard</NavLink>\r\n              <NavLink to=\"/merchant\" className={this.props.current==\"merchant\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>Merchant Overview</NavLink>\r\n              {/* </Nav.Link> */}\r\n              {/* <Nav.Link style={{ color: '#ffffff' }}> */}\r\n              <NavLink to=\"/transactions\" className={this.props.current==\"transactions\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>Transactions</NavLink>\r\n              {/* </Nav.Link> */}\r\n              <NavLink to=\"/banks_partners\" className={this.props.current==\"bankpartner\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>Bank Partners</NavLink>\r\n              <NavLink to=\"/referral_partners\" className={this.props.current==\"referral\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>Referral Partners</NavLink>\r\n              <NavLink to=\"/service_providers\" className={this.props.current==\"serviceproviders\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>Service Providers</NavLink>\r\n\r\n              <NavLink to=\"/settlements\" className={this.props.current==\"settlement\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>Settlements</NavLink>\r\n               <NavLink to=\"/disbursement\" className={this.props.current==\"disbursement\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>Disbursement</NavLink>\r\n               <Dropdown   className=\"mx-5\">\r\n \r\n             \r\n              \r\n {/* <NavLink  to=\"/sbamfs\" className={this.props.current==\"SBAFMS\"?\"nav-active val\":\"val\"} style={{ color: '#ffffff', padding: \"10px\" }}>SBAFMS</NavLink> */}\r\n<Dropdown.Toggle as={React.forwardRef(({ children, onClick }, ref) => (\r\n  <div style={{marginTop:\"28%\"}} >\r\n    <HamburgerMenu\r\n  isOpen={this.state.navOpen}\r\n  menuClicked={e => {\r\n   e.preventDefault();\r\n   this.setState({navOpen:!this.state.navOpen})\r\n   onClick(e);\r\n }}\r\n\r\n  width={40}\r\n  height={20}\r\n  strokeWidth={1}\r\n  rotate={0}\r\n  color='white'\r\n  borderRadius={0}\r\n  animationDuration={1}\r\n>{children}</HamburgerMenu>\r\n  </div>\r\n  \r\n  \r\n))}></Dropdown.Toggle>\r\n\r\n<Dropdown.Menu>\r\n<Dropdown.Item className=\"my-3\"><NavLink to=\"/sabpaisa_holding_bank\" className=\"val\" style={{ padding: \"10px\" }}>SabPaisa Holding Bank</NavLink></Dropdown.Item>\r\n<Dropdown.Item className=\"my-3\"><NavLink href=\"#\" to=\"/settlements\" className=\"val\" style={{  padding: \"10px\" }}>Invoicing</NavLink></Dropdown.Item>\r\n<Dropdown.Item className=\"my-3\"><NavLink to= \"/users\" className=\"val\" style={{  padding: \"10px\" }}>User Management</NavLink></Dropdown.Item>\r\n</Dropdown.Menu>\r\n</Dropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        {/* </MemoryRouter> */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst Auth = (dispatch) => {\r\n  return {\r\n    Auth: (user, password) => {\r\n      dispatch({ type: \"AUTH_Logout\" });\r\n    }\r\n  }\r\n}\r\nexport default connect(mapState, Auth)(NavBar);","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './index.css'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal, Spinner, Form } from 'react-bootstrap';\r\nimport get from \"../services/client_fetch\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faRupeeSign, faPlus, faUniversity, faEdit, faTrashAlt, faTimes, faSave } from '@fortawesome/free-solid-svg-icons'\r\n// import { Fab, Action } from 'react-tiny-fab';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader';\r\nimport RingLoader from 'react-spinners/RingLoader';\r\n\r\n\r\nclass index extends Component {\r\n    state = {\r\n        Bank_Partners: [],\r\n        createBankPartner: false,\r\n        detailsId: -1,\r\n        bankDetailsUpdate:{option:false,index:-1,currentVals:{}},\r\n        Loading: true,\r\n        bank_update: { option: false, index: -1, currentVals: {} },\r\n        bankDetailsList: [],\r\n        bankLoading: false,\r\n        loading: false,\r\n        bank_input: false,\r\n        bank_delete: { option: false, index: -1 },\r\n        payConfigModal: false,\r\n        bankPartnersFundConfig: [],\r\n        // bankPartnersFundConfig: [{ share_type_id: 1, share_type: 'flat', share_type_rate: 'rate' }],\r\n        fundModes: [],\r\n        fundShareTypes: [],\r\n\r\n        bank_partner_id: '',\r\n    };\r\n    data = null;\r\n    NewAddtion = false;\r\n    searchflag = false;\r\n    pageLength = 0;\r\n\r\n    searchtemplist = [];\r\n    bankDetails = {\r\n\r\n    };\r\n    Bank_Partners = {\r\n\r\n    };\r\n    currentPage = 0;\r\n\r\n    bankDetailsModal = false;\r\n    toggle_payconfig = (value = true) => {\r\n        if (!value)\r\n            this.payConfigModal = false;\r\n        else\r\n            this.payConfigModal = true;\r\n    };\r\n    toggle_bankDetails = (value = true) => {\r\n        if (!value)\r\n            this.bankDetailsModal = false;\r\n        else\r\n            this.bankDetailsModal = true;\r\n    };\r\n    async fetchData(first = 0, last = 10) {\r\n\r\n        if ((this.data == null) || (this.NewAddtion)) {\r\n            this.NewAddtion = false;\r\n            var link = 'http://13.126.251.174:8081/bank-partners';\r\n            var response = await get.getData(link);\r\n            this.setState({ Loading: false });\r\n            this.data = response;\r\n\r\n            console.log('done');\r\n            console.log(response);\r\n\r\n            this.searchtemplist = this.data;\r\n        }\r\n\r\n        var BankList = this.searchflag ? this.searchtemplist : this.searchtemplist;\r\n        var BankLength = BankList.length;\r\n\r\n        this.pageLength = Math.ceil(BankLength / 10);\r\n\r\n        var BankMerchantDetailsList = BankList.slice(first, BankLength >= last ? last : BankLength);\r\n\r\n        this.setState({ Bank_Partners: BankMerchantDetailsList });\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData();\r\n        this.loadConstants();\r\n    }\r\n\r\n    loadConstants() {\r\n        // load payment modes => \r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchModes`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"modes loaded :::::::\");\r\n            console.log(res.data.fund_mode);\r\n            this.setState({\r\n                fundModes: res.data.fund_mode,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n        // load share types =>\r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchShareType`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"share type loaded :::::::\");\r\n            console.log(res.data.fund_share_type);\r\n            this.setState({\r\n                fundShareTypes: res.data.fund_share_type,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n\r\n    bankdata = null;\r\n    async fetchBankPartners(detailsid) {\r\n        var link = `http://13.126.251.174:8081/bank-partners/${detailsid}/bank-details`;\r\n        this.bankdata = await get.getData(link);\r\n        this.setState({ bankDetailsList: this.bankdata });\r\n\r\n    }\r\n    async addBankPartners(detailsid, accountHolderName, accountNum, ifscCode) {\r\n        var link = `http://13.126.251.174:8081/bank-partners/${detailsid}/bank-details?accountNum=${accountNum}&ifscCode=${ifscCode}&accountHolderName=${accountHolderName}`;\r\n        var response = await get.postData(link, {\r\n            id: detailsid,\r\n            accountHolderName: accountHolderName,\r\n            accountNum: accountNum,\r\n            ifscCode: ifscCode,\r\n        });\r\n\r\n        await this.fetchBankPartners(detailsid);\r\n    }\r\n    async editData(id, bankName = this.state.bank_update.currentVals.bankName, contactPerson = this.state.bank_update.currentVals.contactPerson, email = this.state.bank_update.email, phoneNum = this.state.bank_update.phoneNum) {\r\n        var link = `http://13.126.251.174:8081/bank-partners/${id}?bankName=${bankName}&contactPerson=${contactPerson}&email=${email}&phone_no=${phoneNum}`;\r\n        var response = await get.putData(link);\r\n        this.data = null;\r\n        await this.fetchData();\r\n\r\n    }\r\n    async editbankDetails(id,accountNum,ifscCode,accountHolderName)\r\n    {\r\n        this.setState({bankLoading:true});\r\n        var response = await get.putData(`http://13.126.251.174:8081/bank-details/${id}?accountNum=${accountNum}&ifscCode=${ifscCode}&accountHolderName=${accountHolderName}`);\r\n        \r\n        this.fetchBankPartners(this.state.detailsId);\r\n        this.setState({bankLoading:false});\r\n    }\r\n\r\n    updateFundConfig() {\r\n        console.log(\"this.state.bankPartnersFundConfig :::::::::::\");\r\n        console.log(this.state.bankPartnersFundConfig);\r\n\r\n        var requestData = JSON.stringify(this.state.bankPartnersFundConfig);\r\n        console.log(requestData);\r\n\r\n\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('request_data', requestData);\r\n        // bodyFormData.append('password', this.state.password);\r\n        // load payment modes => \r\n        axios({\r\n            method: 'post',\r\n            url: `http://46.137.196.214/apisp/funds/updateMasterFundConfig`,\r\n            data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"update config response :::::::\");\r\n            console.log(res.data);\r\n            // this.setState({\r\n            //     fundModes: res.data.fund_mode,\r\n            // })\r\n\r\n            this.setState({\r\n                payConfigModal: false\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LoadingOverlay\r\n                    active={this.state.loading}\r\n                    spinner={<ClimbingBoxLoader />}\r\n                >\r\n                    {/* <Fab\r\n                    icon={<FontAwesomeIcon icon={faPlusCircle} />}\r\n                    onClick={() => { this.toggle_payconfig(); }}\r\n                >\r\n\r\n                </Fab> */}\r\n                    <Helmet>\r\n                        <title>Bank Partners</title>\r\n                        <meta name=\"description\" content=\"Helmet application\" />\r\n                    </Helmet>\r\n\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"mt-3\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 col-12\">\r\n                                            <h3 className=\"mb-0\">Bank Partners</h3><Button variant=\"primary\" className=\"btn-sm mb-3 mt-4\" onClick={(e) => {\r\n                                                this.setState({ createBankPartner: true });\r\n                                            }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> CREATE</Button>{' '}\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6 col-12\">\r\n                                            <InputGroup className=\"mb-0\" onChange={(e) => {\r\n                                                this.searchflag = true;\r\n                                                this.searchTerm = e.target.value;\r\n                                                var list = this.data;\r\n                                                list = list.filter((data) => data.clientId == this.searchTerm || data.clientName == this.searchTerm || data.clientCode == this.searchTerm || data.clientName.includes(this.searchTerm) || data.clientId.toString().includes(this.searchTerm) || data.clientCode.toString().includes(this.searchTerm));\r\n                                                this.searchtemplist = list;\r\n                                                this.setState({ Bank_Partners: list });\r\n                                                console.log(e.target.value);\r\n                                                this.pageLength = Math.ceil(list.length / 10);\r\n                                                if (e.target.value == \"\") {\r\n                                                    this.fetchData(0 * 10, (0 * 10) + 10);\r\n                                                    this.currentPage = 1;\r\n                                                    this.searchtemplist = this.data;\r\n                                                    this.searchflag = false;\r\n                                                }\r\n\r\n                                            }}>\r\n                                                <FormControl\r\n                                                    placeholder=\"search here...\"\r\n                                                    aria-label=\"search here...\"\r\n                                                    aria-describedby=\"basic-addon2\"\r\n                                                />\r\n                                                <InputGroup.Append>\r\n                                                    <Button variant=\"outline-secondary\">Search</Button>\r\n                                                </InputGroup.Append>\r\n                                            </InputGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        {this.state.Loading ?\r\n                            (<Spinner animation=\"border\" style={{ \"margin-left\": \"50%\", }} />) : (<></>)}\r\n                        <div className=\"mt-3\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Table striped bordered hover responsive>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Bank Partner ID#</th>\r\n                                                <th>Bank Name</th>\r\n                                                <th>Contact Person</th>\r\n                                                <th>Contact Number</th>\r\n                                                <th>Pay Agreement Config</th>\r\n                                                <th>Banks Details</th>\r\n                                                <th>Manage</th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.Bank_Partners.map((values, index) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{values.id}</td>\r\n\r\n                                                        <td>{values.bankName}</td>\r\n                                                        <td>{values.contactPerson}</td>\r\n                                                        <td>{values.phone_no}</td>\r\n                                                        <td>\r\n                                                            <Button variant=\"primary\" className=\"btn-block\" onClick={() => {\r\n                                                                this.setState({ bank_partner_id: values.id });\r\n                                                                this.setState({ bankPartnersFundConfig: [] })\r\n\r\n                                                                // load bank partners => \r\n                                                                axios({\r\n                                                                    method: 'get',\r\n                                                                    url: `http://46.137.196.214/apisp/funds/fetchMasterFundConfig/bank_partner/` + values.id,\r\n                                                                    // data: bodyFormData,\r\n                                                                    headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                                }).then(res => {\r\n                                                                    console.log(\"fund config loaded :::::::\");\r\n                                                                    console.log(res.data.master_fund_config);\r\n                                                                    this.setState({ bankPartnersFundConfig: res.data.master_fund_config, })\r\n\r\n                                                                    this.setState({ payConfigModal: true });\r\n\r\n                                                                }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n\r\n                                                            }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faRupeeSign} /> Agreement</Button>{' '}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Button variant=\"info\" className=\"btn-block\" onClick={async (e) => {\r\n\r\n                                                                this.setState({ bankLoading: true, bankDetailsModal: true, detailsId: values.id });\r\n\r\n                                                                await this.fetchBankPartners(values.id);\r\n                                                                this.setState({ bankLoading: false });\r\n                                                            }\r\n\r\n\r\n                                                            } style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faUniversity} /></Button>{' '}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Button variant=\"warning\" title=\"Edit\" onClick={(e) => {\r\n                                                                this.setState({ bank_update: { option: true, index: index, currentVals: { id: values.id, bankName: values.bankName, contactPerson: values.contactPerson, phoneNum: values.phone_no, email: values.email } } });\r\n                                                            }} ><FontAwesomeIcon icon={faEdit} /></Button>{' '}\r\n                                                            <Button variant=\"danger\" title=\"Delete\" onClick={(e) => {\r\n                                                                this.setState({ bank_delete: { option: true, index: values.id } });\r\n                                                            }}><FontAwesomeIcon icon={faTrashAlt} /></Button>{' '}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                        </tbody>\r\n                                    </Table>\r\n\r\n                                    <Pagination>\r\n                                        {/* <Pagination.First />\r\n                            <Pagination.Prev /> */}\r\n                                        {(() => {\r\n\r\n                                            var i = [];\r\n                                            var len = 0;\r\n                                            while (len < this.pageLength) {\r\n                                                let val = len;\r\n                                                let path = \"/page/\" + val;\r\n                                                // console.log(len);\r\n                                                i.push((<Pagination.Item onClick={(e) => {\r\n                                                    this.currentPage = val;\r\n                                                    this.fetchData(val * 10, (val * 10) + 10);\r\n\r\n\r\n                                                }} active={val === this.currentPage}>{val}</Pagination.Item>));\r\n                                                len++;\r\n                                            }\r\n                                            return i;\r\n                                        })()}\r\n                                        {/* <Pagination.Next />\r\n                            <Pagination.Last /> */}\r\n                                    </Pagination>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.payConfigModal}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                payConfigModal: false\r\n                            })\r\n                        }}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Fund Config</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-12\">\r\n                                    <Button variant=\"primary\" className=\"btn-sm\"\r\n                                        onClick={(e) => {\r\n                                            var list = this.state.bankPartnersFundConfig;\r\n                                            list.push({ config_type: \"bank_partner\", config_type_id: this.state.bank_partner_id, mode_id: \"1\", share_type_id: \"1\", share_type: 'flat', share_type_rate: 'rate', rate_amount: '', from_amount: '', to_amount: '' });\r\n                                            this.setState({ bankPartnersFundConfig: list });\r\n                                        }}\r\n                                        style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n                            {this.state.bankPartnersFundConfig.map((value, index) => (\r\n                                <div className=\"row pb-3\" >\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.bankPartnersFundConfig[index].mode_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].mode_id = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        >\r\n                                            {this.state.fundModes.map((row, index) => (\r\n                                                <option value={row.id}>{row.mode}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.bankPartnersFundConfig[index].share_type_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].share_type_id = e.target.value;\r\n\r\n                                                this.state.fundShareTypes\r\n                                                    .filter(bank => bank.id === e.target.value)\r\n                                                    .map(bank => {\r\n                                                        ref[index].share_type = bank.sharing_type;\r\n                                                        ref[index].share_type_rate = bank.type;\r\n                                                        console.log(bank);\r\n                                                    })\r\n\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}>\r\n                                            {this.state.fundShareTypes.map((row, index) => (\r\n                                                <option value={row.id}>{row.name}</option>\r\n                                            ))}\r\n                                            {/* <option value=\"flat\">Flat</option>\r\n                                            <option value=\"range\">Range</option> */}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {/* {this.state.sp_fee_type == 'flat' ? */}\r\n\r\n                                        {this.state.bankPartnersFundConfig[index].share_type_rate == 'rate' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder='%'\r\n                                                value={this.state.bankPartnersFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }} />\r\n                                            : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\"\r\n                                                value={this.state.bankPartnersFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                        }\r\n\r\n                                        {/* <input type=\"text\" className=\"form-control\" placeholder='%' value={value.value == \"%\" ? null : value.value}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].value = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        /> */}\r\n\r\n                                        {/* : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" /> */}\r\n                                        {/* } */}\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.bankPartnersFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"From Amount\"\r\n                                                value={this.state.bankPartnersFundConfig[index].from_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].from_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.bankPartnersFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"To Amount\"\r\n                                                value={this.state.bankPartnersFundConfig[index].to_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.bankPartnersFundConfig;\r\n                                                    ref[index].to_amount = e.target.value;\r\n                                                    this.setState({ bankPartnersFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                                    <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                        var list = this.state.bankPartnersFundConfig;\r\n                                                        list = list.filter((value, i) => index != i);\r\n                                                        this.setState({ bankPartnersFundConfig: list });\r\n                                                    }} icon={faTimes} /></a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n\r\n                            <div className=\"row pt-3 border-top\">\r\n                                <div className=\"col-12\">\r\n                                    <Button variant=\"warning\" className=\"btn-lg\"\r\n                                        onClick={(e) => {\r\n                                            // var list = this.state.bankPartnersFundConfig;\r\n                                            // list.push({ share_type_id: 1, share_type: 'flat', share_type_rate: 'rate' });\r\n                                            // this.setState({ bankPartnersFundConfig: list });\r\n                                            this.updateFundConfig();\r\n                                        }}\r\n                                        style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faSave} /> Save Changes</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bankDetailsModal}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bankDetailsModal: false\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <LoadingOverlay\r\n                            active={this.state.bankLoading}\r\n                            spinner={<RingLoader />}\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"example-modal-sizes-title-lg\">Bank Details</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Button variant=\"primary\" className=\"btn-sm mb-3\" onClick={() => {\r\n                                    this.setState({ bank_input: true });\r\n\r\n\r\n                                }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                                <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            <th>A/c Holder Name</th>\r\n                                            <th>Account No</th>\r\n                                            <th>IFSC</th>\r\n                                            <th>is Default ?</th>\r\n                                            <th>Manage</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.bankDetailsList.map((value, index) => (<tr>\r\n                                            <td>{value.id}</td>\r\n                                            <td>{value.accountHolderName}</td>\r\n                                            <td>{value.accountNum}</td>\r\n                                            <td>{value.ifscCode}</td>\r\n                                            <td>\r\n                                                <Form.Check inline type={'radio'} name=\"default_bank\" id={`inline-${'radio'}-1`} />\r\n                                            </td>\r\n                                            <td>\r\n                                            <Button variant=\"warning\" title=\"Edit\" onClick={(e)=>{\r\n                                                this.Bank_Partners={accountHolderName:value.accountHolderName,Ifsc:value.ifscCode,accountNumber:value.accountNum};\r\n                                               this.setState({bankDetailsUpdate:{option:true,index:value.id,currentVals:{id:value.id,accountHolderName:value.accountHolderName,accountNum:value.accountNum,ifsc:value.ifscCode}}});\r\n                                            }}><FontAwesomeIcon icon={faEdit} /></Button>{' '}\r\n                                                <Button variant=\"danger\" title=\"Delete\"><FontAwesomeIcon icon={faTrashAlt} onClick={(e) => {\r\n                                                    this.setState({ bank_delete: { option: true, index: index } });\r\n                                                }} /></Button>{' '}\r\n                                            </td>\r\n                                        </tr>))}\r\n                                        {/* <tr>\r\n                                    <td>2</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr> */}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Modal.Body>\r\n                        </LoadingOverlay>\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_input}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_input: false\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Add Bank Details</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>A/c Holder Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" placeholder=\"Enter A/c Holder Name\" onChange={(e) => {\r\n                                        this.bankDetails.ac_holder_name = e.target.value;\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Account No</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Account No\" onChange={(e) => {\r\n                                        this.bankDetails.account_no = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>IFSC</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter IFSC\" onChange={(e) => {\r\n                                        this.bankDetails.IFSC = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"button\" onClick={async (e) => {\r\n                                    var list = this.state.bankDetailsList;\r\n                                    console.log(this.state.detailsId);\r\n\r\n                                    this.setState({bankLoading:true,bank_input:false});\r\n\r\n                                    await this.addBankPartners(this.state.detailsId,this.bankDetails.ac_holder_name,this.bankDetails.account_no,this.bankDetails.IFSC);\r\n                                   this.setState({bankLoading:false});\r\n\r\n                                }}>\r\n                                    Add\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.createBankPartner}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                createBankPartner: false,\r\n                                loading: false,\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Add Bank Partners</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Bank Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" placeholder=\"Bank Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.bank_name = e.target.value;\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Person</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Person\" onChange={(e) => {\r\n                                        this.Bank_Partners.contact_person = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.contact_number = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Person Email</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.email = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"primary\" type=\"button\" onClick={async (e) => {\r\n                                    this.setState({createBankPartner:false});\r\n                                    var list = this.state.Bank_Partners;\r\n\r\n\r\n                                    var link = `http://13.126.251.174:8081/bank-partners?email=${this.Bank_Partners.email}&bankName=${this.Bank_Partners.bank_name}&contactPerson=${this.Bank_Partners.contact_person}&phoneNum=${this.Bank_Partners.contact_number}`;\r\n                                    this.setState({ loading: true });\r\n                                    var response = await get.postData(link, {\r\n                                        bankName: this.Bank_Partners.bank_name,\r\n                                        contactPerson: this.Bank_Partners.contact_person,\r\n                                        email: this.Bank_Partners.email,\r\n                                        phoneNum: this.Bank_Partners.contact_number,\r\n                                    });\r\n\r\n                                    console.log('response :::::::::::::::::::::');\r\n                                    console.log(response);\r\n\r\n                                    if (response.status === 200) {\r\n                                        this.setState({ loading: false, createBankPartner: false });\r\n                                    } else {\r\n                                        this.setState({ loading: false, });\r\n                                    }\r\n\r\n                                    // list.push({ bank_name: this.Bank_Partners.bank_name, first_name: this.Bank_Partners.contact_person, contact_number: this.Bank_Partners.contact_number });\r\n                                    // this.setState({ Bank_Partners: list, createBankPartner: false });\r\n\r\n                                    this.currentPage = 0;\r\n                                    this.NewAddtion = true;\r\n                                    this.fetchData();\r\n\r\n                                }}>\r\n                                    Add\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_update.option}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_update: { option: false, index: -1, currentVals: {} },\r\n                                loading: false,\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Update Bank Partners</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Bank Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" value={this.state.bank_update.currentVals.bankName} defaultValue={this.state.bank_update.currentVals.bankName} onChange={(e) => {\r\n                                        this.Bank_Partners.bank_name = e.target.value;\r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.currentVals.bankName=e.target.value;\r\n                                       \r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\" >\r\n                                    <Form.Label>Contact Person</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bank_update.currentVals.contactPerson} defaultValue={this.state.bank_update.currentVals.contactPerson} onChange={(e) => {\r\n                                        this.Bank_Partners.contact_person = e.target.value;\r\n                                      \r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.currentVals.contactPerson=e.target.value;\r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bank_update.currentVals.phoneNum} defaultValue={this.state.bank_update.currentVals.phoneNum} onChange={(e) => {\r\n                                        this.Bank_Partners.contact_number = e.target.value;\r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.currentVals.phoneNum=e.target.value;\r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Person Email</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bank_update.email} defaultValue={this.state.bank_update.email} onChange={(e) => {\r\n                                        this.Bank_Partners.email = e.target.value;\r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.currentVals.email=e.target.value;\r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"primary\" type=\"button\" onClick={async (e) => {\r\n                                    this.setState({ loading: true, bank_update: { option: false, index: -1, currentVals: {} } });\r\n                                    await this.editData(this.state.bank_update.currentVals.id, this.Bank_Partners.bank_name, this.Bank_Partners.contact_person, this.Bank_Partners.contact_number, this.Bank_Partners.email);\r\n                                    this.setState({ loading: false, });\r\n                                }} >\r\n                                    update\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_delete.option}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_delete: { option: false, index: -1 }\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Delete Option</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Button variant=\"outline-danger\" onClick={async (e) => {\r\n                                var index = this.state.bank_delete.index;\r\n                                this.setState({ loading: true, bank_delete: { option: false, index: -1 } });\r\n                                var response = await get.deleteData(`http://13.126.251.174:8081/bank-partners/${index}`);\r\n                                this.NewAddtion = true;\r\n                                this.fetchData();\r\n                                this.setState({ loading: false });\r\n\r\n                            }}>Delete</Button>{' '}\r\n                            <Button variant=\"outline-success\">Back</Button>{' '}\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bankDetailsUpdate.option}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bankDetailsUpdate: { option: false, index: -1 ,currentVals:{}}\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Update bankDetails</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                        <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Account Holder Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" value={this.state.bankDetailsUpdate.currentVals.accountHolderName}  defaultValue={this.state.bankDetailsUpdate.currentVals.accountHolderName}  onChange={(e) => {\r\n                                        this.Bank_Partners.accountHolderName = e.target.value;\r\n                                        var currentvals = this.state.bankDetailsUpdate;\r\n                                        currentvals.currentVals.accountHolderName=e.target.value;\r\n                                        this.setState({bankDetailsUpdate:currentvals});\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\" >\r\n                                    <Form.Label>IFSC Code</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bankDetailsUpdate.currentVals.ifsc} defaultValue={this.state.bankDetailsUpdate.currentVals.ifsc} onChange={(e) => {\r\n                                        this.Bank_Partners.Ifsc = e.target.value;\r\n                                        var currentvals = this.state.bankDetailsUpdate;\r\n                                        currentvals.currentVals.ifsc=e.target.value;\r\n                                        this.setState({bankDetailsUpdate:currentvals});\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Account Number</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bankDetailsUpdate.currentVals.accountNum} defaultValue={this.state.bankDetailsUpdate.currentVals.accountNum} onChange={(e) => {\r\n                                        this.Bank_Partners.accountNumber = e.target.value;\r\n                                        var currentvals = this.state.bankDetailsUpdate;\r\n                                        currentvals.currentVals.accountNum=e.target.value;\r\n                                        this.setState({bankDetailsUpdate:currentvals});\r\n                                    }} />\r\n                                </Form.Group>\r\n                               \r\n\r\n                                <Button variant=\"primary\" type=\"button\" onClick={async (e)=>{\r\n                                    this.setState({bankLoading:true,bankDetailsUpdate:{option: false, index: -1 ,currentVals:{}}});\r\n                                    await this.editbankDetails(this.state.bankDetailsUpdate.currentVals.id,this.Bank_Partners.accountNumber,this.Bank_Partners.Ifsc,this.Bank_Partners.accountHolderName);\r\n                                    this.setState({bankLoading:false,});\r\n                                }} >\r\n                                    update\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </LoadingOverlay>\r\n            </>);\r\n    }\r\n}\r\n\r\n\r\nexport default index;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './index.css';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal, Spinner, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faRupeeSign, faPlus, faTimes, faUniversity, faSave, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport get from '../services/client_fetch';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader';\r\n\r\n\r\nclass index extends Component {\r\n    payConfigModal = false;\r\n    bankDetailsModal = false;\r\n    Bank_Partners = {};\r\n    state = {\r\n        createBankPartner: false,\r\n        detailsId: -1,\r\n        Loading: true,\r\n        Service_Provider: [],\r\n        bankDetailsList: [],\r\n        loading: false,\r\n        bankLoading: false,\r\n        bank_update: { option: false, index: -1, currentVals: {} },\r\n        bank_input: false,\r\n        bank_delete: { view: false, index: -1 },\r\n\r\n        serviceProviderFundConfig: [],\r\n        fundModes: [],\r\n        fundShareTypes: [],\r\n        service_provider_id: '',\r\n\r\n    };\r\n    bankDetails = {\r\n\r\n    };\r\n    data = null;\r\n    searchflag = false;\r\n    searchtemplist = [];\r\n    bankdata = null;\r\n    async fetchBankPartners(detailsid) {\r\n        var link = `http://13.126.251.174:8084/svc-providers/${detailsid}/bank-details`;\r\n        this.bankdata = await get.getData(link);\r\n        this.setState({ bankDetailsList: this.bankdata });\r\n\r\n    }\r\n    async addBankPartners(detailsid, accountHolderName, accountNum, ifscCode) {\r\n        var link = `http://13.126.251.174:8084/svc-providers/${detailsid}/bank-details?accountHolderName=${accountHolderName}&accountNum=${accountNum}&id=${detailsid}&ifscCode=${ifscCode}`;\r\n        var response = await get.postData(link, {\r\n            id: detailsid,\r\n            accountHolderName: accountHolderName,\r\n            accountNum: accountNum,\r\n            ifscCode: ifscCode,\r\n        });\r\n\r\n        this.fetchBankPartners(detailsid);\r\n    }\r\n    async fetchData(first = 0, last = 10) {\r\n\r\n        if (this.data == null) {\r\n\r\n            var link = 'http://13.126.251.174:8084/svc-providers';\r\n\r\n            var response = await get.getData(link);\r\n            this.setState({ Loading: false });\r\n            this.data = response;\r\n            console.log(this.data);\r\n            this.searchtemplist = this.data;\r\n        }\r\n\r\n        var clientList = this.searchtemplist;\r\n        console.log(clientList);\r\n        var clientLength = clientList.length;\r\n\r\n        this.pageLength = clientLength / 100;\r\n\r\n        var clientMerchantDetailsList = clientList.slice(first, last);\r\n\r\n        this.setState({ Service_Provider: clientMerchantDetailsList });\r\n    }\r\n    async editData(id, bankName = this.state.bank_update.currentVals.bankName, contactPerson = this.state.bank_update.currentVals.contactPerson, email = this.state.bank_update.email, phoneNum = this.state.bank_update.phoneNum) {\r\n        var link = `http://13.126.251.174:8084/svc-providers/${id}?name=${bankName}&contactPerson=${contactPerson}&email=${email}&phone_no=${phoneNum}`;\r\n        var response = await get.putData(link);\r\n        this.data = null;\r\n        await this.fetchData();\r\n\r\n    }\r\n    loadConstants() {\r\n        // load payment modes => \r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchModes`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"modes loaded :::::::\");\r\n            console.log(res.data.fund_mode);\r\n            this.setState({\r\n                fundModes: res.data.fund_mode,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n        // load share types =>\r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchShareType`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"share type loaded :::::::\");\r\n            console.log(res.data.fund_share_type);\r\n            this.setState({\r\n                fundShareTypes: res.data.fund_share_type,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData();\r\n        this.loadConstants();\r\n    }\r\n\r\n    updateFundConfig() {\r\n        console.log(\"this.state.serviceProviderFundConfig :::::::::::\");\r\n        console.log(this.state.serviceProviderFundConfig);\r\n\r\n        var requestData = JSON.stringify(this.state.serviceProviderFundConfig);\r\n        console.log(requestData);\r\n\r\n\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('request_data', requestData);\r\n        // bodyFormData.append('password', this.state.password);\r\n        // load payment modes => \r\n        axios({\r\n            method: 'post',\r\n            url: `http://46.137.196.214/apisp/funds/updateMasterFundConfig`,\r\n            data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"update config response :::::::\");\r\n            console.log(res.data);\r\n            // this.setState({\r\n            //     fundModes: res.data.fund_mode,\r\n            // })\r\n\r\n            this.setState({\r\n                payConfigModal: false\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <LoadingOverlay\r\n                    active={this.state.loading}\r\n                    spinner={<ClimbingBoxLoader />}\r\n                >\r\n                    {/* <Fab\r\n                    icon={<FontAwesomeIcon icon={faPlusCircle} />}\r\n                    onClick={() => { this.toggle_payconfig(); }}\r\n                >\r\n\r\n                </Fab> */}\r\n                    <Helmet>\r\n                        <title>Service Provider</title>\r\n                        <meta name=\"description\" content=\"Helmet application\" />\r\n                    </Helmet>\r\n\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"mt-3\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 col-12\">\r\n                                            <h3 className=\"mb-0\">Service Provider</h3><Button variant=\"primary\" onClick={(e) => {\r\n                                                this.setState({ createBankPartner: true });\r\n                                            }} className=\"btn-sm mb-3 mt-4\" style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> CREATE</Button>{' '}\r\n                                        </div>\r\n                                        <div className=\"col-md-6 col-12\">\r\n                                            <InputGroup className=\"mb-0\">\r\n                                                <FormControl\r\n                                                    placeholder=\"search here...\"\r\n                                                    aria-label=\"search here...\"\r\n                                                    aria-describedby=\"basic-addon2\"\r\n                                                />\r\n                                                <InputGroup.Append>\r\n                                                    <Button variant=\"outline-secondary\">Search</Button>\r\n                                                </InputGroup.Append>\r\n                                            </InputGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            {this.state.Loading ?\r\n                                (<Spinner animation=\"border\" style={{ \"margin-left\": \"50%\", }} />) : (<></>)}\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Table striped bordered hover responsive>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Service Provider Id</th>\r\n                                                <th>Service Provider Name</th>\r\n                                                <th>Contact Person</th>\r\n                                                <th>Contact Number</th>\r\n                                                <th>Payment Agreement Config</th>\r\n                                                <th>Bank Details</th>\r\n                                                <th>Manage</th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.Service_Provider.map((value, index) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            {value.id}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.name}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.contactPerson}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.phoneNum}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Button variant=\"primary\" className=\"btn-block\" onClick={() => {\r\n                                                                this.setState({ service_provider_id: value.id });\r\n                                                                this.setState({ serviceProviderFundConfig: [] })\r\n\r\n                                                                // load payment modes => \r\n                                                                axios({\r\n                                                                    method: 'get',\r\n                                                                    url: `http://46.137.196.214/apisp/funds/fetchMasterFundConfig/service_provider/` + value.id,\r\n                                                                    // data: bodyFormData,\r\n                                                                    headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                                }).then(res => {\r\n                                                                    console.log(\"fund config loaded :::::::\");\r\n                                                                    console.log(res.data.master_fund_config);\r\n                                                                    this.setState({ serviceProviderFundConfig: res.data.master_fund_config, })\r\n\r\n                                                                    this.setState({ payConfigModal: true });\r\n\r\n                                                                }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n\r\n                                                            }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faRupeeSign} /> Agreement</Button>{' '}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Button variant=\"info\" className=\"btn-block\" onClick={() => {\r\n                                                                this.setState({ bankDetailsModal: true, detailsId: value.id });\r\n\r\n                                                                this.fetchBankPartners(value.id);\r\n\r\n\r\n                                                            }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faUniversity} /></Button>{' '}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Button variant=\"warning\" title=\"Edit\" onClick={(e) => {\r\n                                                                this.setState({ bank_update: { option: true, index: index, currentVals: { id: value.id, bankName: value.name, contactPerson: value.contactPerson, phoneNum: value.phone_no, email: value.email } } });\r\n                                                            }}><FontAwesomeIcon icon={faEdit} /></Button>{' '}\r\n                                                            <Button variant=\"danger\" title=\"Delete\" onClick={(e) => {\r\n                                                                this.setState({ bank_delete: { option: true, index: value.id } });\r\n                                                            }}><FontAwesomeIcon icon={faTrashAlt} /></Button>{' '}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                        </tbody>\r\n                                    </Table>\r\n\r\n                                    <Pagination>\r\n                                        {/* <Pagination.First />\r\n                            <Pagination.Prev /> */}\r\n                                        <Pagination.Item active>{1}</Pagination.Item>\r\n                                        {/* <Pagination.Ellipsis /> */}\r\n\r\n                                        <Pagination.Item>{2}</Pagination.Item>\r\n                                        <Pagination.Item>{3}</Pagination.Item>\r\n                                        <Pagination.Item>{4}</Pagination.Item>\r\n                                        <Pagination.Item>{5}</Pagination.Item>\r\n                                        <Pagination.Item>{6}</Pagination.Item>\r\n\r\n                                        {/* <Pagination.Ellipsis /> */}\r\n                                        <Pagination.Item>{7}</Pagination.Item>\r\n                                        {/* <Pagination.Next />\r\n                            <Pagination.Last /> */}\r\n                                    </Pagination>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.payConfigModal}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                payConfigModal: false\r\n                            })\r\n                        }}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Fund Config</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"row mb-3\">\r\n                                <div className=\"col-12\">\r\n                                    <Button variant=\"primary\" className=\"btn-sm\"\r\n                                        onClick={(e) => {\r\n                                            var list = this.state.serviceProviderFundConfig;\r\n                                            list.push({ config_type: \"service_provider\", config_type_id: this.state.service_provider_id, mode_id: \"1\", share_type_id: \"1\", share_type: 'flat', share_type_rate: 'rate', rate_amount: '', from_amount: '', to_amount: '' });\r\n                                            this.setState({ serviceProviderFundConfig: list });\r\n                                        }}\r\n                                        style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n                            {this.state.serviceProviderFundConfig.map((value, index) => (\r\n                                <div className=\"row pb-3\" >\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.serviceProviderFundConfig[index].mode_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.serviceProviderFundConfig;\r\n                                                ref[index].mode_id = e.target.value;\r\n                                                this.setState({ serviceProviderFundConfig: ref });\r\n                                            }}\r\n                                        >\r\n                                            {this.state.fundModes.map((row, index) => (\r\n                                                <option value={row.id}>{row.mode}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.serviceProviderFundConfig[index].share_type_id}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.serviceProviderFundConfig;\r\n                                                ref[index].share_type_id = e.target.value;\r\n\r\n                                                this.state.fundShareTypes\r\n                                                    .filter(bank => bank.id === e.target.value)\r\n                                                    .map(bank => {\r\n                                                        ref[index].share_type = bank.sharing_type;\r\n                                                        ref[index].share_type_rate = bank.type;\r\n                                                        console.log(bank);\r\n                                                    })\r\n\r\n                                                this.setState({ serviceProviderFundConfig: ref });\r\n                                            }}>\r\n                                            {this.state.fundShareTypes.map((row, index) => (\r\n                                                <option value={row.id}>{row.name}</option>\r\n                                            ))}\r\n                                            {/* <option value=\"flat\">Flat</option>\r\n                                            <option value=\"range\">Range</option> */}\r\n                                        </select>\r\n                                        {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {/* {this.state.sp_fee_type == 'flat' ? */}\r\n\r\n                                        {this.state.serviceProviderFundConfig[index].share_type_rate == 'rate' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder='%'\r\n                                                value={this.state.serviceProviderFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.serviceProviderFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ serviceProviderFundConfig: ref });\r\n                                                }} />\r\n                                            : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\"\r\n                                                value={this.state.serviceProviderFundConfig[index].rate_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.serviceProviderFundConfig;\r\n                                                    ref[index].rate_amount = e.target.value;\r\n                                                    this.setState({ serviceProviderFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                        }\r\n\r\n                                        {/* <input type=\"text\" className=\"form-control\" placeholder='%' value={value.value == \"%\" ? null : value.value}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.serviceProviderFundConfig;\r\n                                                ref[index].value = e.target.value;\r\n                                                this.setState({ serviceProviderFundConfig: ref });\r\n                                            }}\r\n                                        /> */}\r\n\r\n                                        {/* : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" /> */}\r\n                                        {/* } */}\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.serviceProviderFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"From Amount\"\r\n                                                value={this.state.serviceProviderFundConfig[index].from_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.serviceProviderFundConfig;\r\n                                                    ref[index].from_amount = e.target.value;\r\n                                                    this.setState({ serviceProviderFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        {this.state.serviceProviderFundConfig[index].share_type == 'range' ?\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"To Amount\"\r\n                                                value={this.state.serviceProviderFundConfig[index].to_amount}\r\n                                                onChange={(e) => {\r\n                                                    var ref = this.state.serviceProviderFundConfig;\r\n                                                    ref[index].to_amount = e.target.value;\r\n                                                    this.setState({ serviceProviderFundConfig: ref });\r\n                                                }}\r\n                                            />\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                                    <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                        var list = this.state.serviceProviderFundConfig;\r\n                                                        list = list.filter((value, i) => index != i);\r\n                                                        this.setState({ serviceProviderFundConfig: list });\r\n                                                    }} icon={faTimes} /></a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n\r\n                            <div className=\"row pt-3 border-top\">\r\n                                <div className=\"col-12\">\r\n                                    <Button variant=\"warning\" className=\"btn-lg\"\r\n                                        onClick={(e) => {\r\n                                            // var list = this.state.serviceProviderFundConfig;\r\n                                            // list.push({ share_type_id: 1, share_type: 'flat', share_type_rate: 'rate' });\r\n                                            // this.setState({ serviceProviderFundConfig: list });\r\n                                            this.updateFundConfig();\r\n                                        }}\r\n                                        style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faSave} /> Save Changes</Button>{' '}\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bankDetailsModal}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bankDetailsModal: false\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Bank Details</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Button variant=\"primary\" className=\"btn-sm mb-3\" onClick={() => {\r\n\r\n                                this.setState({ bank_input: true });\r\n\r\n                            }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                            <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>A/c Holder Name</th>\r\n                                        <th>Account No</th>\r\n                                        <th>IFSC</th>\r\n                                        <th>is Default ?</th>\r\n                                        <th>Manage</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.bankDetailsList.map((value, index) => (<tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{value.ac_holder_name}</td>\r\n                                        <td>{value.account_no}</td>\r\n                                        <td>{value.IFSC}</td>\r\n                                        <td>\r\n                                            <Form.Check inline type={'radio'} name=\"default_bank\" id={`inline-${'radio'}-1`} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button variant=\"warning\" title=\"Edit\"><FontAwesomeIcon icon={faEdit} /></Button>{' '}\r\n                                            <Button variant=\"danger\" title=\"Delete\"><FontAwesomeIcon icon={faTrashAlt} onClick={(e) => {\r\n                                                this.setState({ bank_delete: { option: true, index: index } });\r\n                                            }} /></Button>{' '}\r\n                                        </td>\r\n                                    </tr>))}\r\n                                    {/* <tr>\r\n                                    <td>2</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr> */}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_input}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_input: false\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Add Bank Details</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>A/c Holder Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" placeholder=\"Enter A/c Holder Name\" onChange={(e) => {\r\n                                        this.bankDetails.ac_holder_name = e.target.value;\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Account No</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Account No\" onChange={(e) => {\r\n                                        this.bankDetails.account_no = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>IFSC</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter IFSC\" onChange={(e) => {\r\n                                        this.bankDetails.IFSC = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"button\" onClick={(e) => {\r\n                                    var list = this.state.bankDetailsList;\r\n                                    this.addBankPartners(this.state.detailsId, this.bankDetails.ac_holder_name, this.bankDetails.account_no, this.bankDetails.IFSC);\r\n\r\n                                }}>\r\n                                    Add\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_delete.option}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_delete: { option: false, index: -1 }\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Delete Option</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Button variant=\"outline-danger\" onClick={(e) => {\r\n                                var list = this.state.bankDetailsList;\r\n                                list = list.filter((value, index) => index != this.state.bank_delete.index);\r\n                                this.setState({ bankDetailsList: list, bank_delete: { option: false, index: -1 } });\r\n\r\n                            }}>Delete</Button>{' '}\r\n                            <Button variant=\"outline-success\">Back</Button>{' '}\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_delete.option}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_delete: { option: false, index: -1 }\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Delete Option</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Button variant=\"outline-danger\" onClick={async (e) => {\r\n                                var index = this.state.bank_delete.index;\r\n                                this.setState({ loading: true, bank_delete: { option: false, index: -1 } });\r\n                                var response = await get.deleteData(`http://13.126.251.174:8084/svc-providers/${index}`);\r\n                                this.data = null;\r\n                                this.fetchData();\r\n                                this.setState({ loading: false });\r\n\r\n                            }} >Delete</Button>{' '}\r\n                            <Button variant=\"outline-success\">Back</Button>{' '}\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_update.option}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_update: { option: false, index: -1 },\r\n                                loading: false,\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Add Bank Details</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Bank Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" placeholder=\"Bank Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.bank_name = e.target.value;\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\" >\r\n                                    <Form.Label>Contact Person</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Person\" onChange={(e) => {\r\n                                        this.Bank_Partners.contact_person = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.contact_number = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Person Email</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.email = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"primary\" type=\"button\" >\r\n                                    update\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n\r\n                    </Modal><Modal\r\n                        size=\"lg\"\r\n                        show={this.state.bank_update.option}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                bank_update: { option: false, index: -1, currentVals: {} },\r\n                                loading: false,\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Update Service</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" value = {this.state.bank_update.currentVals.bankName} defaultvalue={this.state.bank_update.currentVals.bankName} placeholder={this.state.bank_update.currentVals.bankName} onChange={(e) => {\r\n                                        this.Bank_Partners.bankName = e.target.value;\r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.currentVals.bankName=e.target.value;\r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\" >\r\n                                    <Form.Label>Contact Person</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bank_update.currentVals.contactPerson} defaultvalue={this.state.bank_update.currentVals.contactPerson} onChange={(e) => {\r\n                                        this.Bank_Partners.contact_person = e.target.value;\r\n                                    \r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.currentVals.contactPerson=e.target.value;\r\n                                       \r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bank_update.currentVals.phoneNum} defaultvalue={this.state.bank_update.currentVals.phoneNum} onChange={(e) => {\r\n                                        this.Bank_Partners.contact_number = e.target.value;\r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.currentVals.phoneNum=e.target.value;\r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Person Email</Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.bank_update.email} defaultvalue={this.state.bank_update.email} onChange={(e) => {\r\n                                        this.Bank_Partners.email = e.target.value;\r\n                                        var bankupdate =this.state.bank_update;\r\n                                        bankupdate.email=e.target.value;\r\n                                        this.setState({bank_update:bankupdate});\r\n                                    }} />\r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"primary\" type=\"button\" onClick={async (e) => {\r\n                                    this.setState({ loading: true, bank_update: { option: false, index: -1, currentVals: {} } });\r\n                                    await this.editData(this.state.bank_update.currentVals.id, this.Bank_Partners.bank_name, this.Bank_Partners.contact_person, this.Bank_Partners.contact_number, this.Bank_Partners.email);\r\n                                    this.setState({ loading: false, });\r\n                                }} >\r\n                                    update\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n\r\n                    </Modal>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.createBankPartner}\r\n                        onHide={() => {\r\n                            this.setState({\r\n                                createBankPartner: false,\r\n                                loading: false,\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">Add Service Provider</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Service Provider Name</Form.Label>\r\n                                    <Form.Control typr=\"text\" placeholder=\"Service Provider Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.Service_Provider_Name = e.target.value;\r\n                                    }} />\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Person</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Person\" onChange={(e) => {\r\n                                        this.Bank_Partners.contact_person = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.contact_number = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Contact Person Email</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                        this.Bank_Partners.email = e.target.value;\r\n                                    }} />\r\n                                </Form.Group>\r\n\r\n\r\n                                <Button variant=\"primary\" type=\"button\" onClick={async (e) => {\r\n                                    this.setState({ loading: true, createBankPartner: false });\r\n                                    var link = `http://13.126.251.174:8084/svc-providers?contactPerson=${this.Bank_Partners.contact_person}&email=${this.Bank_Partners.email}&phoneNum=${this.Bank_Partners.contact_number}&name=${this.Bank_Partners.Service_Provider_Name}`;\r\n                                    var data = {\r\n                                        contactPerson: this.Bank_Partners.contact_person,\r\n                                        email: this.Bank_Partners.email,\r\n                                        phoneNum: this.Bank_Partners.contact_number,\r\n                                        name: this.Bank_Partners.Service_Provider_Name,\r\n\r\n\r\n                                    }\r\n                                    var response = await get.postData(link, data);\r\n                                    this.data = null;\r\n                                    this.fetchData();\r\n                                    this.setState({ loading: false });\r\n\r\n\r\n                                }}>\r\n                                    Add\r\n                            </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n\r\n                    </Modal>\r\n                </LoadingOverlay>\r\n            </>);\r\n    }\r\n    toggle_payconfig = (value = true) => {\r\n        if (!value)\r\n            this.payConfigModal = false;\r\n        else\r\n            this.payConfigModal = true;\r\n    };\r\n    toggle_bankDetails = (value = true) => {\r\n        if (!value)\r\n            this.bankDetailsModal = false;\r\n        else\r\n            this.bankDetailsModal = true;\r\n    }\r\n}\r\n\r\n\r\nexport default index;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './index.css'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal, Spinner, Form } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faRupeeSign, faPlus, faTimes, faUniversity, faSave, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport get from \"../services/client_fetch\";\r\n\r\nclass index extends Component {\r\n\r\n    toggle_bankDetails = (value = true) => {\r\n\r\n        this.setState({ payConfigModal: value });\r\n\r\n\r\n    };\r\n    toggle_payconfig = (value = true) => {\r\n\r\n        this.setState({ bankDetailsModal: value });\r\n\r\n    };\r\n\r\n    state = {\r\n        payConfigModal: false,\r\n        bankDetailsModal: false,\r\n        Loading: true,\r\n        createBankPartner: false,\r\n        Referral_Partners: [],\r\n        loading: false,\r\n        bankDetailsList: [],\r\n        bank_update: { option: false, index: -1, currentVals: {} },\r\n        bank_input: false,\r\n        bank_delete: { view: false, index: -1 },\r\n\r\n        payConfigModal: false,\r\n        bankPartnersFundConfig: [],\r\n        // bankPartnersFundConfig: [{ share_type_id: 1, share_type: 'flat', share_type_rate: 'rate' }],\r\n        fundModes: [],\r\n        fundShareTypes: [],\r\n\r\n        referral_partner_id: '',\r\n    };\r\n    data = null;\r\n    searchtemplist = [];\r\n    Bank_Partners = {\r\n\r\n    };\r\n    bankDetails = {\r\n\r\n    };\r\n    async fetchBankPartners(detailsid) {\r\n        var link = `http://13.126.251.174:8082/referral-partners/${detailsid}/bank-details`;\r\n        this.bankdata = await get.getData(link);\r\n        this.setState({ bankDetailsList: this.bankdata });\r\n\r\n    }\r\n    async addBankPartners(detailsid, accountHolderName, accountNum, ifscCode) {\r\n        var link = `http://13.126.251.174:8082/referral-partners/${detailsid}/bank-details?accountHolderName=${accountHolderName}&accountNum=${accountNum}&id=${detailsid}&ifscCode=${ifscCode}`;\r\n        var response = await get.postData(link, {\r\n            id: detailsid,\r\n            accountHolderName: accountHolderName,\r\n            accountNum: accountNum,\r\n            ifscCode: ifscCode,\r\n        });\r\n\r\n        this.fetchBankPartners(detailsid);\r\n    }\r\n    async fetchData(first = 0, last = 10) {\r\n\r\n        if (this.data == null) {\r\n\r\n            var link = 'http://13.126.251.174:8082/referral-partners';\r\n\r\n            var response = await get.getData(link);\r\n            this.setState({ Loading: false });\r\n            this.data = response;\r\n            console.log(this.data);\r\n            this.searchtemplist = this.data;\r\n        }\r\n\r\n        var clientList = this.searchtemplist;\r\n        console.log(clientList);\r\n        var clientLength = clientList.length;\r\n\r\n        this.pageLength = clientLength / 100;\r\n\r\n        var clientMerchantDetailsList = clientList.slice(first, last);\r\n\r\n        this.setState({ Referral_Partners: clientMerchantDetailsList });\r\n    }\r\n    data = null;\r\n    searchtemplist = [];\r\n    Bank_Partners = {};\r\n    componentDidMount() {\r\n        this.fetchData();\r\n        this.loadConstants();\r\n    }\r\n\r\n    loadConstants() {\r\n        // load payment modes => \r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchModes`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"modes loaded :::::::\");\r\n            console.log(res.data.fund_mode);\r\n            this.setState({\r\n                fundModes: res.data.fund_mode,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n        // load share types =>\r\n        axios({\r\n            method: 'get',\r\n            url: `http://46.137.196.214/apisp/funds/fetchShareType`,\r\n            // data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"share type loaded :::::::\");\r\n            console.log(res.data.fund_share_type);\r\n            this.setState({\r\n                fundShareTypes: res.data.fund_share_type,\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n\r\n    updateFundConfig() {\r\n        console.log(\"this.state.bankPartnersFundConfig :::::::::::\");\r\n        console.log(this.state.bankPartnersFundConfig);\r\n\r\n        var requestData = JSON.stringify(this.state.bankPartnersFundConfig);\r\n        console.log(requestData);\r\n\r\n\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('request_data', requestData);\r\n        // bodyFormData.append('password', this.state.password);\r\n        // load payment modes => \r\n        axios({\r\n            method: 'post',\r\n            url: `http://46.137.196.214/apisp/funds/updateMasterFundConfig`,\r\n            data: bodyFormData,\r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n        }).then(res => {\r\n            console.log(\"update config response :::::::\");\r\n            console.log(res.data);\r\n            // this.setState({\r\n            //     fundModes: res.data.fund_mode,\r\n            // })\r\n\r\n            this.setState({\r\n                payConfigModal: false\r\n            })\r\n        }).catch(error => { console.log(JSON.stringify(error)) });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* <Fab\r\n                    icon={<FontAwesomeIcon icon={faPlusCircle} />}\r\n                    onClick={() => { this.toggle_payconfig(); }}\r\n                >\r\n\r\n                </Fab> */}\r\n\r\n                <Helmet>\r\n                    <title>Referral Partners</title>\r\n                    <meta name=\"description\" content=\"Helmet application\" />\r\n                </Helmet>\r\n\r\n                <div className=\"container-fluid\">\r\n\r\n                    <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <h3 className=\"mb-0\">Referral Partners</h3> <Button variant=\"primary\" onClick={(e) => {\r\n                                            this.setState({ createBankPartner: true });\r\n                                        }} className=\"btn-sm mb-3 mt-4\" style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> CREATE</Button>{' '}\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <InputGroup className=\"mb-0\">\r\n                                            <FormControl\r\n                                                placeholder=\"search here...\"\r\n                                                aria-label=\"search here...\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                            />\r\n                                            <InputGroup.Append>\r\n                                                <Button variant=\"outline-secondary\">Search</Button>\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    {this.state.Loading ?\r\n                        (<Spinner animation=\"border\" style={{ \"margin-left\": \"50%\", }} />) : (<></>)}\r\n                    <div className=\"mt-3\">\r\n\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Referral Partners#</th>\r\n                                            <th>Referral Name</th>\r\n                                            <th>Contact Person</th>\r\n                                            <th>Contact Number</th>\r\n                                            <th>Email</th>\r\n                                            <th>Payment Agreement Config</th>\r\n                                            <th>Bank Details</th>\r\n                                            <th>Manage</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.Referral_Partners.map((value, index) => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {value.id}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {value.referralName}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {value.contactPerson}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {value.phone_no}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {value.email}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button variant=\"primary\" className=\"btn-block\" onClick={() => {\r\n                                                            this.setState({ referral_partner_id: value.id });\r\n                                                            this.setState({ bankPartnersFundConfig: [] })\r\n\r\n                                                            // load payment modes => \r\n                                                            axios({\r\n                                                                method: 'get',\r\n                                                                url: `http://46.137.196.214/apisp/funds/fetchMasterFundConfig/referral_partner/` + value.id,\r\n                                                                // data: bodyFormData,\r\n                                                                headers: { 'Accept': 'application/json', 'Content-Type': 'multipart/form-data' }\r\n                                                            }).then(res => {\r\n                                                                console.log(\"fund config loaded :::::::\");\r\n                                                                console.log(res.data.master_fund_config);\r\n                                                                this.setState({ bankPartnersFundConfig: res.data.master_fund_config, })\r\n\r\n                                                                this.setState({ payConfigModal: true });\r\n\r\n                                                            }).catch(error => { console.log(JSON.stringify(error)) });\r\n\r\n\r\n                                                        }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faRupeeSign} /> Agreement</Button>{' '}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button variant=\"info\" className=\"btn-block\" onClick={() => { this.setState({ bankDetailsModal: true }); }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faUniversity} /></Button>{' '}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button variant=\"warning\" title=\"Edit\"><FontAwesomeIcon icon={faEdit} onClick={(e) => {\r\n                                                            this.setState({ bank_update: { option: true, index: index } });\r\n                                                        }} /></Button>{' '}\r\n                                                        <Button variant=\"danger\" title=\"Delete\"><FontAwesomeIcon icon={faTrashAlt} onClick={(e) => {\r\n                                                            this.setState({ bank_delete: { option: true, index: index } });\r\n                                                        }} /></Button>{' '}\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                                <Pagination>\r\n                                    {/* <Pagination.First />\r\n                            <Pagination.Prev /> */}\r\n                                    <Pagination.Item active>{1}</Pagination.Item>\r\n                                    {/* <Pagination.Ellipsis /> */}\r\n\r\n                                    <Pagination.Item>{2}</Pagination.Item>\r\n                                    <Pagination.Item>{3}</Pagination.Item>\r\n                                    <Pagination.Item>{4}</Pagination.Item>\r\n                                    <Pagination.Item>{5}</Pagination.Item>\r\n                                    <Pagination.Item>{6}</Pagination.Item>\r\n\r\n                                    {/* <Pagination.Ellipsis /> */}\r\n                                    <Pagination.Item>{7}</Pagination.Item>\r\n                                    {/* <Pagination.Next />\r\n                            <Pagination.Last /> */}\r\n                                </Pagination>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.payConfigModal}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            payConfigModal: false\r\n                        })\r\n                    }}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Fund Config</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-12\">\r\n                                <Button variant=\"primary\" className=\"btn-sm\"\r\n                                    onClick={(e) => {\r\n                                        var list = this.state.bankPartnersFundConfig;\r\n                                        list.push({ config_type: \"referral_partner\", config_type_id: this.state.referral_partner_id, mode_id: \"1\", share_type_id: \"1\", share_type: 'flat', share_type_rate: 'rate', rate_amount: '', from_amount: '', to_amount: '' });\r\n                                        this.setState({ bankPartnersFundConfig: list });\r\n                                    }}\r\n                                    style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                            </div>\r\n                        </div>\r\n                        {this.state.bankPartnersFundConfig.map((value, index) => (\r\n                            <div className=\"row pb-3\" >\r\n                                <div className=\"col-2\">\r\n                                    <select className=\"form-control\"\r\n                                        value={this.state.bankPartnersFundConfig[index].mode_id}\r\n                                        onChange={(e) => {\r\n                                            var ref = this.state.bankPartnersFundConfig;\r\n                                            ref[index].mode_id = e.target.value;\r\n                                            this.setState({ bankPartnersFundConfig: ref });\r\n                                        }}\r\n                                    >\r\n                                        {this.state.fundModes.map((row, index) => (\r\n                                            <option value={row.id}>{row.mode}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    <select className=\"form-control\"\r\n                                        value={this.state.bankPartnersFundConfig[index].share_type_id}\r\n                                        onChange={(e) => {\r\n                                            var ref = this.state.bankPartnersFundConfig;\r\n                                            ref[index].share_type_id = e.target.value;\r\n\r\n                                            this.state.fundShareTypes\r\n                                                .filter(bank => bank.id === e.target.value)\r\n                                                .map(bank => {\r\n                                                    ref[index].share_type = bank.sharing_type;\r\n                                                    ref[index].share_type_rate = bank.type;\r\n                                                    console.log(bank);\r\n                                                })\r\n\r\n                                            this.setState({ bankPartnersFundConfig: ref });\r\n                                        }}>\r\n                                        {this.state.fundShareTypes.map((row, index) => (\r\n                                            <option value={row.id}>{row.name}</option>\r\n                                        ))}\r\n                                        {/* <option value=\"flat\">Flat</option>\r\n                                            <option value=\"range\">Range</option> */}\r\n                                    </select>\r\n                                    {/* <Button variant=\"primary\" className=\"btn-sm\"  onClick={() => { this.setState({ payConfigModal: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '} */}\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    {/* {this.state.sp_fee_type == 'flat' ? */}\r\n\r\n                                    {this.state.bankPartnersFundConfig[index].share_type_rate == 'rate' ?\r\n                                        <input type=\"text\" className=\"form-control\" placeholder='%'\r\n                                            value={this.state.bankPartnersFundConfig[index].rate_amount}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].rate_amount = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }} />\r\n                                        : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\"\r\n                                            value={this.state.bankPartnersFundConfig[index].rate_amount}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].rate_amount = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        />\r\n                                    }\r\n\r\n                                    {/* <input type=\"text\" className=\"form-control\" placeholder='%' value={value.value == \"%\" ? null : value.value}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].value = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        /> */}\r\n\r\n                                    {/* : <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" /> */}\r\n                                    {/* } */}\r\n\r\n\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    {this.state.bankPartnersFundConfig[index].share_type == 'range' ?\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"From Amount\"\r\n                                            value={this.state.bankPartnersFundConfig[index].from_amount}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].from_amount = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        />\r\n                                        : null\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    {this.state.bankPartnersFundConfig[index].share_type == 'range' ?\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"To Amount\"\r\n                                            value={this.state.bankPartnersFundConfig[index].to_amount}\r\n                                            onChange={(e) => {\r\n                                                var ref = this.state.bankPartnersFundConfig;\r\n                                                ref[index].to_amount = e.target.value;\r\n                                                this.setState({ bankPartnersFundConfig: ref });\r\n                                            }}\r\n                                        />\r\n                                        : null\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"text-danger\" style={{ fontSize: '1.8em' }}>\r\n                                                <a href=\"#\" className=\"text-danger\"><FontAwesomeIcon onClick={(e) => {\r\n                                                    var list = this.state.bankPartnersFundConfig;\r\n                                                    list = list.filter((value, i) => index != i);\r\n                                                    this.setState({ bankPartnersFundConfig: list });\r\n                                                }} icon={faTimes} /></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <div className=\"row pt-3 border-top\">\r\n                            <div className=\"col-12\">\r\n                                <Button variant=\"warning\" className=\"btn-lg\"\r\n                                    onClick={(e) => {\r\n                                        // var list = this.state.bankPartnersFundConfig;\r\n                                        // list.push({ share_type_id: 1, share_type: 'flat', share_type_rate: 'rate' });\r\n                                        // this.setState({ bankPartnersFundConfig: list });\r\n                                        this.updateFundConfig();\r\n                                    }}\r\n                                    style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faSave} /> Save Changes</Button>{' '}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n\r\n\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.createBankPartner}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            createBankPartner: false,\r\n                            loading: false,\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Add Bank Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Bank Name</Form.Label>\r\n                                <Form.Control typr=\"text\" placeholder=\"Bank Name\" onChange={(e) => {\r\n                                    this.Bank_Partners.bank_name = e.target.value;\r\n                                }} />\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Contact Person</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Contact Person\" onChange={(e) => {\r\n                                    this.Bank_Partners.contact_person = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                    this.Bank_Partners.contact_number = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Contact Person Email</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                    this.Bank_Partners.email = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" onClick={async (e) => {\r\n                                var list = this.state.Referral_Partners;\r\n\r\n\r\n                                var link = `http://13.126.251.174:8081/bank-partners?email=${this.Bank_Partners.email}&bankName=${this.Bank_Partners.bank_name}&contactPerson=${this.Bank_Partners.contact_person}&phoneNum=${this.Bank_Partners.contact_number}`;\r\n                                this.setState({ loading: true });\r\n                                var response = await get.postData(link, {\r\n                                    bankName: this.Bank_Partners.bank_name,\r\n                                    contactPerson: this.Bank_Partners.contact_person,\r\n                                    email: this.Bank_Partners.email,\r\n                                    phoneNum: this.Bank_Partners.contact_number,\r\n                                });\r\n\r\n                                console.log('response :::::::::::::::::::::');\r\n                                console.log(response);\r\n\r\n                                if (response.status === 200) {\r\n                                    this.setState({ loading: false, createBankPartner: false });\r\n                                } else {\r\n                                    this.setState({ loading: false, });\r\n                                }\r\n\r\n                                // list.push({ bank_name: this.Bank_Partners.bank_name, first_name: this.Bank_Partners.contact_person, contact_number: this.Bank_Partners.contact_number });\r\n                                // this.setState({ Bank_Partners: list, createBankPartner: false });\r\n\r\n                                this.currentPage = 0;\r\n                                this.NewAddtion = true;\r\n                                this.fetchData();\r\n                            }} type=\"button\" >\r\n                                Add\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bankDetailsModal}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bankDetailsModal: false\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Bank Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Button variant=\"primary\" className=\"btn-sm mb-3\" onClick={() => { this.setState({ bank_input: true }); }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} /> Add</Button>{' '}\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>A/c Holder Name</th>\r\n                                    <th>Account No</th>\r\n                                    <th>IFSC</th>\r\n                                    <th>is Default ?</th>\r\n                                    <th>Manage</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.bankDetailsList.map((value, index) => (<tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{value.ac_holder_name}</td>\r\n                                    <td>{value.account_no}</td>\r\n                                    <td>{value.IFSC}</td>\r\n                                    <td>\r\n                                        <Form.Check inline type={'radio'} name=\"default_bank\" id={`inline-${'radio'}-1`} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button variant=\"warning\" title=\"Edit\"><FontAwesomeIcon icon={faEdit} /></Button>{' '}\r\n                                        <Button variant=\"danger\" title=\"Delete\"><FontAwesomeIcon icon={faTrashAlt} onClick={(e) => {\r\n                                            this.setState({ bank_delete: { option: true, index: index } });\r\n                                        }} /></Button>{' '}\r\n                                    </td>\r\n                                </tr>))}\r\n                                {/* <tr>\r\n                                    <td>2</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bank_input}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bank_input: false\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Add Bank Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>A/c Holder Name</Form.Label>\r\n                                <Form.Control typr=\"text\" placeholder=\"Enter A/c Holder Name\" onChange={(e) => {\r\n                                    this.bankDetails.ac_holder_name = e.target.value;\r\n                                }} />\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Account No</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Account No\" onChange={(e) => {\r\n                                    this.bankDetails.account_no = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>IFSC</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter IFSC\" onChange={(e) => {\r\n                                    this.bankDetails.IFSC = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"button\" onClick={(e) => {\r\n                                var list = this.state.bankDetailsList;\r\n\r\n                                list.push({ ac_holder_name: this.bankDetails.ac_holder_name, account_no: this.bankDetails.account_no, IFSC: this.bankDetails.IFSC });\r\n                                this.setState({ bankDetailsList: list, bank_input: false });\r\n\r\n                            }}>\r\n                                Add\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bank_delete.option}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bank_delete: { option: false, index: -1 }\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Delete Option</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Button variant=\"outline-danger\" onClick={(e) => {\r\n                            var list = this.state.bankDetailsList;\r\n                            list = list.filter((value, index) => index != this.state.bank_delete.index);\r\n                            this.setState({ bankDetailsList: list, bank_delete: { option: false, index: -1 } });\r\n\r\n                        }}>Delete</Button>{' '}\r\n                        <Button variant=\"outline-success\">Back</Button>{' '}\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bank_delete.option}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bank_delete: { option: false, index: -1 }\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Delete Option</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Button variant=\"outline-danger\" >Delete</Button>{' '}\r\n                        <Button variant=\"outline-success\">Back</Button>{' '}\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.bank_update.option}\r\n                    onHide={() => {\r\n                        this.setState({\r\n                            bank_update: { option: false, index: -1 },\r\n                            loading: false,\r\n                        })\r\n                    }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Update Referrals</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Bank Name</Form.Label>\r\n                                <Form.Control typr=\"text\" placeholder=\"Bank Name\" onChange={(e) => {\r\n                                    this.Bank_Partners.bank_name = e.target.value;\r\n                                }} />\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\" >\r\n                                <Form.Label>Contact Person</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Contact Person\" onChange={(e) => {\r\n                                    this.Bank_Partners.contact_person = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                    this.Bank_Partners.contact_number = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Contact Person Email</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Contact Name\" onChange={(e) => {\r\n                                    this.Bank_Partners.email = e.target.value;\r\n                                }} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" >\r\n                                update\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </>);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default index;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faRupeeSign, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        payConfigModal: state.payConfigModal,\r\n        bankDetailsModal: state.bankDetailsModal,\r\n        SubPaisaHolding: state.SubPaisaHolding,\r\n\r\n    };\r\n}\r\nclass index extends Component {\r\n    payConfigModal = false;\r\n    bankDetailsModal = false;\r\n    state = {\r\n        SubPaisaHolding: [\r\n            {\r\n                bank_id: \"1232\",\r\n                bank_name: \"some bank\",\r\n                contact_person: \"someperson\",\r\n                contact_number: \"+911234567890\",\r\n\r\n            }\r\n        ]\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <Fab\r\n                    icon={<FontAwesomeIcon icon={faPlusCircle} />}\r\n                    onClick={() => { this.props.toggle_payconfig(); }}\r\n                >\r\n\r\n                </Fab>\r\n                <Helmet>\r\n                    <title>SabPaisa Holding</title>\r\n                    <meta name=\"description\" content=\"Helmet application\" />\r\n                </Helmet>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <h3 className=\"mb-0\">SabPaisa Holding</h3>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <InputGroup className=\"mb-0\">\r\n                                            <FormControl\r\n                                                placeholder=\"search here...\"\r\n                                                aria-label=\"search here...\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                            />\r\n                                            <InputGroup.Append>\r\n                                                <Button variant=\"outline-secondary\">Search</Button>\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Bank Id#</th>\r\n                                            <th>Bank Name</th>\r\n                                            <th>Contact Person</th>\r\n                                            <th>Contact Number</th>\r\n                                            <th><FontAwesomeIcon icon={faRupeeSign} /> Config</th>\r\n                                            <th>Manage</th>\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.SubPaisaHolding.map((row, index) => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{row.bank_id}</td>\r\n                                                    <td>{row.bank_name}</td>\r\n                                                    <td>{row.contact_person}</td>\r\n                                                    <td>{row.contact_number}</td>\r\n                                                    <td>\r\n                                                        <Button variant=\"primary\" className=\"btn-block\" onClick={() => { this.setState({ bankDetailsModal: true }); }} style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faRupeeSign} /> Pay Agreement</Button>{' '}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button variant=\"warning\" title=\"Edit\"><FontAwesomeIcon icon={faEdit} /></Button>{' '}\r\n                                                        <Button variant=\"danger\" title=\"Delete\"><FontAwesomeIcon icon={faTrashAlt} /></Button>{' '}\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                                <Pagination>\r\n                                    {/* <Pagination.First />\r\n                            <Pagination.Prev /> */}\r\n                                    <Pagination.Item active>{1}</Pagination.Item>\r\n                                    {/* <Pagination.Ellipsis /> */}\r\n\r\n                                    <Pagination.Item>{2}</Pagination.Item>\r\n                                    <Pagination.Item>{3}</Pagination.Item>\r\n                                    <Pagination.Item>{4}</Pagination.Item>\r\n                                    <Pagination.Item>{5}</Pagination.Item>\r\n                                    <Pagination.Item>{6}</Pagination.Item>\r\n\r\n                                    {/* <Pagination.Ellipsis /> */}\r\n                                    <Pagination.Item>{7}</Pagination.Item>\r\n                                    {/* <Pagination.Next />\r\n                            <Pagination.Last /> */}\r\n                                </Pagination>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.payConfigModal}\r\n                    onHide={() => { this.toggle_payconfig(false); }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Fund Sharing Configuration</Modal.Title>\r\n\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n\r\n                                    <th>Bank partners</th>\r\n                                    <th>Service Provider</th>\r\n                                    <th>Referral Partners</th>\r\n                                    <th>is Default ?</th>\r\n                                    <th>Manage</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {\r\n\r\n                                    this.state.SubPaisaHolding.map((values, index) => {\r\n                                        console.log(values);\r\n                                        console.log(index);\r\n                                        return (\r\n                                            <tr>\r\n                                                <td>{index}</td>\r\n                                                <td>{values.Bank_partners}</td>\r\n                                                <td>{values.Service_Provider}</td>\r\n                                                <td>{values.Referral_Partners}</td>\r\n\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                            </tr>);\r\n                                    })\r\n                                }\r\n                                {/* <tr>\r\n                                <td>2</td>\r\n                                <td>XYZ Enterprises</td>\r\n                                <td>234234324324234</td>\r\n                                <td>HDFC0001001</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>XYZ Enterprises</td>\r\n                                <td>234234324324234</td>\r\n                                <td>HDFC0001001</td>\r\n                            </tr> */}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.bankDetailsModal}\r\n                    onHide={() => { this.toggle_bankDetails(false) }}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">Bank Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>A/c Holder Name</th>\r\n                                    <th>Account No</th>\r\n                                    <th>IFSC</th>\r\n                                    <th>is Default ?</th>\r\n                                    <th>Manage</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>XYZ Enterprises</td>\r\n                                    <td>234234324324234</td>\r\n                                    <td>HDFC0001001</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                <td>2</td>\r\n                                <td>XYZ Enterprises</td>\r\n                                <td>234234324324234</td>\r\n                                <td>HDFC0001001</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>3</td>\r\n                                <td>XYZ Enterprises</td>\r\n                                <td>234234324324234</td>\r\n                                <td>HDFC0001001</td>\r\n                            </tr> */}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>);\r\n    }\r\n    toggle_payconfig = (value = true) => {\r\n        if (!value)\r\n            this.payConfigModal = false;\r\n        else\r\n            this.payConfigModal = true;\r\n    };\r\n    toggle_bankDetails = (value = true) => {\r\n        if (!value)\r\n            this.bankDetailsModal = false;\r\n        else\r\n            this.bankDetailsModal = true;\r\n    };\r\n}\r\n\r\n\r\nexport default index;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal,Form } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUpload ,faRupeeSign, faSignOutAlt, faUniversity,faPlusCircle, faArrowRight} from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport \"./index.css\";\r\n\r\n\r\nclass index extends Component{\r\n    payConfigModal= false;\r\n    addition=true;\r\n    bankDetailsModal= false;\r\n    totalPending=0;\r\n    totalAmounttobe=0;\r\n    totalAmount=0;\r\n    state={\r\n        Proceed:false,\r\n        Settlement:[\r\n            {\r\n                checked:false,\r\n                Merchant_Id:'3A121A',\r\n               Merchant_Code:\"ND122\",\r\n               Merchant_Name:\"Sagar\",\r\n               Pending_Settlement_amount:1000,\r\n               Amount_to_settle:99,\r\n            },\r\n            {\r\n                checked:false,\r\n                Merchant_Id:'3B212C',\r\n               Merchant_Code:\"NNSA2\",\r\n               Merchant_Name:\"Yash\",\r\n               Pending_Settlement_amount:900,\r\n               Amount_to_settle:80,\r\n            },\r\n            {\r\n                checked:false,\r\n                Merchant_Id:'3C211V',\r\n               Merchant_Code:\"NNNA2\",\r\n               Merchant_Name:\"Shreeansh\",\r\n               Pending_Settlement_amount:800,\r\n               Amount_to_settle:11,\r\n            },\r\n            {\r\n                checked:false,\r\n                Merchant_Id:'3D212V',\r\n               Merchant_Code:\"NNNN2\",\r\n               Merchant_Name:\"Kanishk\",\r\n               Pending_Settlement_amount:1121,\r\n               Amount_to_settle:121,\r\n            },\r\n            \r\n        ]\r\n    };\r\n\r\n    render(){\r\n    return (\r\n        <>\r\n        <Fab\r\n        \r\n           icon={<FontAwesomeIcon icon={faArrowRight} />}\r\n           onClick={()=>{this.setState({Proceed:true});}}\r\n           >\r\n               \r\n           </Fab>\r\n            <Helmet>\r\n                <title>Settlement</title>\r\n                <meta name=\"description\" content=\"Helmet application\" />\r\n            </Helmet>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"mt-3\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <h3 className=\"mb-0\">Settlement</h3>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <InputGroup className=\"mb-0\">\r\n                                        <FormControl\r\n                                            placeholder=\"search here...\"\r\n                                            aria-label=\"search here...\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                        />\r\n                                        <InputGroup.Append>\r\n                                            <Button variant=\"outline-secondary\">Search</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    \r\n                    <Card>\r\n                    <Button variant=\"primary\" className=\"marf\" size=\"lg\" onClick={()=>{this.setState({Proceed:true});}}>\r\n      Proceed\r\n    </Button>{' '}\r\n                        <Card.Body>\r\n                            <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Merchant Id</th>\r\n                                        <th>Merchant Code</th>\r\n                                        <th>Merchant Name</th>\r\n                                        <th>Pending Settlement Amount</th>\r\n                                        <th>Amount to settle</th>\r\n                                        <th>Amount to be settled</th>\r\n                                        <th>Select All \r\n      {this.state.checked?(<InputGroup.Checkbox aria-label=\"Checkbox for following text input\" onClick={(e)=>{\r\n          this.setState({checked:this.state.checked?false:true});\r\n      }} checked />):(<InputGroup.Checkbox aria-label=\"Checkbox for following text input\" onClick={(e)=>{\r\n        this.setState({checked:this.state.checked?false:true});\r\n    }} />)}\r\n    </th>\r\n                                        \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                   {this.state.Settlement.map((value,index)=>{\r\n                                       if(this.addition)\r\n                                       this.totalPending+=value.Pending_Settlement_amount;\r\n                                       if(this.addition)\r\n                                       this.totalAmount+=value.Amount_to_settle;\r\n                                       return (\r\n                                           <tr>\r\n                                               <td>\r\n                                                   {value.Merchant_Id}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.Merchant_Code}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.Merchant_Name}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.Pending_Settlement_amount}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.Amount_to_settle}\r\n                                               </td>\r\n                                               <td><Form.Group controlId=\"formBasicEmail\">\r\n                                                   \r\n\r\n    <Form.Control type=\"email\" placeholder=\"Amount\" className=\"mar\" />\r\n    \r\n  </Form.Group></td>\r\n  <td>\r\n  {this.state.checked?(<InputGroup.Checkbox aria-label=\"Checkbox for following text input\" checked />):(<InputGroup.Checkbox aria-label=\"Checkbox for following text input\"  />)}\r\n    </td>\r\n                                           </tr>\r\n                                       );\r\n                                   })}\r\n                                   {(()=>{\r\n                                       this.addition=false;\r\n                                   })()}\r\n                                   <tr>\r\n                                       <td>\r\n                                           Total\r\n                                       </td>\r\n                                       <td>\r\n                                           \r\n                                       </td>\r\n                                       <td>\r\n                                           \r\n                                       </td>\r\n                                       <td>\r\n                                           {this.totalPending}\r\n                                       </td>\r\n                                       <td>\r\n                                           {this.totalAmount}\r\n                                       </td>\r\n                                       <td>\r\n                                           {this.totalAmounttobe}\r\n                                       </td>\r\n                                   </tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                            <Pagination>\r\n                                {/* <Pagination.First />\r\n                            <Pagination.Prev /> */}\r\n                                <Pagination.Item active>{1}</Pagination.Item>\r\n                                {/* <Pagination.Ellipsis /> */}\r\n\r\n                                <Pagination.Item>{2}</Pagination.Item>\r\n                                <Pagination.Item>{3}</Pagination.Item>\r\n                                <Pagination.Item>{4}</Pagination.Item>\r\n                                <Pagination.Item>{5}</Pagination.Item>\r\n                                <Pagination.Item>{6}</Pagination.Item>\r\n\r\n                                {/* <Pagination.Ellipsis /> */}\r\n                                <Pagination.Item>{7}</Pagination.Item>\r\n                                {/* <Pagination.Next />\r\n                            <Pagination.Last /> */}\r\n                            </Pagination>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                size=\"lg\"\r\n                show={this.state.Proceed}\r\n                onHide={()=>{this.setState({Proceed:false});}}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">Do you want to send this for approval</Modal.Title>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Card>\r\n  <Card.Header as=\"h5\"></Card.Header>\r\n  <Card.Body>\r\n    <Card.Title>Settlement Summary</Card.Title>\r\n    <Card.Text>\r\n        <div className=\"te\">Number of Merchant - &nbsp;&nbsp; <span className=\"co\">{this.state.Settlement.length}</span></div>\r\n     <div className=\"te\">Total Amount to be settled - &nbsp;&nbsp; <span className=\"co\">{this.totalAmount}</span></div>\r\n     \r\n    </Card.Text>\r\n    <Button variant=\"outline-success\" className=\"but\">YES</Button>{' '}\r\n    <Button variant=\"outline-danger\" className='but'>NO</Button>{' '}\r\n  </Card.Body>\r\n</Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n            \r\n        </>);\r\n    } \r\n    toggle_payconfig=(value=true)=>{\r\n        if(!value)\r\n        this.payConfigModal=false;\r\n        else\r\n        this.payConfigModal=true;\r\n    };\r\n    toggle_bankDetails=(value=true)=>{\r\n        if(!value)\r\n        this.bankDetailsModal=false;\r\n        else\r\n        this.bankDetailsModal=true;\r\n    };\r\n}\r\n\r\n\r\nexport default index;","import React, { Component } from 'react'\r\nimport {Form,Button, Container,Row,Col,Toast} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './index.css';\r\nimport { useHistory } from 'react-router-dom'\r\nconst mapState = (state)=>{\r\n  console.log(state);\r\n  return {\r\n      user:state.user!=null?state.user:null,\r\n      \r\n  };\r\n}\r\nvar email=\"rajiv.moti@sabpaisa.com\";\r\nvar passcode=\"12345\";\r\nvar show=localStorage.getItem('show');\r\nconsole.log(show);\r\nvar toast=(  <Col xs={6}>\r\n  <Toast show={show} onClose={()=>{show=false;}}>\r\n    <Toast.Header>\r\n      <img\r\n        src=\"holder.js/20x20?text=%20\"\r\n        className=\"rounded mr-2\"\r\n        alt=\"\"\r\n      />\r\n      <strong className=\"mr-auto\">Wrong info</strong>\r\n      \r\n    </Toast.Header>\r\n    <Toast.Body>Login Info is not Correct</Toast.Body>\r\n  </Toast>\r\n</Col>);\r\nconst Index=(props)=> \r\n{\r\n   const history=useHistory();\r\n   if((props.user.email!=null)||(props.user.name!=null))\r\n   history.push('/dashboard');\r\n  \r\n    \r\n        return (\r\n          \r\n            <div className=\"topmar\">\r\n\r\n            <Form>\r\n            <div>\r\n        <img className=\"imgmar\" src='/logo.png'></img>\r\n      </div>\r\n      \r\n  <Form.Group controlId=\"formBasicEmail\" className='field'>\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control value=\"rajiv.moti@sabpaisa.com\" type=\"email\" placeholder=\"Enter email\" onChange={(e)=>{\r\n      email=e.target.value;\r\n    }}/>\r\n    {/* <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text> */}\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\" className='field'>\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" value = \"12345\" placeholder=\"Password\" onChange={(e)=>{\r\n      passcode=e.target.value;\r\n    } }/>\r\n  </Form.Group>\r\n  {/* <Form.Group controlId=\"formBasicCheckbox\" className='field'>\r\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n  </Form.Group> */}\r\n\r\n  <Button variant=\"primary\" type=\"submit\" className=\"field\" onClick={(e)=>{\r\n   \r\n    if((email==\"rajiv.moti@sabpaisa.com\")&&(passcode=='12345'))\r\n    {\r\n      localStorage.setItem(\"email\",email);\r\n      localStorage.setItem('name',email);\r\n      localStorage.removeItem('show');\r\n    props.Auth({email:email,name:email},passcode);\r\n    history.push('/');\r\n    \r\n    }\r\n    else{\r\n    localStorage.setItem('show',true);\r\n    }\r\n\r\n  }}>\r\n    Submit\r\n  </Button >\r\n  {toast}\r\n</Form>\r\n</div>\r\n        );\r\n    \r\n}\r\n\r\nconst Auth = (dispatch)=>{\r\n  return {\r\n    Auth:(user,password)=>{\r\n      dispatch({type:\"AUTH\",user:user,password:password});\r\n      \r\n    }\r\n  }\r\n}\r\nexport default connect(mapState,Auth)(Index);","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,ProgressBar} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { MemoryRouter, Switch, Route, Link, NavLink } from 'react-router-dom';\r\nimport { faSignOutAlt,faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nconst cards = (link,active,number,value,onclick,Sabpaisa=true)=>{\r\n    return ( <Col ><Card fluid className={active?\"yy shadow-lg  rounded active_tools\":\"yy shadow-lg  rounded\"} onClick={(e)=>{\r\n      onclick();\r\n    }}>\r\n    <Container>\r\n      <h5 className=\"yy mar\">{value}</h5>\r\n     \r\n      {Sabpaisa?<h2 className = \"num\">{number}</h2>:<h4 className=\"numsab\">{number}</h4>}\r\n      {!Sabpaisa?(<ProgressBar  now={number} striped variant=\"danger\" />):<> </>}\r\n      {Sabpaisa?( active?<Link to={link}><Button variant=\"danger\" className=\"yy btoon \" size=\"lg\" block>\r\n     View\r\n    </Button></Link>:<Button variant=\"outline-danger\" className=\"yy btoon \" size=\"lg\" block>\r\n     View\r\n    </Button>):(active?<Button variant=\"danger\" className=\"yysab btoon\" size=\"lg\" block>\r\n      View\r\n    </Button>:<Button variant=\"outline-danger\" className=\"yysab btoon\" size=\"lg\" block>\r\n      View\r\n    </Button>)}\r\n    {Sabpaisa?(active?<Button variant=\"danger\" className=\"yy btoon\"  block>\r\n        <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon> &nbsp; {value}\r\n    </Button>:<Button variant=\"outline-danger\" className=\"yy btoon\"  block>\r\n        <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon> &nbsp; {value}\r\n    </Button>):<></>}\r\n    \r\n     \r\n  </Container>\r\n  </Card></Col>);\r\n  };\r\n\r\nexport default cards;","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,ProgressBar} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt,faPlusCircle,faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { MemoryRouter, Switch, Route, Link, NavLink } from 'react-router-dom';\r\nconst merchant = (active,onclick,value,number)=>{\r\n    if(active)\r\n    return (<Col><Card fluid className=\"yy shadow-lg   rounded active_tools_2\" onClick={(e)=>{\r\n      onclick();\r\n    }}>\r\n    <Container>\r\n      <h4 className=\"yy mar bol\">{value}</h4>\r\n     \r\n     \r\n      {/* <Row>  <h2 className = \" cc btoon_top\">1273</h2></Row> */}\r\n      <Row>  <h4 className = \" marman \">Today's Collections &nbsp;&nbsp;&nbsp; <span className = \"bol\"> 2394 </span> </h4></Row>\r\n      <Row>  <h4 className = \" marman \">Month's Collections &nbsp;  <span className = \"bol\"> 43823 </span></h4></Row>\r\n     <Col>\r\n     <Row>\r\n     <Col><Button variant=\"danger\" className=\"yy_top btoon_top\" size=\"lg\" block>\r\n      View\r\n    </Button>\r\n    </Col>\r\n    \r\n    <Col><Button variant=\"danger\" className=\"yy_top btoon_top\" size=\"lg\" block>\r\n    <FontAwesomeIcon icon={faSearch}></FontAwesomeIcon>  Find Details\r\n    </Button>\r\n    </Col>\r\n    </Row>\r\n    \r\n    </Col>\r\n \r\n    \r\n     \r\n  </Container>\r\n  </Card></Col>);\r\n    else\r\n    return (<Col>\r\n    <Card fluid className=\"yy shadow-lg  rounded\" onClick={(e)=>{\r\n      onclick();\r\n    }}>\r\n    <Container>\r\n   \r\n      <h4 className=\"yy mar\">{value}</h4>\r\n     \r\n     \r\n      <Row> <Col> <h2 className = \"num_top btoon_top some\">{number*23}</h2></Col>\r\n    \r\n     <Col>\r\n    \r\n     <Row><Button variant=\"outline-danger\" className=\"yy_top btoon_top\" size=\"lg\" block>\r\n      View\r\n    </Button>\r\n    </Row>\r\n    <Row><Button variant=\"outline-danger\" className=\"yy_top btoon_top\" size=\"lg\" block>\r\n    <FontAwesomeIcon icon={faSearch}></FontAwesomeIcon>  Find Details\r\n    </Button>\r\n    </Row>\r\n\r\n   \r\n    \r\n   \r\n    </Col>\r\n    </Row>\r\n \r\n    <ProgressBar className = \"pro\" striped variant=\"danger\" now={number} />\r\n   \r\n     \r\n  </Container>\r\n  </Card></Col>);\r\n  };\r\n\r\nexport default merchant;","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,InputGroup, FormControl,} from 'react-bootstrap';\r\nimport './index.css'\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport cards from \"./components/cards\";\r\nimport card2 from \"./components/card2\";\r\n\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nexport default class index extends Component {\r\n  \r\n    state={active:{\r\n      bank:false,\r\n      referral:false,\r\n      service:false,\r\n      merchant:false,\r\n      trans:false,\r\n      sabpaisa:false,\r\n    }};\r\n   \r\n   \r\n   \r\n    render() {\r\n        return (\r\n          \r\n            <>\r\n         \r\n             <Container className=\"ff\">\r\n            <div className=\"mt-3 somemar\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <h3 className=\"mb-0\">Dashboard</h3>\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n           <Helmet>\r\n                    <title>Dashboard</title>\r\n                    <meta name=\"description\" content=\"Helmet application\" />\r\n                </Helmet>\r\n\r\n            \r\n             <Row>\r\n             \r\n   {cards(\"/banks_partners\",this.state.active.bank,14,\"Bank Partners\",()=>{\r\n     this.setState({active:{\r\n       bank:true,\r\n       referral:false,\r\n       service:false,\r\n       merchant:false,\r\n       trans:false,\r\n       sabpaisa:false,\r\n     }});\r\n   })}\r\n \r\n    \r\n   \r\n   \r\n{cards(\"/referral_partners\",this.state.active.referral,28,\"Referral Partners\",()=>{\r\n     this.setState({active:{\r\n       bank:false,\r\n       referral:true,\r\n       service:false,\r\n       merchant:false,\r\n       trans:false,\r\n       sabpaisa:false,\r\n     }});\r\n   })}\r\n   \r\n   \r\n{cards(\"/service_providers\",this.state.active.service,14,\"Service Providers\",()=>{\r\n     this.setState({active:{\r\n       bank:false,\r\n       referral:false,\r\n       service:true,\r\n       merchant:false,\r\n       trans:false,\r\n       sabpaisa:false,\r\n     }});\r\n   })}\r\n   \r\n   {cards(\"/sabPaisa\",this.state.active.sabpaisa,\"283k\",\"Sabpaisa Earning\",()=>{\r\n     this.setState({active:{\r\n       bank:false,\r\n       referral:false,\r\n       service:false,\r\n       merchant:false,\r\n       trans:false,\r\n       sabpaisa:true,\r\n     }});\r\n\r\n   },false)}\r\n   \r\n    \r\n  </Row>\r\n  <Row className=\"ww\">\r\n {card2(this.state.active.merchant,()=>{\r\n   this.setState({active:{\r\n    bank:false,\r\n    referral:false,\r\n    service:false,\r\n    merchant:true,\r\n    sabpaisa:false,\r\n    trans:false,\r\n   }\r\n   });\r\n  },\"Merchant Details\",30)}\r\n  {card2(this.state.active.trans,()=>{\r\n  this.setState({\r\n    active:{\r\n      bank:false,\r\n      referral:false,\r\n      service:false,\r\n      merchant:false,\r\n      trans:true,\r\n      sabpaisa:false,\r\n    }\r\n  })\r\n},\"Transaction Summary\",70)}\r\n</Row>\r\n<Row>\r\n<Col>\r\n<Row className=\"ui\">\r\n<Card fluid className=\"ref shadow-lg   rounded hov\">\r\n  <Container className='marop'>\r\n \r\n    <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>S.No</th>\r\n      <th>Sattlement intiated by</th>\r\n      <th>Date of Sattlement</th>\r\n      <th>Amount Settled</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n      <td>Nadeem</td>\r\n      <td>25-12-2020</td>\r\n      <td>Rs 3204</td>\r\n    </tr>\r\n    <tr>\r\n      <td>2</td>\r\n      <td>Diana</td>\r\n      <td>12-12-2020</td>\r\n      <td>Rs 8593</td>\r\n    </tr>\r\n   \r\n  </tbody>\r\n</Table>\r\n   \r\n</Container >\r\n</Card>\r\n</Row>\r\n\r\n</Col>\r\n</Row>\r\n</Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,InputGroup, FormControl,Modal,Form} from 'react-bootstrap';\r\nimport '../index.css'\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign, faPlus, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default class Models extends Component \r\n{\r\n    state ={\r\n    \r\n        Beneficiary_detail:{},\r\n        \r\n    };\r\n    \r\n    render(){\r\n\r\nreturn(<Modal\r\n    size=\"lg\"\r\n    show={this.props.value}\r\n    onHide={()=>{this.props.onhide();\r\n        this.setState({Beneficiary_detail:{}});\r\n   \r\n   \r\n    }}\r\n    aria-labelledby=\"example-modal-sizes-title-lg\"\r\n  >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n        Create Beneficiary\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body><Form>\r\n    <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Beneficiary Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Beneficiary Name\" onChange={(e)=>{\r\n     var pro =this.state.Beneficiary_detail;\r\n     pro.Benificiary_name=e.target.value;\r\n     this.setState({Beneficiary_detail:pro});\r\n    }}/>\r\n   \r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Beneficiary Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Beneficiary number\" onChange={(e)=>{\r\n    var pro =this.state.Beneficiary_detail;\r\n    pro.Benificiary_number=e.target.value;\r\n    this.setState({Beneficiary_detail:pro});\r\n}}/>\r\n\r\n   </Form.Group>\r\n   <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Bank Account Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Bank Account Number\" onChange={(e)=>{\r\n    var pro =this.state.Beneficiary_detail;\r\n    pro.bank_account=e.target.value;\r\n    this.setState({Beneficiary_detail:pro});\r\n}}/>\r\n\r\n   </Form.Group>\r\n   <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>IFSC</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Bank Account Number\" onChange={(e)=>{\r\n    var pro =this.state.Beneficiary_detail;\r\n    pro.ifsc=e.target.value;\r\n    this.setState({Beneficiary_detail:pro});\r\n}}/>\r\n\r\n   </Form.Group>\r\n \r\n  \r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Contact Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Contact Number\" onChange={(e)=>{\r\n    \r\n    var pro =this.state.Beneficiary_detail;\r\n    pro.contact_number=e.target.value;\r\n    this.setState({Beneficiary_detail:pro});\r\n}}/>\r\n\r\n\r\n  </Form.Group>\r\n \r\n  \r\n <Form.Group controlId=\"formBasicPassword\">\r\n   <Form.Label>Type</Form.Label>\r\n   <Form.Control type=\"text\" placeholder=\"Type\" onChange={(e)=>{\r\n   \r\n   var pro =this.state.Beneficiary_detail;\r\n   pro.type=e.target.value;\r\n   this.setState({Beneficiary_detail:pro});\r\n}}/>\r\n </Form.Group>\r\n  \r\n <Form.Group controlId=\"formBasicPassword\">\r\n   <Form.Label>Amount to Settle</Form.Label>\r\n   <Form.Control type=\"text\" placeholder=\"Amount to Settle\" onChange={(e)=>{\r\n   \r\n   var pro =this.state.Beneficiary_detail;\r\n   pro.amount=e.target.value;\r\n   this.setState({Beneficiary_detail:pro});\r\n}}/>\r\n </Form.Group>\r\n  \r\n  \r\n  <Button variant=\"danger\" type=\"button\" onClick={(e)=>{\r\n      this.props.onSubmit(this.state.Beneficiary_detail);\r\n      console.log(this.state.Beneficiary_detail);\r\n      \r\n      this.state.Beneficiary_detail={};\r\n  }}>\r\n    Create\r\n  </Button>\r\n</Form></Modal.Body>\r\n  </Modal>);}\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,InputGroup, FormControl,Modal,Form} from 'react-bootstrap';\r\nimport '../index.css'\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign, faPlus, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default class UploadModels extends Component \r\n{\r\n    state ={\r\n    \r\n        \r\n    };\r\n    \r\n    render(){\r\n\r\nreturn(<Modal\r\n    size=\"lg\"\r\n    show={this.props.value}\r\n    onHide={()=>{this.props.onhide();\r\n        this.setState({Beneficiary_detail:{}});\r\n   \r\n   \r\n    }}\r\n    aria-labelledby=\"example-modal-sizes-title-lg\"\r\n  >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n        {/* Create Beneficiary */}\r\n        Import List\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body><Form>\r\n   <input type=\"file\"></input>\r\n  \r\n  \r\n  <Button variant=\"danger\" type=\"button\" >\r\n    upload\r\n  </Button>\r\n</Form></Modal.Body>\r\n  </Modal>);}\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown, Card, Container, Row, Col, Button, Table, InputGroup, FormControl, Modal, Form } from 'react-bootstrap';\r\nimport '../index.css'\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign, faPlus, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt, faUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport BeniModel from \"./input_beni\";\r\nimport UploadModel from \"./fileupload\";\r\n\r\nexport default class Models extends Component {\r\n    state = {\r\n        zero: true,\r\n        show: false,\r\n        upload: false,\r\n        Beneficiary: this.props.list,\r\n    };\r\n\r\n    render() {\r\n\r\n        return (<Modal\r\n            dialogClassName=\"modal-90w\"\r\n            size=\"lg\"\r\n            show={this.props.value}\r\n            onHide={() => {\r\n                this.props.onhide();\r\n\r\n                this.state.benificary = [];\r\n                this.state.zero = true;\r\n            }}\r\n            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                    {this.props.type} Beneficiary\r\n       <Row>\r\n                        {this.props.type == \"Manage\" ? (<Col> <Button variant=\"outline-primary\" className=\"ew\" onClick={(e) => {\r\n                            this.setState({ show: true });\r\n                        }} style={{ fontWeight: 'bold', \"margin-left\": '10px' }}><FontAwesomeIcon icon={faPlus} /> Add Beneficiary</Button></Col>) : <></>}\r\n                        <Col><Button variant=\"secondary\" className={this.props.type == \"Manage\" ? \"leftmar2\" : \"\"} onClick={(e) => {\r\n                            this.setState({ upload: true });\r\n                        }}><FontAwesomeIcon icon={faUpload} /> Import {this.props.type == \"Manage\" ? \"Beneficiary\" : \"Settlement\"} </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Title>\r\n\r\n\r\n\r\n            </Modal.Header>\r\n\r\n\r\n            <Modal.Body><Form>\r\n                <Table striped bordered hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Beneficiary Id#</th>\r\n                            <th>Beneficiary Name</th>\r\n                            <th>Beneficiary Number</th>\r\n                            <th>Contact Number</th>\r\n                            <th>Bank Account</th>\r\n                            <th>IFSC</th>\r\n                            <th>Beneficiary Type</th>\r\n                            {this.props.type == \"Settlement\" ? <th>Settle Amount</th> : <></>}\r\n                            {this.props.type == \"Manage\" ? <th colSpan=\"2\">Manage</th> : <></>}\r\n\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {this.state.Beneficiary.map((values, index) => {\r\n                            console.log(values);\r\n                            return (\r\n                                <tr>\r\n                                    <td>{index}</td>\r\n                                    <td>{values.Benificiary_name}</td>\r\n                                    <td>{values.Benificiary_number}</td>\r\n                                    <td>{values.contact_number}</td>\r\n                                    <td>{values.bank_account}</td>\r\n                                    <td>{values.ifsc}</td>\r\n                                    <td>{values.type}</td>\r\n                                    {this.props.type === \"Settlement\" ? <td><Form.Group>\r\n\r\n\r\n                                        <Form.Control size=\"sm\" type=\"text\" placeholder=\"Amount\" />\r\n                                    </Form.Group></td> : <></>}\r\n                                    {this.props.type === \"Manage\" ?\r\n                                        (<td>\r\n                                            <Button variant=\"warning\" title=\"Edit \"><FontAwesomeIcon icon={faEdit} /></Button>\r\n                                        </td>) : <></>}\r\n                                    {this.props.type === \"Manage\" ? (<td><Button variant=\"danger\" title=\"Delete\" ><FontAwesomeIcon icon={faTrashAlt} /></Button></td>) : (<></>)}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n\r\n                </Table>\r\n                <UploadModel value={this.state.upload} onhide={() => {\r\n                    this.setState({ upload: false });\r\n                }} />\r\n\r\n\r\n                <BeniModel value={this.state.show} onSubmit={(e) => {\r\n                    var beni = this.state.Beneficiary;\r\n                    beni.push(e);\r\n                    this.setState({ Beneficiary: beni, show: false });\r\n\r\n\r\n                }} onhide={() => {\r\n                    this.setState({ show: false });\r\n\r\n\r\n                }}></BeniModel>\r\n\r\n\r\n            </Form></Modal.Body>\r\n        </Modal>);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,InputGroup, FormControl,} from 'react-bootstrap';\r\nimport '../index.css'\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign, faPlus, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport model from \"./modelfile\";\r\n\r\nconst noProjects = (active,onclick)=>active?(  <div className=\"mb-2 top d-flex justify-content-center\">\r\n<Col className=\"leftmar\">\r\n<Row className='button_left'>\r\n<Button  variant=\"outline-light\" size=\"lg\" onClick={(e)=>{\r\nonclick();\r\n}}>\r\n<FontAwesomeIcon icon={faPlus}/>\r\n</Button>{' '}\r\n</Row>\r\n<Row>\r\n{active?(<h2>\r\nNo Projects Yet\r\n</h2>):(<h2 className=\"leftmar4\">\r\nAdd More\r\n</h2>)}\r\n</Row>\r\n</Col>\r\n\r\n\r\n</div>):<></>;\r\n\r\n\r\nexport default noProjects;","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,InputGroup, FormControl,Modal,Form} from 'react-bootstrap';\r\nimport '../index.css'\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign, faPlus, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default class Models extends Component \r\n{\r\n    state ={\r\n        zero:true,\r\n        project_detail:[],\r\n    };\r\n    \r\n    render(){\r\n\r\nreturn(<Modal\r\n    size=\"lg\"\r\n    show={this.props.value}\r\n    onHide={()=>{this.props.onhide();\r\n    this.state.benificary=[];\r\n    this.state.zero=true;\r\n    }}\r\n    aria-labelledby=\"example-modal-sizes-title-lg\"\r\n  >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n        Create Project\r\n      </Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body><Form>\r\n    <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Project Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Project Name\" onChange={(e)=>{\r\n     var pro =this.state.project_detail;\r\n     pro.project_name=e.target.value;\r\n     this.setState({project_detail:pro});\r\n    }}/>\r\n   \r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Project Location</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Project Location\" onChange={(e)=>{\r\n    var pro =this.state.project_detail;\r\n    pro.project_location=e.target.value;\r\n    this.setState({project_detail:pro});\r\n}}/>\r\n  </Form.Group>\r\n \r\n  \r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Poc Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Poc Name\" onChange={(e)=>{\r\n    \r\n    var pro =this.state.project_detail;\r\n    pro.poc_name=e.target.value;\r\n    this.setState({project_detail:pro});\r\n}}/>\r\n  </Form.Group>\r\n \r\n  \r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Poc Contact Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Poc Contact Number\" onChange={(e)=>{\r\n    \r\n    var pro =this.state.project_detail;\r\n    pro.poc_contact_number=e.target.value;\r\n    this.setState({project_detail:pro});\r\n}}/>\r\n  </Form.Group>\r\n\r\n  \r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Amount of Project</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Amount of Project\" onChange={(e)=>{\r\n    \r\n    var pro =this.state.project_detail;\r\n    pro.amount_of_project=e.target.value;\r\n    this.setState({project_detail:pro});\r\n}}/>\r\n  </Form.Group>\r\n  \r\n  <Button variant=\"danger\" type=\"button\" onClick={(e)=>{\r\n      this.props.onSubmit(this.state.project_detail);\r\n      console.log(this.state.project_detail);\r\n      this.state.project_detail=[];\r\n  }}>\r\n    Create\r\n  </Button>\r\n</Form></Modal.Body>\r\n  </Modal>);}\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown,Card,Container,Row,Col,Button,Table,InputGroup, FormControl,Modal,Form,Accordion} from 'react-bootstrap';\r\nimport '../index.css'\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign, faPlus, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport BeniModel from \"./modelfile\";\r\n//project name, project loaction,poc name,poc contact number, amount of projects,benficary management, benificary settlement,edit delete\r\n\r\nclass Project extends Component\r\n{\r\n    state={\r\n        beneficiary:false,\r\n        beni_settlement:false,\r\n        projects:this.props.project,\r\n        beneficiary_List:[],\r\n    };\r\n    render()\r\n    {\r\n        return ( \r\n            <>\r\n        <Card>\r\n            <Card.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Project Id#</th>\r\n                            <th>Project Name</th>\r\n                            <th>Project Location</th>\r\n                            <th>Poc Name</th>\r\n                            <th>Poc Contact Number</th>\r\n                            <th>Amount of Project</th>\r\n                            <th>Beneficiary Management</th>\r\n                            <th>Beneficiary Settlement</th>\r\n                            <th>Manage</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.projects.map((values, index) => {\r\n                            console.log(values);\r\n                            return (\r\n                                <tr>\r\n                                    <td>{index}</td>\r\n\r\n                                    <td>{values.project_name}</td>\r\n                                    <td>{values.project_location}</td>\r\n                                    <td>{values.poc_name}</td>\r\n                                    <td>{values.poc_contact_number}</td>\r\n                                    <td>{values.amount_of_project}</td>\r\n                                    <td>\r\n                                        <Button variant=\"primary\" className=\"btn-block\" onClick={(e)=>{\r\n                                            this.setState({beneficiary:true});\r\n\r\n                                        }} style={{ fontWeight: 'bold' }}> Manage</Button>{' '}\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button variant=\"info\" onClick={(e)=>{\r\n                                             this.setState({beni_settlement:true});\r\n                                        }} className=\"btn-block\" style={{ fontWeight: 'bold' }}> <FontAwesomeIcon icon={faUniversity} /></Button>{' '}\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button variant=\"warning\" title=\"Edit \"><FontAwesomeIcon  icon={faEdit}/></Button>{' '}\r\n                                        <Button variant=\"danger\" title=\"Delete\" ><FontAwesomeIcon icon={faTrashAlt} /></Button>{' '}\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n\r\n               \r\n            </Card.Body>\r\n            \r\n        </Card>\r\n        <BeniModel type=\"Manage\" value={this.state.beneficiary} list = {this.state.beneficiary_List} onhide={(e)=>{\r\n            this.setState({beneficiary_List:e});\r\n            this.setState({beneficiary:false});\r\n\r\n        }}></BeniModel>\r\n        <BeniModel type=\"Settlement\" list={this.state.beneficiary_List} value={this.state.beni_settlement} onhide={(e)=>{\r\n   this.setState({beni_settlement:false});\r\n        }} />\r\n       </>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default Project;","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown, Card, Container, Row, Col, Button, Table, InputGroup, FormControl, } from 'react-bootstrap';\r\nimport './index.css'\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRupeeSign, faPlus, faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport noProject from \"./components/noProjects.js\";\r\nimport Model from \"./components/project_input_model.js\";\r\nimport Project from \"./components/projectcompo\";\r\nclass Index extends Component {\r\n    state = {\r\n        models: false,\r\n        project: [],\r\n        zero: true,\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"mt-3 somemar\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <h3 className=\"leftmar5\">Single Bank Account Fund Management System</h3>\r\n                            </Row>\r\n                            <Row>\r\n                                <Button variant=\"outline-primary\" className=\"marman2\" onClick={(e) => {\r\n                                    console.log('cs');\r\n                                    this.setState({ models: true });\r\n                                    console.log(this.state.models);\r\n                                }} style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus} />Add a New Project</Button>\r\n                            </Row>\r\n\r\n\r\n\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <Helmet>\r\n                    <title>SBAFMS</title>\r\n                    <meta name=\"description\" content=\"Helmet application\" />\r\n                </Helmet>\r\n                <Project project={this.state.project} />\r\n                {noProject(this.state.zero, () => {\r\n                    console.log('cs');\r\n                    this.setState({ models: true });\r\n                    console.log(this.state.models);\r\n                })}\r\n                <Model project={this.state.project} value={this.state.models} onSubmit={(vals) => {\r\n                    var pro = this.state.project;\r\n                    console.log(vals);\r\n                    pro.push(vals);\r\n                    this.setState({ project: pro, models: false, zero: false });\r\n                }} onhide={() => {\r\n                    this.setState({ models: false });\r\n                }} />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","export default __webpack_public_path__ + \"static/media/default.90dc751e.jpg\";","import React, { Component } from 'react';\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination,Row,Col, Modal, Spinner, Form, Container } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faRupeeSign, faPlus,faSignOutAlt, faUniversity, faPlusCircle, faEdit, faTrashAlt,faEye } from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport get from '../services/client_fetch';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader';\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\nimport displayPic from \"../images/default.jpg\";\r\nimport './index.css';\r\n\r\nclass Index extends Component\r\n{\r\n    state={\r\n        name:\"\",\r\n        userid:\"\",\r\n        createModel:false,\r\n        editModel:false,\r\n        selectAll:false,\r\n        viewModel:false,\r\n        tempUser:{},\r\n        UserRoles : {},\r\n        RolemanagementModel:false,\r\n        users:[]\r\n    };\r\n   \r\n    \r\n    tempUser={};\r\n    Manage=(name,heading,userid,dp,type,activate=false)=>{\r\n        return (\r\n        <Modal\r\n     \r\n        show={activate}\r\n        onHide={()=>{\r\n            if(type==\"create\")\r\n            this.setState({createModel:false});\r\n            else if(type==\"view\")\r\n            this.setState({viewModel:false});\r\n            else\r\n            this.setState({editModel:false});\r\n        }}\r\n        \r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n             {heading}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n       \r\n        <Modal.Body>\r\n\r\n            <Container>\r\n\r\n        <Col ><Row className=\"pic\" >\r\n              <ReactRoundedImage image = {dp} roundedRowor=\"#0069d9\" imageWidth=\"120\" imageHeight=\"120\" roundedSize=\"5\" ></ReactRoundedImage></Row>\r\n             \r\n              </Col>\r\n        <div className=\"ids\">{type!=\"create\"?\"User Id-\"+userid:\"\"}</div>\r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Name\r\n           </Col>\r\n           <Col>\r\n          {type==\"view\"?<Form.Control type=\"text\" placeholder={this.tempUser.name} readOnly />:<Form.Control type=\"text\" placeholder={type==\"edit\"?this.tempUser.name:\"Enter Name\"} onChange={(e)=>{\r\n              this.tempUser.name=e.target.value;\r\n          }}/>} \r\n           </Col>\r\n       </Row>\r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Role\r\n           </Col>\r\n           <Col>\r\n           {type==\"view\"?<Form.Control type=\"text\" placeholder={this.tempUser.role} readOnly /> :<Form.Control as=\"select\"  defaultValue={type==\"edit\"?this.tempUser.role:null} onChange={(e)=>{\r\n              this.tempUser.role=e.target.value;\r\n          }}>\r\n           <option value=\"Select Role\" selected disabled hidden>Select Role</option>\r\n    <option value=\"Admin\">Admin</option>\r\n    <option value=\"Maker\">Maker</option>\r\n     <option value=\"Checker\">Checker</option>\r\n  </Form.Control>}\r\n           </Col>\r\n       </Row>\r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Designation\r\n           </Col>\r\n           <Col>\r\n           {type==\"view\"?<Form.Control type=\"text\" placeholder={this.tempUser.designation} readOnly/>:<Form.Control type=\"text\"  placeholder={type==\"edit\"?this.tempUser.designation:\"Enter Designation\"} onChange={(e)=>{\r\n              this.tempUser.designation=e.target.value;\r\n          }} />}\r\n           </Col>\r\n       </Row>\r\n      \r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Phone\r\n           </Col>\r\n           <Col>\r\n           {type==\"view\"?<Form.Control type=\"text\" placeholder={this.tempUser.phone} readOnly/>:<Form.Control type=\"text\"  placeholder={type==\"edit\"?this.tempUser.phone:\"Enter Phone Number\"} onChange={(e)=>{\r\n              this.tempUser.phone=e.target.value;\r\n          }} />}\r\n           </Col>\r\n       </Row>\r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Email\r\n           </Col>\r\n           <Col>\r\n           {type==\"view\"||type==\"edit\"?<Form.Control type=\"text\" placeholder={this.tempUser.email} readOnly/>:<Form.Control type=\"text\"  placeholder={type==\"edit\"?this.tempUser.email:\"Enter Email\"} onChange={(e)=>{\r\n              this.tempUser.email=e.target.value;\r\n          }}/>}\r\n           </Col>\r\n       </Row>\r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Password\r\n           </Col>\r\n           <Col>\r\n           {type==\"view\"?<Form.Control type=\"text\" placeholder={this.tempUser.password} readOnly/>:<Form.Control type=\"text\"  placeholder={type==\"edit\"?this.tempUser.password:\"Enter Password\"} onChange={(e)=>{\r\n              this.tempUser.password=e.target.value;\r\n          }}/>}\r\n           </Col>\r\n       </Row>\r\n   \r\n       </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={(e)=>{\r\n              if(type==\"create\")\r\n              {\r\n                 let user =  this.state.users;\r\n                 user.push({\r\n                     name:this.tempUser.name,\r\n                     role:this.tempUser.role,\r\n                     email:this.tempUser.email,\r\n                     designation:this.tempUser.designation,\r\n                     password:this.tempUser.password,\r\n                     phone:this.tempUser.phone,\r\n                     access:{\r\n                         bank:true,\r\n                         referral:true,\r\n                         service:true,\r\n                         sabpaisa:true,\r\n                         settlement:true,\r\n                         invoicing:true,\r\n                         user:true,\r\n                         transactions:true,\r\n                         merchant:true,\r\n\r\n                         \r\n                     }\r\n                 });\r\n                 this.tempUser={};\r\n                 this.setState({users:user,createModel:false});\r\n\r\n                 \r\n              }\r\n              else if(type==\"edit\")\r\n              {\r\n                  let user = this.state.users;\r\n                  let access = user[this.tempUser.index].access;\r\n                  this.tempUser.access=access;\r\n                  user[this.tempUser.index]=this.tempUser;\r\n                  this.tempUser={};\r\n                  this.setState({users:user,editModel:false});\r\n              }\r\n              else\r\n              {\r\n                  this.tempUser={};\r\n                  this.setState({viewModel:false});\r\n              }\r\n          }}>{type==\"create\"?\"Create\":\"Confirm\"}</Button>\r\n        </Modal.Footer>\r\n      </Modal>);\r\n    };\r\n    RoleManagement=(dp,activate)=>{\r\n        return (\r\n            <Modal\r\n        show={activate}\r\n        onHide={()=>{\r\n           this.setState({RolemanagementModel:false});\r\n        }}\r\n        \r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n             Role Management\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Container className=\"wi\">\r\n        \r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Name\r\n           </Col>\r\n           <Col>\r\n          <Form.Control type=\"text\" placeholder={this.tempUser.name} readOnly /> \r\n           </Col>\r\n       </Row>\r\n       <Row className=\"my-3\">\r\n           <Col>\r\n           Role\r\n           </Col>\r\n           <Col>\r\n          <Form.Control as=\"select\"  defaultValue={this.tempUser.role} onChange={(e)=>{\r\n              this.tempUser.role=e.target.value;\r\n          }}>\r\n           <option value=\"Select Role\" selected disabled hidden>Select Role</option>\r\n    <option value=\"Admin\">Admin</option>\r\n    <option value=\"Maker\">Maker</option>\r\n     <option value=\"Checker\">Checker</option>\r\n  </Form.Control>\r\n           </Col>\r\n       </Row>\r\n     \r\n     <Row>\r\n         <Col>\r\n         Access\r\n         </Col>\r\n         <Col>  \r\n         <Row>\r\n         <Form.Check \r\n        type='checkbox'\r\n        \r\n        label={`Select All`}\r\n        onChange={(e)=>{\r\n            \r\n           \r\n\r\n            this.setState({selectAll:this.state.selectAll?false:true});\r\n\r\n        }}\r\n      /></Row>\r\n       <Row>\r\n         {this.state.selectAll||this.state.UserRoles.bank?<Form.Check \r\n        type='checkbox'\r\n        \r\n        label={`Bank Partners`}\r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.bank=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n\r\n        }}\r\n        checked\r\n      />:<Form.Check \r\n      type='checkbox'\r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n        map.bank=true;\r\n        this.setState({UserRoles:map});\r\n        \r\n       \r\n\r\n    }}\r\n      \r\n      label={`Bank Partners`}\r\n    />}</Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.referral?<Form.Check \r\n        type='checkbox'\r\n        \r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.referral=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n            \r\n\r\n        }}\r\n        label={`Referral Partners`}\r\n        checked\r\n      />:<Form.Check \r\n      type='checkbox'\r\n      \r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n            map.referral=true;\r\n            this.setState({UserRoles:map});\r\n            \r\n        \r\n\r\n    }}\r\n      label={`Referral Partners`}\r\n    />}</Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.service?<Form.Check \r\n        type='checkbox'\r\n        \r\n        label={`Service Providers`}\r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.service=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n\r\n        }}\r\n        checked\r\n      />:<Form.Check \r\n      type='checkbox'\r\n      \r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n            map.service=true;\r\n            this.setState({UserRoles:map});\r\n            \r\n        \r\n\r\n    }}\r\n      label={`Service Providers`}\r\n    />}</Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.sabpaisa?<Form.Check \r\n        type='checkbox'\r\n        \r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.sabpaisa=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n            \r\n\r\n        }}\r\n        label={`Sabpaisa Earning`}\r\n        checked\r\n      />:<Form.Check \r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n        map.sabpaisa=true;\r\n        this.setState({UserRoles:map});\r\n        \r\n        \r\n\r\n    }}\r\n      type='checkbox'\r\n      \r\n      label={`Sabpaisa Earning`}\r\n    />}</Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.settlement?<Form.Check \r\n        type='checkbox'\r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.settlement=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n            \r\n\r\n        }}\r\n        \r\n        label={`Settlement`}\r\n        checked\r\n      />:<Form.Check \r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n        map.settlement=true;\r\n        this.setState({UserRoles:map});\r\n        \r\n        \r\n\r\n    }}\r\n      type='checkbox'\r\n      \r\n      label={`Settlement`}\r\n    />}</Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.invoicing?<Form.Check \r\n        type='checkbox'\r\n        \r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.invoicing=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n            \r\n\r\n        }}\r\n        label={`Invoicing`}\r\n        checked\r\n      />:<Form.Check \r\n      onChange={(e)=>{\r\n          let map = this.state.UserRoles;\r\n        map.invoicing=true;\r\n        this.setState({UserRoles:map});\r\n        \r\n        \r\n\r\n    }}\r\n      type='checkbox'\r\n      \r\n      label={`Invoicing`}\r\n    />}</Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.user?<Form.Check \r\n        type='checkbox'\r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.user=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n            \r\n\r\n        }}\r\n        \r\n        label={`User Management`}\r\n        checked\r\n      />:<Form.Check \r\n      type='checkbox'\r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n        map.user=true;\r\n        this.setState({UserRoles:map});\r\n        \r\n        \r\n\r\n    }}\r\n      \r\n      label={`User Management`}\r\n    />}</Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.transactions?<Form.Check \r\n        type='checkbox'\r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.transactions=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n            \r\n\r\n        }}\r\n        \r\n        label={`Transactions`}\r\n        checked\r\n      />:<Form.Check \r\n      type='checkbox'\r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n        map.transactions=true;\r\n        this.setState({UserRoles:map});\r\n        \r\n        \r\n\r\n    }}\r\n      \r\n      label={`Transactions`}\r\n    />}\r\n    </Row>\r\n       <Row>\r\n       {this.state.selectAll||this.state.UserRoles.merchant?<Form.Check \r\n        type='checkbox'\r\n        onChange={(e)=>{\r\n            let map = this.state.UserRoles;\r\n            map.merchant=false;\r\n            this.setState({UserRoles:map});\r\n            \r\n            \r\n\r\n        }}\r\n        \r\n        label={`Merchant Overview`}\r\n        checked\r\n      />:<Form.Check \r\n      onChange={(e)=>{\r\n        let map = this.state.UserRoles;\r\n        map.merchant=true;\r\n        this.setState({UserRoles:map});\r\n        \r\n        \r\n\r\n    }}\r\n      type='checkbox'\r\n      \r\n      label={`Merchant Overview`}\r\n    />}</Row></Col>\r\n   \r\n     </Row>\r\n   \r\n  </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={(e)=>{\r\n              var temp = this.state.users;\r\n              \r\n              temp[this.tempUser.index].role=this.tempUser.role;\r\n            this.tempUser={};\r\n              \r\n               this.setState({RolemanagementModel:false,users:temp});\r\n              \r\n            \r\n          }}>Confirm</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        );\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n            <Helmet>\r\n            <title>User Management</title>\r\n            <meta name=\"description\" content=\"Helmet application\" />\r\n        </Helmet>\r\n        <div className=\"container-fluid\">\r\n        <div className=\"mt-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <h3 className=\"mb-0\">User Management</h3><Button variant=\"primary\" onClick = {(e)=>{\r\n                                            this.setState({createModel:true});\r\n                                        }} className=\"btn-sm mb-3 mt-4\" style={{ fontWeight: 'bold' }}><FontAwesomeIcon icon={faPlus}  /> CREATE</Button>{' '}\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <InputGroup className=\"mb-0\">\r\n                                            <FormControl\r\n                                                placeholder=\"search here...\"\r\n                                                aria-label=\"search here...\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                            />\r\n                                            <InputGroup.Append>\r\n                                                <Button variant=\"outline-secondary\">Search</Button>\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n        </div>\r\n        {this.RoleManagement(displayPic,this.state.RolemanagementModel)}\r\n        {this.Manage(this.state.name,\"Create\",this.tempUser.index,displayPic,\"create\",this.state.createModel)}\r\n        {this.Manage(this.state.name,\"Edit\",this.tempUser.index,displayPic,\"edit\",this.state.editModel)}\r\n        {this.Manage(this.state.name,\"View\",this.tempUser.index,displayPic,\"view\",this.state.viewModel)}\r\n        <div className=\"container-fluid\">\r\n        <Card>\r\n                            <Card.Body>\r\n        <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>User Id</th>\r\n      <th>Contact Name</th>\r\n      <th>Contact Number</th>\r\n      <th>Role Management</th>\r\n      <th>Role </th>\r\n      <th>Designation</th>\r\n      <th>Manage</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {this.state.users.map((value,index)=>(\r\n                <tr>\r\n                <td>{index}</td>\r\n                <td>{value.name}</td>\r\n                <td>{value.phone}</td>\r\n                <td><Button  className=\"btn-block\" variant=\"primary\" onClick={(e)=>{\r\n                    this.tempUser.name=value.name;\r\n                    this.tempUser.role=value.role;\r\n                    this.tempUser.index=index;\r\n                this.state.UserRoles=value.access;\r\n                this.setState({RolemanagementModel:true});\r\n                }}>Role Management</Button></td>\r\n                <td>{value.role}</td>\r\n                <td>{value.designation}</td>\r\n                <td><Button className=\"btn-block\" className=\"mx-1\" variant=\"warning\"onClick={(e)=>{\r\n                    let temp = this.tempUser;\r\n                    temp.name=value.name;\r\n                    temp.phone=value.phone;\r\n                    temp.role=value.role;\r\n                    temp.designation=value.designation;\r\n                    temp.email=value.email;\r\n                    temp.password=value.password;\r\n                    temp.index=index;\r\n                    this.tempUser=temp;\r\n\r\n\r\n                                                            this.setState({editModel:true});\r\n                                                        }}><FontAwesomeIcon icon={faEdit}  /></Button>\r\n                <Button variant=\"danger\" className=\"btn-block\" className=\"mx-1\" onClick={(e)=>{\r\n                                                         let list = this.state.users;\r\n                                                         list = list.filter((val,ind)=>ind!=index);\r\n                                                         this.setState({users:list});\r\n                                                        }}><FontAwesomeIcon icon={faTrashAlt} /></Button>\r\n                <Button variant=\"warning\" className=\"btn-block\" className=\"mx-1\" onClick={(e)=>{\r\n                       let temp = this.tempUser;\r\n                       temp.name=value.name;\r\n                       temp.phone=value.phone;\r\n                       temp.role=value.role;\r\n                       temp.designation=value.designation;\r\n                       temp.email=value.email;\r\n                       temp.password=value.password;\r\n                       temp.index=index;\r\n                       this.tempUser=temp;\r\n   \r\n   \r\n                                                               this.setState({viewModel:true});\r\n                }}><FontAwesomeIcon icon={faEye} /></Button></td>\r\n\r\n              </tr>\r\n            ))\r\n        }\r\n  </tbody>\r\n</Table>\r\n</Card.Body>\r\n</Card>\r\n</div >\r\n        \r\n        \r\n        \r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal,Form,Tab,Tabs,OverlayTrigger,Tooltip } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlusCircle,} from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport \"./index.css\";\r\nimport readXlsxFile from 'read-excel-file';\r\n\r\n\r\nexport default class index extends Component\r\n{\r\n    state ={\r\n        data:[],\r\n        temp:[],\r\n        check:false,\r\n        uploadFile:false,\r\n        tobeUploaded:[],\r\n        init:false,\r\n       val : \"Verifying\"\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.getRef(this);\r\n    }\r\n    UploadModel()\r\n    {\r\n        return ( <Modal\r\n            show={this.state.uploadFile}\r\n            onHide={(e)=>{\r\n                this.setState({uploadFile:false});\r\n            }}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Upload File</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             <input type=\"file\" id=\"xelfile\" onChange={async (e)=>{\r\n                 this.props.setFile(e.target.files[0].name);\r\n                const ref =await readXlsxFile(e.target.files[0]);\r\n                this.setState({temp:ref});\r\n             \r\n             }}></input>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={(e)=>{\r\n                  this.setState({uploadFile:false,data:this.state.temp,temp:[]});\r\n              }}>\r\n                Upload\r\n              </Button>\r\n             \r\n            </Modal.Footer>\r\n          </Modal>);\r\n    }\r\n    render(){\r\n        return (\r\n            <>\r\n            {this.UploadModel()}\r\n            <Card>\r\n                <Card.Header ><OverlayTrigger className=\"dsd\"\r\n      key=\"bottom\"\r\n      placement=\"bottom\"\r\n      overlay={\r\n        <Tooltip id={`tooltip-$ Bottom`}>\r\n          Upload  <strong>XLXS only</strong>.\r\n        </Tooltip>\r\n      }\r\n    >\r\n    <Button variant=\"primary\" onClick={(e)=>{\r\n        this.setState({uploadFile:true});\r\n    }}>Upload File</Button>\r\n    </OverlayTrigger>\r\n    <Button className=\"mx-4\"  variant = \"info\" onClick={(e)=>{\r\n        this.props.toReportOn();\r\n    }} >\r\n        Save To Reports\r\n    </Button>\r\n    </Card.Header>\r\n                <Card.Body>\r\n                <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Benficary Id</th>\r\n                                        <th>Beneficiary Name</th>\r\n                                        <th>Bank Account Number</th>\r\n                                        <th>IFSC Code</th>\r\n                                        <th>Select All <input type=\"checkbox\" onChange={(e)=>{\r\n                                           if(e.target.checked)\r\n                                           {\r\n                                            this.props.removeall();\r\n                                            this.setState({tobeUploaded:[]});\r\n                                            this.state.data.forEach((value,index)=>{\r\n                                            let temp = this.state.tobeUploaded;\r\n                                            \r\n                                          temp.push(index);\r\n                                          this.setState({tobeUploaded:temp});\r\n                                            this.props.add(value,temp);\r\n\r\n                                        });\r\n                                    }\r\n                                    else{\r\n                                        this.setState({tobeUploaded:[]});\r\n                                        this.props.removeall();\r\n                                    }\r\n                                            \r\n                                            this.setState({check:e.target.checked});\r\n\r\n                                        }}></input></th>\r\n                                        \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                   {this.state.data.map((value,index)=>{\r\n                                      \r\n                                       if(index>0)\r\n                                       return (\r\n                                           <tr>\r\n                                               <td>\r\n                                                   {index}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value[0]}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value[1]}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value[2]}\r\n                                               </td>\r\n                                              <td>\r\n                                                  {this.state.init&&this.state.tobeUploaded.includes(index)?this.state.val===\"Verified\"?<div style={{color:\"green\"}}>{this.state.val}</div>:<div style={{color:\"brown\"}}>{this.state.val}</div>:this.state.check? <input type=\"checkbox\" checked={this.state.check} onChange={(e)=>{\r\n                                               if(e.target.checked)\r\n                                               {\r\n                                                var tobe = this.state.tobeUploaded;\r\n\r\n                                                tobe.push(index);\r\n                                                \r\n                                                this.setState({tobeUploaded:tobe});\r\n                                                \r\n                                               this.props.add(value,tobe);\r\n                                            console.log('done');\r\n                                               }\r\n                                               else if((!e.target.checked))\r\n                                               {\r\n                                                   var temp= this.state.tobeUploaded;\r\n                                                   temp = temp.filter((value)=>value!=index);\r\n                                                   this.setState({tobeUploaded:temp});\r\n                                                   this.props.remove(value,temp);\r\n                                               }\r\n                                               console.log(this.state.tobeUploaded);\r\n                                             }}></input>: <input type=\"checkbox\"  onChange={(e)=>{\r\n                                                if(e.target.checked)\r\n                                                {\r\n                                                 var tobe = this.state.tobeUploaded;\r\n \r\n                                                 tobe.push(index);\r\n                                                 \r\n                                                 this.setState({tobeUploaded:tobe});\r\n                                                 \r\n                                                this.props.add(value,tobe);\r\n                                             console.log('done');\r\n                                                }\r\n                                                else if((!e.target.checked))\r\n                                                {\r\n                                                    var temp= this.state.tobeUploaded;\r\n                                                    temp = temp.filter((value)=>value!=index);\r\n                                                    this.setState({tobeUploaded:temp});\r\n                                                    this.props.remove(value,temp);\r\n                                                }\r\n                                                console.log(this.state.tobeUploaded);\r\n                                              }}></input>}\r\n                                            \r\n                                              </td>\r\n                                           </tr>\r\n                                       );\r\n                                       else\r\n                                       return (<></>);\r\n                                   })}\r\n                                   {(()=>{\r\n                                       this.addition=false;\r\n                                   })()}\r\n                                  \r\n                                </tbody>\r\n                            </Table>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            </>\r\n        );\r\n    }\r\n}","import firebase from \"firebase\";\r\n\r\nconst addData = async (collection,data)=>{\r\n    var firestore = firebase.firestore();\r\n    var col =firestore.collection(collection);\r\n    return await col.add(data);\r\n\r\n}\r\nconst realTime = async(collection,func)=>{\r\n    var firestore = firebase.firestore();\r\n    var col = firestore.collection(collection).onSnapshot((ref)=>{\r\n        func(ref);\r\n        // ref.docChanges().forEach((value,index)=>{\r\n        //     value.doc.ref.path\r\n        // })\r\n       \r\n    })\r\n}\r\nconst retriveData = async (collection,querry=null)=>{\r\n    var firestore = firebase.firestore();\r\n    var col = firestore.collection(collection);\r\n    if(querry!=null)\r\n    {\r\n        let dataref = await col.where(querry[0],querry[1],querry[2]).get();\r\n        return dataref.docs;\r\n\r\n    }\r\n    else{\r\n        let dataref = await col.get();\r\n        return dataref.docs;\r\n    }\r\n}\r\n\r\nconst deleteData = async(docid)=>{\r\n    var firestore = firebase.firestore();\r\n    await firestore.doc(docid).delete();\r\n}\r\n\r\nconst updateData  = async (docid,data)=>{\r\n    var firestore = firebase.firestore();\r\n    var doc = firestore.doc(docid);\r\n    doc.update(data);\r\n\r\n}\r\n\r\nexport default {\r\n    addData:addData,\r\n    retriveData:retriveData,\r\n    updateData:updateData,\r\n    deleteData:deleteData,\r\n    realTime:realTime,\r\n}","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal,Form,Tab,Tabs,OverlayTrigger,Tooltip } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlusCircle,faDownload,faEye,faCheckCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport \"./index.css\";\r\nimport readXlsxFile from 'read-excel-file';\r\nimport {CSVDownload,CSVLink} from \"react-csv\";\r\nimport firebase_service from \"../../../services/tempservice/firebase_services\";\r\n\r\nexport default class index extends Component\r\n{\r\n state = {\r\n     reports:[{datalist:[]}],\r\n     view:{index:0,show:false}\r\n };\r\n ViewReport()\r\n {\r\n     return(<Modal\r\n        show={this.state.view.show}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        onHide={()=>{\r\n            this.setState({view:{index:0,show:false}});\r\n        }}\r\n       \r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n           View Report\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Name</th>\r\n      <th>Bank_Number</th>\r\n      <th>IFSC</th>\r\n      {this.state.reports[this.state.view.index].type==\"Mass Disbursement\"?<th>Amount</th>:<th >Verification Status</th>} \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.reports[this.state.view.index].datalist.map((value,index1)=>(\r\n           <tr>\r\n           <td>{index1+1}</td>\r\n           <td>{value.Name}</td>\r\n           <td>{value.Bank}</td>\r\n           <td>{value.IFSC}</td>\r\n\r\n          {this.state.reports[this.state.view.index].type==\"Mass Disbursement\"?<td>{value.Amount} </td>:<td style={{color:\"green\"}}>{value.VerificationStatus} <FontAwesomeIcon icon ={faCheckCircle} /></td>} \r\n         </tr>\r\n      ))}\r\n  </tbody>\r\n</Table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={()=>{}}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>);\r\n }\r\n async Fetch()\r\n {\r\n    var dataref= await firebase_service.retriveData(\"reports\");\r\n    var temp=[];\r\n    dataref.forEach(async (value,index)=>{\r\n        let data = value.data();\r\n      \r\n        var internalRef = await firebase_service.retriveData(value.ref.path+\"/data\");\r\n        var interreflist = [];\r\n        internalRef.forEach((valuei,indexi)=>{\r\n            let data = valuei.data();\r\n            interreflist.push(data);\r\n        });\r\n        temp.push({...data,datalist:interreflist});\r\n        this.setState({reports:temp});\r\n    });\r\n }\r\n  componentDidMount()\r\n {\r\n     this.props.addRef(this);\r\n    this.Fetch();\r\n    // firebase_service.realTime('reports',(ref)=>{\r\n    //     var temp=this.state.reports[0].datalist.length==0?[]:this.state.reports;\r\n    //     ref.docChanges().forEach(async (value,index)=>{\r\n            \r\n    //             let data = value.doc.data();\r\n              \r\n    //             var internalRef = await firebase_service.retriveData(value.doc.ref.path+\"/data\");\r\n    //             var interreflist = [];\r\n    //             internalRef.forEach((valuei,indexi)=>{\r\n    //                 let data = valuei.data();\r\n    //                 interreflist.push(data);\r\n    //             });\r\n    //             temp.push({...data,datalist:interreflist});\r\n    //             this.setState({reports:temp});\r\n           \r\n    //     });\r\n    // });\r\n }\r\n render()\r\n {\r\n\r\n     return (\r\n         <>\r\n              {this.ViewReport()}\r\n         <Card>\r\n             <Card.Body>\r\n             <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Type</th>\r\n      <th>Name</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {this.state.reports.map((value,index)=>(\r\n        <tr>\r\n            <td>{index+1}</td>\r\n            <td>{value.type}</td>\r\n            <td>{value.fileName}</td>\r\n            <td><CSVLink style={{color:'white',textDecoration:'none'}} data={value.datalist}><Button className=\"mx-2\" variant=\"dark\">Download <FontAwesomeIcon icon={faDownload}></FontAwesomeIcon></Button></CSVLink> \r\n            <Button variant=\"info\" onClick={(e)=>{\r\n                this.setState({view:{index:index,show:true}});\r\n            }}>View <FontAwesomeIcon icon={faEye}></FontAwesomeIcon></Button></td>\r\n        </tr>\r\n    ))}\r\n  </tbody>\r\n</Table>\r\n             </Card.Body>\r\n         </Card>\r\n         </>\r\n     );\r\n }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal,Form,Tab,Tabs,OverlayTrigger,Tooltip } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlusCircle,faArrowRight,faCheckCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport \"./index.css\";\r\nimport readXlsxFile from 'read-excel-file';\r\nimport firebase_service from \"../../../services/tempservice/firebase_services\";\r\n\r\n\r\nexport default class index extends Component{\r\n    state ={Mass:[],\r\n    uploadFile:false,\r\n    total_Amount:0,\r\n    temp:[],\r\n    fileName:\"\",\r\n    upload:false,\r\n    finalPopUp:false,\r\n    toRepots:false,\r\n   \r\n    };\r\n    PopUp()\r\n    {\r\n        return (<Modal show={this.state.finalPopUp} onHide={(e)=>{\r\n            this.setState({finalPopUp:false});\r\n        }}>\r\n            <Modal.Header closeButton>\r\n            <div style = {{color:\"green\",fontSize:\"240%\"}}><FontAwesomeIcon icon = {faCheckCircle} /> </div>\r\n            </Modal.Header>\r\n            <Modal.Body>Disbursement has Gone for Approval</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"info\" onClick={(e)=>{\r\n                  this.setState({finalPopUp:false});\r\n              }}>\r\n                Close\r\n              </Button>\r\n              \r\n            </Modal.Footer>\r\n          </Modal>);\r\n\r\n    }\r\n    SaveToRepots()\r\n    {\r\n        return (<Modal show={this.state.toRepots} onHide={()=>{\r\n            this.setState({toRepots:false});\r\n        }}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Report Genrated</Modal.Title>\r\n            </Modal.Header>\r\n      \r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={()=>{\r\n                  this.setState({toRepots:false,finalPopUp:true});\r\n              }}>\r\n               OK\r\n              </Button>\r\n              {/* <Button variant=\"success\" onClick={async ()=>{\r\n                   var doc = await  firebase_service.addData('reports',{type:\"Mass Disbursement\",fileName:this.state.fileName});\r\n                  this.state.Mass.forEach(async (value,index)=>{\r\n                    \r\n                      await firebase_service.addData(`${doc.path}/data`,{Name:value[0],Bank:value[1],IFSC:value[2],VerificationStatus:\"Verified\"});\r\n                      this.setState({toRepots:false,finalPopUp:true});\r\n\r\n                  });\r\n               \r\n                \r\n              }}>\r\n                Yes\r\n              </Button> */}\r\n            </Modal.Footer>\r\n          </Modal>);\r\n    }\r\n    upload(){\r\n        return ( <Modal show={this.state.upload} onHide={(e)=>{\r\n            this.setState({upload:false});\r\n        }}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Want to Send for the final Authorization</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><Card>\r\n  <Card.Body>Number of Entries = {this.state.Mass.length}</Card.Body>\r\n  <Card.Body>Total Amount to be Disbursed = {this.state.total_Amount}</Card.Body>\r\n</Card></Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={(e)=>{\r\n                this.setState({upload:false});\r\n            }}>No</Button>\r\n            <Button variant=\"success\" onClick={async (e)=>{\r\n                this.setState({upload:false});\r\n            this.state.Mass.forEach((value,index)=>{\r\n                firebase_service.addData(\"Mass\",{Name:value[0],Bank:value[1],IFSC:value[2]});\r\n              \r\n               \r\n                // this.Account_verification_childref.setState({init:true});\r\n            });\r\n          \r\n                var doc = await  firebase_service.addData('reports',{type:\"Mass Disbursement\",fileName:this.state.fileName});\r\n                for( var i in this.state.Mass)\r\n                {\r\n                    await firebase_service.addData(`${doc.path}/data`,{Name:this.state.Mass[i][0],Bank:this.state.Mass[i][1],IFSC:this.state.Mass[i][2],Amount:this.state.Mass[i][3]});\r\n                    \r\n                }\r\n            //    this.state.Mass.forEach(async (value,index)=>{\r\n                 \r\n            //        await firebase_service.addData(`${doc.path}/data`,{Name:value[0],Bank:value[1],IFSC:value[2],Amount:value[3]});\r\n            //        this.setState({finalPopUp:false});\r\n\r\n            //    });\r\n            \r\n             \r\n           \r\n            this.setState({toRepots:true});\r\n            this.props.reportRef.Fetch();\r\n            // setTimeout(()=>{\r\n               \r\n             \r\n\r\n            // },10000);\r\n            }}>Yes</Button>\r\n           \r\n            </Modal.Footer>\r\n          </Modal>);\r\n    }\r\n    UploadModel()\r\n    {\r\n        return ( <Modal\r\n            show={this.state.uploadFile}\r\n            onHide={(e)=>{\r\n                this.setState({uploadFile:false});\r\n            }}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Upload File</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             <input type=\"file\" id=\"xelfile\" onChange={async (e)=>{\r\n               this.setState({fileName:e.target.files[0].name});\r\n                const ref =await readXlsxFile(e.target.files[0]);\r\n                ref.forEach((value,index)=>{\r\n                    this.setState({total_Amount:this.state.total_Amount+parseInt(value[3])});\r\n                });\r\n                this.setState({temp:ref});\r\n             \r\n             }}></input>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={(e)=>{\r\n                  this.setState({uploadFile:false,Mass:this.state.temp,temp:[]});\r\n              }}>\r\n                Upload\r\n              </Button>\r\n             \r\n            </Modal.Footer>\r\n          </Modal>);\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n              {this.UploadModel()}\r\n              {this.SaveToRepots()}\r\n              {this.upload()}\r\n              {this.PopUp()}\r\n              <Fab\r\n        \r\n           icon={<FontAwesomeIcon icon={faArrowRight}/>}\r\n           onClick={()=>{\r\n     \r\n        this.setState({upload:true});\r\n        }}\r\n           >\r\n               \r\n           </Fab>\r\n            <Card>\r\n            <Card.Header ><OverlayTrigger className=\"dsd\"\r\n      key=\"bottom\"\r\n      placement=\"bottom\"\r\n      overlay={\r\n        <Tooltip id={`tooltip-$ Bottom`}>\r\n          Upload  <strong>XLXS only</strong>.\r\n        </Tooltip>\r\n      }\r\n    >\r\n    <Button variant=\"primary\" onClick={(e)=>{\r\n        this.setState({uploadFile:true});\r\n    }}>Upload File</Button>\r\n    </OverlayTrigger>\r\n    <Button className=\"mx-4\"  variant = \"info\" onClick={(e)=>{\r\n       this.setState({toRepots:true});\r\n    }} >\r\n        Save To Reports\r\n    </Button>\r\n    </Card.Header>\r\n                 <Card.Body>\r\n                            <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Id</th>\r\n                                        <th>Name</th>\r\n                                        <th>Bank Account Number</th>\r\n                                        <th>IFSC</th>\r\n                                        <th>Amount</th>\r\n                                     \r\n                                       \r\n                                        \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                   {this.state.Mass.map((value,index)=>{\r\n                                    if(index>0)\r\n                                    {\r\n                                       return (\r\n\r\n                                           <tr>\r\n                                               <td>\r\n                                                   {index}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value[0]}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value[1]}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value[2]}\r\n                                               </td>\r\n                                              \r\n                                               <td>\r\n                                                   {value[3]}\r\n    </td>\r\n   \r\n                                           </tr>\r\n                                       );\r\n                                    }\r\n                                    else{\r\n                                       return (<></>);\r\n                                    }\r\n                                   })}\r\n                               \r\n                                </tbody>\r\n                            </Table>\r\n\r\n                         \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </>\r\n\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, Button, Card, InputGroup, FormControl, Pagination, Modal,Form,Tab,Tabs,Row,Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlusCircle,faArrowRight,faEdit,faTrash,faCheckCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport Account_Verification from \"./compo/Account Verification/index\";\r\nimport Reports from \"./compo/Report/index\";\r\nimport \"./index.css\";\r\nimport firebase_service from \"../services/tempservice/firebase_services\";\r\nimport Mass_Disbursment from \"./compo/Mass Disbursment/index\";\r\n\r\nclass index extends Component{\r\n    payConfigModal= false;\r\n    addition=true;\r\n    bankDetailsModal= false;\r\n    totalPending=0;\r\n    \r\n    totalAmounttobe=0;\r\n    Account_verification_childref = null;\r\n    Reports_childref = null;\r\n    totalAmount=0;\r\n\r\n    state={\r\n        veriSta:false,\r\n        veriText:\"Not Verified\",\r\n        Proceed:false,\r\n        acVeri:false,\r\n        fileName:\"\",\r\n        beni:[],\r\n        toRepots:false,\r\n        editBeni:false,\r\n        Mass:[],\r\n        data:{entries:[],uploaddata:[]},\r\n        upload:false,\r\n        EditVa:{},\r\n       tempVal:{},\r\n       ProceedReal:false,\r\n       totalProceeddataAmount:{},\r\n       Proceeddata:[],\r\n       currentTab:\"Beni\",\r\n    };\r\n   async componentDidMount(){\r\n       var data = await firebase_service.retriveData(\"Benificary\");\r\n       data.forEach((value,index)=>{\r\n           var temp = value.data();\r\n           var templist = this.state.beni;\r\n           templist.push({Name:temp.Name,Bank_Number:temp.Bank_Number,IFSC_code:temp.IFSC_code,docid:value.ref.path,veriStatus:temp.veriStatus,Bank_Name:temp.Bank_Name});\r\n           this.setState({beni:templist});\r\n\r\n       });\r\n    }\r\n    VerificationModel()\r\n    {\r\n        return (<Modal show={this.state.veriSta} onHide={()=>{\r\n            this.setState({veriSta:false});\r\n        }}>\r\n            <Modal.Header closeButton>\r\n              Info\r\n            </Modal.Header>\r\n      <Modal.Body>Beneficiary Added it will take 24 Hours to start Payment</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={()=>{\r\n                  this.setState({veriSta:false});\r\n              }}>\r\n            Close\r\n              </Button>\r\n              \r\n            </Modal.Footer>\r\n          </Modal>);\r\n    }\r\n     SaveToRepots()\r\n    {\r\n        return (<Modal show={this.state.toRepots} onHide={()=>{\r\n            this.setState({toRepots:false});\r\n        }}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Want to Save Data to the Report</Modal.Title>\r\n            </Modal.Header>\r\n      \r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={()=>{\r\n                  this.setState({toRepots:false});\r\n              }}>\r\n                No\r\n              </Button>\r\n              <Button variant=\"success\" onClick={async ()=>{\r\n                   var doc = await  firebase_service.addData('reports',{type:\"Account Verification\",fileName:this.state.fileName});\r\n                 for(var i in this.state.data.uploaddata)\r\n                 {\r\n                     if(this.state.data.uploaddata[i][0]!=\"Name\")\r\n                    await firebase_service.addData(`${doc.path}/data`,{Name:this.state.data.uploaddata[i][0],Bank:this.state.data.uploaddata[i][1],IFSC:this.state.data.uploaddata[i][2],VerificationStatus:\"Verified\"});\r\n                 } \r\n               \r\n                this.setState({toRepots:false});\r\n                this.Reports_childref.Fetch();\r\n              }}>\r\n                Yes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>);\r\n    }\r\n    Edit()\r\n     {\r\n         return ( <Modal\r\n        show={this.state.editBeni}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            onHide={()=>{\r\n                this.setState({editBeni:false});\r\n            }}\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Edit Benificary\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter Name\"  />\r\n    \r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Bank Account Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter Bank Account Number\"  />\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>IFSC Code</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter IFSC Code\"  />\r\n  </Form.Group>\r\n  \r\n</Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"info\">Save</Button>\r\n            <Button variant=\"danger\">Cancel</Button>\r\n            </Modal.Footer>\r\n          </Modal>);\r\n     }\r\n    Proceed()\r\n    {\r\n        return (\r\n\r\n            <Modal show={this.state.ProceedReal} onHide={(e)=>{\r\n                this.setState({ProceedReal:false});\r\n            }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Proceed</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"inputGroup-sizing-default\" >Number Of Beneficiaries</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl\r\n      aria-label=\"Default\"\r\n      aria-describedby=\"inputGroup-sizing-default\"\r\n      value={this.state.Proceeddata.length}\r\n      readOnly\r\n    />\r\n  </InputGroup>\r\n  <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"inputGroup-sizing-default\" >Total Amount</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl\r\n      aria-label=\"Default\"\r\n      aria-describedby=\"inputGroup-sizing-default\"\r\n    \r\n      value={Object.keys(this.state.totalProceeddataAmount).reduce((acc, value) => acc + parseInt(this.state.totalProceeddataAmount[value]), 0)}\r\n      readOnly\r\n    />\r\n  </InputGroup></Modal.Body>\r\n        <Modal.Footer>\r\n        <Button variant=\"danger\">Cancel</Button>\r\n        <Button variant=\"success\" onClick={(e)=>{\r\n            var indexs = this.state.Proceeddata;\r\n            var temp = [];\r\n            indexs.forEach((value,index)=>{\r\n                temp.push(this.state.beni[value]);\r\n            });\r\n            temp.forEach((value,index)=>{\r\n                firebase_service.addData('BeniSettled',value);\r\n                console.log(value.docid);\r\n                firebase_service.deleteData(value.docid);\r\n            });\r\n            \r\n            indexs.forEach((value,index1)=>{\r\n            let temp = this.state.beni;\r\n            temp = temp.filter((value1,index)=>value!=index);\r\n            this.setState({beni:temp});\r\n            });\r\n            this.setState({ProceedReal:false});\r\n\r\n        }}>Proceed</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        );\r\n    }\r\n    upload(){\r\n        return ( <Modal show={this.state.upload} onHide={(e)=>{\r\n            this.setState({upload:false});\r\n        }}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Want to Verify Accounts</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><Card>\r\n  <Card.Body>Number of Entries {this.state.data.entries.length}</Card.Body>\r\n</Card></Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"danger\">No</Button>\r\n            <Button variant=\"success\" onClick={(e)=>{\r\n                this.setState({upload:false});\r\n            this.state.data.uploaddata.forEach((value,index)=>{\r\n                firebase_service.addData(\"Account_verification\",{Name:value[0],Bank:value[1],IFSC:value[2],VerificationStatus:\"Verified\"});\r\n               \r\n               \r\n                this.Account_verification_childref.setState({init:true});\r\n            });\r\n            setTimeout(()=>{\r\n                this.Account_verification_childref.setState({val:\"Verified\"});\r\n                this.setState({toRepots:true});\r\n\r\n            },10000);\r\n            }}>Yes</Button>\r\n           \r\n            </Modal.Footer>\r\n          </Modal>);\r\n    }\r\n    render(){\r\n    return (\r\n        <>\r\n        {this.VerificationModel()}\r\n        {this.SaveToRepots()}\r\n        {this.Edit()}\r\n        {this.Proceed()}\r\n        {this.upload()}\r\n        {this.state.currentTab==((\"Beni\"))?<Fab\r\n        \r\n           icon={<FontAwesomeIcon icon={this.state.currentTab===\"Beni\"?faPlusCircle:faArrowRight} />}\r\n           onClick={()=>{\r\n               if(this.state.currentTab===\"Beni\")\r\n               this.setState({Proceed:true});\r\n               else if(this.state.currentTab===\"verification\")\r\n               this.setState({upload:true});\r\n        \r\n        }}\r\n           >\r\n               \r\n           </Fab>:this.state.currentTab==\"verification\"?<Fab\r\n        \r\n        icon={<FontAwesomeIcon icon={this.state.currentTab===\"Beni\"?faPlusCircle:faArrowRight} />}\r\n        onClick={()=>{\r\n            if(this.state.currentTab===\"Beni\")\r\n            this.setState({Proceed:true});\r\n            else if(this.state.currentTab===\"verification\")\r\n            this.setState({upload:true});\r\n     \r\n     }}\r\n        >\r\n            \r\n        </Fab>:<></>}\r\n            <Helmet>\r\n                <title>Disbursement</title>\r\n                <meta name=\"description\" content=\"Helmet application\" />\r\n            </Helmet>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"mt-3\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <h3 className=\"mb-0\">Disbursement</h3>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <InputGroup className=\"mb-0\">\r\n                                        <FormControl\r\n                                            placeholder=\"search here...\"\r\n                                            aria-label=\"search here...\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                        />\r\n                                        <InputGroup.Append>\r\n                                            <Button variant=\"outline-secondary\">Search</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                <Tabs defaultActiveKey=\"Beni\" id=\"uncontrolled-tab-example\"  onSelect={(e)=>\r\n                {\r\n                    this.setState({currentTab:e});\r\n                  \r\n                }}>\r\n  <Tab eventKey=\"Beni\" title=\"Beneficiaries\">\r\n  <Card>\r\n      <Card.Header><Row><Col><Button  variant=\"primary\" onClick={(e)=>{\r\n\r\nthis.setState({Proceed:true});\r\n\r\n}}>Add Benificary</Button></Col><Col ><Button className='end' variant=\"primary\" onClick={(e)=>{\r\n\r\n    this.setState({ProceedReal:true});\r\n\r\n}}>Proceed</Button></Col></Row></Card.Header>\r\n                    \r\n                        <Card.Body>\r\n                            <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Benficary Id</th>\r\n                                        <th>Beneficiary Name</th>\r\n                                        <th>Bank Name</th>\r\n                                        <th>Bank Account Number</th>\r\n                                        <th>IFSC Code</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Verification Status</th>\r\n                                        <th>Select All <input type=\"checkbox\"></input></th>\r\n                                        <th>Manage</th>\r\n                                        \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                   {this.state.beni.map((value,index)=>{\r\n                                      \r\n                                       \r\n                                       return (\r\n                                           <tr id={index}>\r\n                                               <td>\r\n                                                   {index+1}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.Name}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.Bank_Name}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.Bank_Number}\r\n                                               </td>\r\n                                               <td>\r\n                                                   {value.IFSC_code}\r\n                                               </td>\r\n                                              <td> {value.veriStatus==\"Verified\"?<Form.Group controlId=\"formBasicEmail\">\r\n    \r\n    <Form.Control type=\"text\" placeholder=\"Enter Amount\" id={`amount+${index}`} onChange={(e)=>{\r\n        if(this.state.Proceeddata.includes(index))\r\n        {\r\n       var amount  = this.state.totalProceeddataAmount;\r\n       amount[index]=e.target.value;\r\n       value.amount=amount[index];\r\n       this.setState({totalProceeddataAmount:amount});\r\n        }\r\n    }}/>\r\n   \r\n  </Form.Group>:<Button variant=\"warning\" onClick={(e)=>{\r\n      firebase_service.updateData(value.docid,{veriStatus:\"Verified\"});\r\n      let temp = this.state.beni;\r\n      temp[index].veriStatus=\"Verified\";\r\n      this.setState({beni:temp});\r\n  }}>Verify</Button>}</td>\r\n  <td>{value.veriStatus==\"Verified\"?<div style={{color:\"green\"}}>Verified <FontAwesomeIcon icon = {faCheckCircle} /> </div>:<div style={{color:\"red\"}}>Not Verified</div>}</td>\r\n                                              <td>\r\n                                                 \r\n                                                  <input type=\"checkbox\" onChange={(e)=>{\r\n                                                      if(e.target.checked)\r\n                                                      {\r\n                                                          let temp = this.state.Proceeddata;\r\n                                                          temp.push(index);\r\n                                                          this.setState({Proceeddata:temp});\r\n                                                          if(this.state.Proceeddata.includes(index))\r\n        {\r\n       var amount  = this.state.totalProceeddataAmount;\r\n       amount[index]=document.getElementById(`amount+${index}`).value;\r\n       this.setState({totalProceeddataAmount:amount});\r\n        }\r\n                                                      }\r\n                                                      else\r\n                                                      {\r\n                                                        let temp = this.state.Proceeddata;\r\n                                                        temp=temp.filter((value1,index)=>value1!=index);\r\n                                                        this.setState({Proceeddata:temp});\r\n                                                        if(this.state.Proceeddata.includes(index))\r\n        {\r\n       var amount  = this.state.totalProceeddataAmount;\r\n       amount[index]=0;\r\n       this.setState({totalProceeddataAmount:amount});\r\n        }\r\n\r\n                                                      }\r\n                                                  }}></input>\r\n                                              </td>\r\n                                              <td>\r\n                                              <Button variant=\"warning\" className=\"mx-1\" onClick={(e)=>{\r\n                                                  this.setState({editBeni:true});\r\n                                              }}><FontAwesomeIcon icon={faEdit}></FontAwesomeIcon></Button>\r\n                                              <Button variant=\"danger\" onClick={async (e)=>{\r\n                                                  var temp = this.state.beni;\r\n                                                  temp=temp.filter((value,index1)=>index!=index1);\r\n\r\n                                                  await firebase_service.deleteData(value.docid);\r\n                                                  this.setState({beni:temp});\r\n\r\n                                              }}><FontAwesomeIcon icon={faTrash}></FontAwesomeIcon></Button>\r\n                                              </td>\r\n                                           </tr>\r\n                                       );\r\n                                   })}\r\n                                   {(()=>{\r\n                                       this.addition=false;\r\n                                   })()}\r\n                                  \r\n                                </tbody>\r\n                            </Table>\r\n\r\n                           \r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n  </Tab>\r\n  <Tab eventKey=\"Mass\" title=\"Mass Disbursement\">\r\n  <Mass_Disbursment reportRef ={this.Reports_childref}></Mass_Disbursment>\r\n  </Tab>\r\n  <Tab eventKey=\"report\" title=\"Reports\">\r\n      <Reports addRef={(e)=>{\r\n          this.Reports_childref=e;\r\n      }}></Reports>\r\n  </Tab>\r\n  <Tab eventKey=\"verification\" title=\"Account Verification\">\r\n      <Account_Verification reportRef ={this.Reports_childref} toReportOn = {()=>{\r\n          this.setState({toRepots:true});\r\n      }} toReportOff={()=>{\r\n          this.setState({toRepots:false});\r\n      }} setFile={(e)=>{\r\n          this.setState({fileName:e});\r\n      }} removeall={()=>{\r\n          this.setState({data:{uploaddata:[],entries:[]}});\r\n      }} getRef = {(e)=>{\r\n          this.Account_verification_childref=e;\r\n      }} remove = {(dataremove,tobe1)=>{\r\n          var dataref = this.state.data.uploaddata;\r\n          var toberef = this.state.data.entries;\r\n          dataref=dataref.filter((value1,index)=>value1[0]!=dataremove[0]&&value1[1]!=dataremove[1]&&value1[2]!=dataremove[2]);\r\n          toberef=tobe1;\r\n          this.setState({data:{uploaddata:dataref,entries:toberef}});\r\n      }} add = {(dataadd,tobe1)=>{\r\n        var dataref = this.state.data.uploaddata;\r\n        var toberef = this.state.data.entries;\r\n        dataref.push(dataadd);\r\n        toberef=tobe1;\r\n          this.setState({data:{uploaddata:dataref,entries:toberef}});\r\n      }}></Account_Verification>\r\n</Tab>\r\n</Tabs>\r\n                   \r\n                </div>\r\n            </div>\r\n            <Modal\r\n                size=\"lg\"\r\n                show={this.state.Proceed}\r\n                onHide={()=>{this.setState({Proceed:false,acVeri:false});}}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">Add Beneficiary</Modal.Title>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form>\r\n  <Form.Group controlId=\"formBasicName\">\r\n    <Form.Label>Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter Name\"  onChange={(e)=>{\r\n        var val = this.state.tempVal;\r\n        val.Name=e.target.value;\r\n        this.setState({tempVal:val});\r\n    }} />\r\n    \r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicAccNo\">\r\n    <Form.Label>Bank Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter Bank Name\" onChange={(e)=>{\r\n           var val = this.state.tempVal;\r\n           val.Bank_Name=e.target.value;\r\n           this.setState({tempVal:val});\r\n    }} />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicAccNo\">\r\n    <Form.Label>Bank Account Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter Bank Account Number\" onChange={(e)=>{\r\n           var val = this.state.tempVal;\r\n           val.Bank_Number=e.target.value;\r\n           this.setState({tempVal:val});\r\n    }} />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicIFSC\">\r\n    <Form.Label>Bank IFSC Code</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter IFSC Code\" onChange={(e)=>{\r\n           var val = this.state.tempVal;\r\n           val.IFSC_code=e.target.value;\r\n           this.setState({tempVal:val});\r\n    }}/>\r\n  </Form.Group>\r\n \r\n \r\n</Form>\r\n                </Modal.Body>\r\n                <Modal.Footer><Button style={{marginRight:\"80%\"}} variant=\"success\" onClick={(e)=>{\r\n     \r\n      this.setState({acVeri:true});\r\n      \r\n  }}>\r\n      {this.state.acVeri?\"Verified\":\"Verify\"}\r\n  </Button><Button variant=\"primary\" onClick={async (e)=>{\r\n      var temp = this.state.beni;\r\n      var ref = await firebase_service.addData(\"Benificary\",{Name:this.state.tempVal.Name,Bank_Number:this.state.tempVal.Bank_Number,IFSC_code:this.state.tempVal.IFSC_code,Bank_Name:this.state.tempVal.Bank_Name,veriStatus:this.state.acVeri?\"Verified\":\"Not Verified\"});\r\n      temp.push({Name:this.state.tempVal.Name,Bank_Number:this.state.tempVal.Bank_Number,IFSC_code:this.state.tempVal.IFSC_code,docid:ref.path,veriStatus:this.state.acVeri?\"Verified\":\"Not Verified\",Bank_Name:this.state.tempVal.Bank_Name});\r\n      this.setState({veriSta:this.state.acVeri?true:false});\r\n      this.setState({beni:temp,Proceed:false,acVeri:false,});\r\n      \r\n  }}>\r\n    Add\r\n  </Button></Modal.Footer>\r\n            </Modal>\r\n            \r\n        </>);\r\n    } \r\n    toggle_payconfig=(value=true)=>{\r\n        if(!value)\r\n        this.payConfigModal=false;\r\n        else\r\n        this.payConfigModal=true;\r\n    };\r\n    toggle_bankDetails=(value=true)=>{\r\n        if(!value)\r\n        this.bankDetailsModal=false;\r\n        else\r\n        this.bankDetailsModal=true;\r\n    };\r\n}\r\n\r\n\r\nexport default index;","// import logo from './logo.svg';\r\nimport './App.css';\r\n// import Navbar from './modules/navbar/index'\r\n// import { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n// import Dashboard from './modules/dashboard/index';\r\nimport Merchant from './modules/merchant/index';\r\nimport Transactions from './modules/transactions/index';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport NavBar from \"./modules/navbar/index\";\r\nimport BankPartners from \"./modules/bank_partners/index\";\r\nimport ServiceProviders from \"./modules/service_provider/index\";\r\nimport Referral from \"./modules/referral_partners/index\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Sabpaisa from './modules/sabpaisa_holding_banks/index';\r\nimport Settlement from './modules/settlement/index';\r\nimport Login from \"./modules/login/index\";\r\nimport Dashboard from \"./modules/dashboard/index\";\r\nimport SBAFMS from \"./modules/Single bank account fund management system/index\";\r\nimport User from \"./modules/User Management/index\";\r\nimport Disbursement from \"./modules/Disbursment/index\";\r\n\r\n// import { library } from '@fortawesome/fontawesome-svg-core'\r\n// import { fab } from '@fortawesome/free-brands-svg-icons'\r\n// import { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// library.add(fab, faCheckSquare, faCoffee)\r\n\r\n// signle bank account fund management system(sbafms)\r\n// benficary\r\n// contracter\r\n// laborur\r\n// upload files\r\n// sp payout\r\n\r\nfunction App() {\r\n\r\n  return (\r\n\r\n    <>\r\n      {/* <Navbar /> */}\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\"  >  <Login /></Route>\r\n        <Route exact path=\"/dashboard\"><NavBar current={\"dashboard\"}/><Dashboard /></Route>\r\n        <Route exact path=\"/merchant\" > <NavBar current={\"merchant\"}/><Merchant /></Route>\r\n        <Route exact path=\"/banks_partners\" > <NavBar current={\"bankpartner\"} /><BankPartners /></Route>\r\n        <Route exact path=\"/transactions\" > <NavBar current={\"transactions\"}/><Transactions /></Route>\r\n        <Route exact path='/service_providers'> <NavBar current={\"serviceproviders\"}/><ServiceProviders /></Route>\r\n        <Route exact path=\"/referral_partners\" > <NavBar current={\"referral\"}/><Referral /></Route>\r\n        <Route exact path=\"/sabpaisa_holding_bank\" > <NavBar current={\"sabpaisa\"}/><Sabpaisa /></Route>\r\n        <Route exact path=\"/settlements\" > <NavBar current={\"settlement\"}/><Settlement /></Route>\r\n        <Route exact path=\"/sbamfs\" > <NavBar current={\"SBAFMS\"}/><SBAFMS /></Route>\r\n        <Route exact path=\"/users\"> <NavBar current={\"User\"} /> <User /> </Route>\r\n        <Route exact path = \"/disbursement\"><NavBar current={\"disbursement\"} /><Disbursement /></Route>\r\n  \r\n\r\n        {/* <Route path=\"/\">\r\n          <Home />\r\n        </Route> */}\r\n      </Switch>\r\n\r\n      {/* <Dashboard /> */}\r\n\r\n      {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header> */}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initState = {\r\n\r\n   user:{\r\n       email:localStorage.getItem('email'),\r\n       name:localStorage.getItem('name'),\r\n   },\r\n\r\n};\r\n\r\nconst reducer1 = (state=initState,action)=>{\r\n    console.log(localStorage.getItem('user'));\r\n    if(action.type==\"AUTH\")\r\n    {\r\n        \r\n    return {\r\n        ...state,\r\n        user:{\r\n            name:action.user.name,\r\n            email:action.user.email,\r\n            \r\n        }\r\n    }\r\n    }\r\n    else if(action.type==\"AUTH_Logout\")\r\n\r\n    return {\r\n        user:{\r\n            email:'null',\r\n            name:'null'\r\n        },\r\n    }\r\n    else\r\n    return state;\r\n}\r\n\r\nexport default reducer1;","const firebaseConfig = {\r\n  apiKey: \"AIzaSyCDKmh-MqZRJ5r1eZn8H9FzIlUaKJE52n8\",\r\n  authDomain: \"settlepaisa12213.firebaseapp.com\",\r\n  projectId: \"settlepaisa12213\",\r\n  storageBucket: \"settlepaisa12213.appspot.com\",\r\n  messagingSenderId: \"261976701552\",\r\n  appId: \"1:261976701552:web:3f367c43b6a68e0bc592b5\",\r\n  measurementId: \"G-40P65L58HV\"\r\n\r\n  };\r\n\r\nexport default firebaseConfig;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducer1 from \"./modules/reducer/reducer1\";\r\nimport firebase from \"firebase\";\r\nimport firebaseConfig from './modules/services/tempservice/firebase_config';\r\nfirebase.initializeApp(firebaseConfig);\r\nconst store = createStore(reducer1);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}><App /></Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}